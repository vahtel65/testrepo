#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aspect.Domain
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="aspect")]
	public partial class CommonDomain : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTreeViewResult(TreeViewResult instance);
    partial void UpdateTreeViewResult(TreeViewResult instance);
    partial void DeleteTreeViewResult(TreeViewResult instance);
    partial void InsertClassificationTree(ClassificationTree instance);
    partial void UpdateClassificationTree(ClassificationTree instance);
    partial void DeleteClassificationTree(ClassificationTree instance);
    partial void InsertRoleViewPermission(RoleViewPermission instance);
    partial void UpdateRoleViewPermission(RoleViewPermission instance);
    partial void DeleteRoleViewPermission(RoleViewPermission instance);
    partial void InsertClassificationTreeProduct(ClassificationTreeProduct instance);
    partial void UpdateClassificationTreeProduct(ClassificationTreeProduct instance);
    partial void DeleteClassificationTreeProduct(ClassificationTreeProduct instance);
    partial void InsertConfigurationUserField(ConfigurationUserField instance);
    partial void UpdateConfigurationUserField(ConfigurationUserField instance);
    partial void DeleteConfigurationUserField(ConfigurationUserField instance);
    partial void InsertConfigurationUserProperty(ConfigurationUserProperty instance);
    partial void UpdateConfigurationUserProperty(ConfigurationUserProperty instance);
    partial void DeleteConfigurationUserProperty(ConfigurationUserProperty instance);
    partial void InsertCustomClassificationNode(CustomClassificationNode instance);
    partial void UpdateCustomClassificationNode(CustomClassificationNode instance);
    partial void DeleteCustomClassificationNode(CustomClassificationNode instance);
    partial void InsertCustomClassificationNodeProduct(CustomClassificationNodeProduct instance);
    partial void UpdateCustomClassificationNodeProduct(CustomClassificationNodeProduct instance);
    partial void DeleteCustomClassificationNodeProduct(CustomClassificationNodeProduct instance);
    partial void InsertCustomClassificationTree(CustomClassificationTree instance);
    partial void UpdateCustomClassificationTree(CustomClassificationTree instance);
    partial void DeleteCustomClassificationTree(CustomClassificationTree instance);
    partial void InsertDictionary(Dictionary instance);
    partial void UpdateDictionary(Dictionary instance);
    partial void DeleteDictionary(Dictionary instance);
    partial void InsertDictionaryUserField(DictionaryUserField instance);
    partial void UpdateDictionaryUserField(DictionaryUserField instance);
    partial void DeleteDictionaryUserField(DictionaryUserField instance);
    partial void InsertFieldPlaceHolder(FieldPlaceHolder instance);
    partial void UpdateFieldPlaceHolder(FieldPlaceHolder instance);
    partial void DeleteFieldPlaceHolder(FieldPlaceHolder instance);
    partial void InsertFormGridView(FormGridView instance);
    partial void UpdateFormGridView(FormGridView instance);
    partial void DeleteFormGridView(FormGridView instance);
    partial void InsertPermissionEntity(PermissionEntity instance);
    partial void UpdatePermissionEntity(PermissionEntity instance);
    partial void DeletePermissionEntity(PermissionEntity instance);
    partial void InsertProductProperty(ProductProperty instance);
    partial void UpdateProductProperty(ProductProperty instance);
    partial void DeleteProductProperty(ProductProperty instance);
    partial void InsertProperty(Property instance);
    partial void UpdateProperty(Property instance);
    partial void DeleteProperty(Property instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void Insert_dictH(_dictH instance);
    partial void Update_dictH(_dictH instance);
    partial void Delete_dictH(_dictH instance);
    partial void InsertType(Type instance);
    partial void UpdateType(Type instance);
    partial void DeleteType(Type instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserField(UserField instance);
    partial void UpdateUserField(UserField instance);
    partial void DeleteUserField(UserField instance);
    partial void InsertUserMenuItem(UserMenuItem instance);
    partial void UpdateUserMenuItem(UserMenuItem instance);
    partial void DeleteUserMenuItem(UserMenuItem instance);
    partial void InsertUserMenuType(UserMenuType instance);
    partial void UpdateUserMenuType(UserMenuType instance);
    partial void DeleteUserMenuType(UserMenuType instance);
    partial void InsertUserProperty(UserProperty instance);
    partial void UpdateUserProperty(UserProperty instance);
    partial void DeleteUserProperty(UserProperty instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    partial void InsertConfiguration(Configuration instance);
    partial void UpdateConfiguration(Configuration instance);
    partial void DeleteConfiguration(Configuration instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void Insert_dictNomen(_dictNomen instance);
    partial void Update_dictNomen(_dictNomen instance);
    partial void Delete_dictNomen(_dictNomen instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    partial void InsertUserSetting(UserSetting instance);
    partial void UpdateUserSetting(UserSetting instance);
    partial void DeleteUserSetting(UserSetting instance);
    partial void InsertDictionaryProperty(DictionaryProperty instance);
    partial void UpdateDictionaryProperty(DictionaryProperty instance);
    partial void DeleteDictionaryProperty(DictionaryProperty instance);
    partial void Insert_dict(_dict instance);
    partial void Update_dict(_dict instance);
    partial void Delete_dict(_dict instance);
    partial void Insert_dictS_te(_dictS_te instance);
    partial void Update_dictS_te(_dictS_te instance);
    partial void Delete_dictS_te(_dictS_te instance);
    partial void InsertDictionaryTree(DictionaryTree instance);
    partial void UpdateDictionaryTree(DictionaryTree instance);
    partial void DeleteDictionaryTree(DictionaryTree instance);
    partial void Insert_dictPVD(_dictPVD instance);
    partial void Update_dictPVD(_dictPVD instance);
    partial void Delete_dictPVD(_dictPVD instance);
    partial void Insert_dictUM(_dictUM instance);
    partial void Update_dictUM(_dictUM instance);
    partial void Delete_dictUM(_dictUM instance);
    partial void Insert_dictSF(_dictSF instance);
    partial void Update_dictSF(_dictSF instance);
    partial void Delete_dictSF(_dictSF instance);
    partial void InsertOrderArticle(OrderArticle instance);
    partial void UpdateOrderArticle(OrderArticle instance);
    partial void DeleteOrderArticle(OrderArticle instance);
    partial void InsertSpecification_1(Specification_1 instance);
    partial void UpdateSpecification_1(Specification_1 instance);
    partial void DeleteSpecification_1(Specification_1 instance);
    partial void InsertSpecification_2(Specification_2 instance);
    partial void UpdateSpecification_2(Specification_2 instance);
    partial void DeleteSpecification_2(Specification_2 instance);
    partial void InsertSpecification_3(Specification_3 instance);
    partial void UpdateSpecification_3(Specification_3 instance);
    partial void DeleteSpecification_3(Specification_3 instance);
    partial void InsertColumnWidth(ColumnWidth instance);
    partial void UpdateColumnWidth(ColumnWidth instance);
    partial void DeleteColumnWidth(ColumnWidth instance);
    partial void InsertTechnDate(TechnDate instance);
    partial void UpdateTechnDate(TechnDate instance);
    partial void DeleteTechnDate(TechnDate instance);
    partial void InsertTechnReadiness(TechnReadiness instance);
    partial void UpdateTechnReadiness(TechnReadiness instance);
    partial void DeleteTechnReadiness(TechnReadiness instance);
    #endregion
		
		public CommonDomain(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommonDomain(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommonDomain(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommonDomain(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TreeViewResult> TreeViewResults
		{
			get
			{
				return this.GetTable<TreeViewResult>();
			}
		}
		
		public System.Data.Linq.Table<ClassificationTree> ClassificationTrees
		{
			get
			{
				return this.GetTable<ClassificationTree>();
			}
		}
		
		public System.Data.Linq.Table<RoleViewPermission> RoleViewPermissions
		{
			get
			{
				return this.GetTable<RoleViewPermission>();
			}
		}
		
		public System.Data.Linq.Table<ClassificationTreeProduct> ClassificationTreeProducts
		{
			get
			{
				return this.GetTable<ClassificationTreeProduct>();
			}
		}
		
		public System.Data.Linq.Table<ConfigurationUserField> ConfigurationUserFields
		{
			get
			{
				return this.GetTable<ConfigurationUserField>();
			}
		}
		
		public System.Data.Linq.Table<ConfigurationUserProperty> ConfigurationUserProperties
		{
			get
			{
				return this.GetTable<ConfigurationUserProperty>();
			}
		}
		
		public System.Data.Linq.Table<CustomClassificationNode> CustomClassificationNodes
		{
			get
			{
				return this.GetTable<CustomClassificationNode>();
			}
		}
		
		public System.Data.Linq.Table<CustomClassificationNodeProduct> CustomClassificationNodeProducts
		{
			get
			{
				return this.GetTable<CustomClassificationNodeProduct>();
			}
		}
		
		public System.Data.Linq.Table<CustomClassificationTree> CustomClassificationTrees
		{
			get
			{
				return this.GetTable<CustomClassificationTree>();
			}
		}
		
		public System.Data.Linq.Table<Dictionary> Dictionaries
		{
			get
			{
				return this.GetTable<Dictionary>();
			}
		}
		
		public System.Data.Linq.Table<DictionaryUserField> DictionaryUserFields
		{
			get
			{
				return this.GetTable<DictionaryUserField>();
			}
		}
		
		public System.Data.Linq.Table<FieldPlaceHolder> FieldPlaceHolders
		{
			get
			{
				return this.GetTable<FieldPlaceHolder>();
			}
		}
		
		public System.Data.Linq.Table<FormGridView> FormGridViews
		{
			get
			{
				return this.GetTable<FormGridView>();
			}
		}
		
		public System.Data.Linq.Table<PermissionEntity> PermissionEntities
		{
			get
			{
				return this.GetTable<PermissionEntity>();
			}
		}
		
		public System.Data.Linq.Table<ProductProperty> ProductProperties
		{
			get
			{
				return this.GetTable<ProductProperty>();
			}
		}
		
		public System.Data.Linq.Table<Property> Properties
		{
			get
			{
				return this.GetTable<Property>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<_dictH> _dictHs
		{
			get
			{
				return this.GetTable<_dictH>();
			}
		}
		
		public System.Data.Linq.Table<Type> Types
		{
			get
			{
				return this.GetTable<Type>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserField> UserFields
		{
			get
			{
				return this.GetTable<UserField>();
			}
		}
		
		public System.Data.Linq.Table<UserMenuItem> UserMenuItems
		{
			get
			{
				return this.GetTable<UserMenuItem>();
			}
		}
		
		public System.Data.Linq.Table<UserMenuType> UserMenuTypes
		{
			get
			{
				return this.GetTable<UserMenuType>();
			}
		}
		
		public System.Data.Linq.Table<UserProperty> UserProperties
		{
			get
			{
				return this.GetTable<UserProperty>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<Configuration> Configurations
		{
			get
			{
				return this.GetTable<Configuration>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<_dictNomen> _dictNomens
		{
			get
			{
				return this.GetTable<_dictNomen>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
		
		public System.Data.Linq.Table<UserSetting> UserSettings
		{
			get
			{
				return this.GetTable<UserSetting>();
			}
		}
		
		public System.Data.Linq.Table<DictionaryProperty> DictionaryProperties
		{
			get
			{
				return this.GetTable<DictionaryProperty>();
			}
		}
		
		public System.Data.Linq.Table<_dict> _dicts
		{
			get
			{
				return this.GetTable<_dict>();
			}
		}
		
		public System.Data.Linq.Table<_dictS_te> _dictS_tes
		{
			get
			{
				return this.GetTable<_dictS_te>();
			}
		}
		
		public System.Data.Linq.Table<DictionaryTree> DictionaryTrees
		{
			get
			{
				return this.GetTable<DictionaryTree>();
			}
		}
		
		public System.Data.Linq.Table<_dictPVD> _dictPVDs
		{
			get
			{
				return this.GetTable<_dictPVD>();
			}
		}
		
		public System.Data.Linq.Table<_dictUM> _dictUMs
		{
			get
			{
				return this.GetTable<_dictUM>();
			}
		}
		
		public System.Data.Linq.Table<_dictSF> _dictSFs
		{
			get
			{
				return this.GetTable<_dictSF>();
			}
		}
		
		public System.Data.Linq.Table<OrderArticle> OrderArticles
		{
			get
			{
				return this.GetTable<OrderArticle>();
			}
		}
		
		public System.Data.Linq.Table<Specification_1> Specification_1s
		{
			get
			{
				return this.GetTable<Specification_1>();
			}
		}
		
		public System.Data.Linq.Table<Specification_2> Specification_2s
		{
			get
			{
				return this.GetTable<Specification_2>();
			}
		}
		
		public System.Data.Linq.Table<Specification_3> Specification_3s
		{
			get
			{
				return this.GetTable<Specification_3>();
			}
		}
		
		public System.Data.Linq.Table<ColumnWidth> ColumnWidths
		{
			get
			{
				return this.GetTable<ColumnWidth>();
			}
		}
		
		public System.Data.Linq.Table<TechnDate> TechnDates
		{
			get
			{
				return this.GetTable<TechnDate>();
			}
		}
		
		public System.Data.Linq.Table<TechnReadiness> TechnReadinesses
		{
			get
			{
				return this.GetTable<TechnReadiness>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetClassificationTreeChilds")]
		public ISingleResult<GetClassificationTreeChildsResult> GetClassificationTreeChilds([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassificationTreeID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> classificationTreeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), classificationTreeID);
			return ((ISingleResult<GetClassificationTreeChildsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDictionaryTreeChilds")]
		public ISingleResult<TreeViewResult> GetDictionaryTreeChilds([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DictionaryTreeID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dictionaryTreeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dictionaryTreeID);
			return ((ISingleResult<TreeViewResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCustomClassificationTreeChilds")]
		public ISingleResult<GetCustomClassificationTreeChildsResult> GetCustomClassificationTreeChilds([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomClassificationTreeID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> customClassificationTreeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customClassificationTreeID);
			return ((ISingleResult<GetCustomClassificationTreeChildsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDictionaryTreeParents")]
		public ISingleResult<GetDictionaryTreeParentsResult> GetDictionaryTreeParents([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DictionaryTreeID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dictionaryTreeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dictionaryTreeID);
			return ((ISingleResult<GetDictionaryTreeParentsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNomenSuperField")]
		public ISingleResult<GetNomenSuperFieldResult> GetNomenSuperField([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _dictP1STID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _dictGOSTID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PN1", DbType="NVarChar(100)")] string pN1, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PN2_2", DbType="NVarChar(100)")] string pN2_2)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _dictP1STID, _dictGOSTID, pN1, pN2_2);
			return ((ISingleResult<GetNomenSuperFieldResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNomenSuperFieldUa")]
		public ISingleResult<GetNomenSuperFieldUaResult> GetNomenSuperFieldUa([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _dictP1STID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _dictGOSTID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PN1", DbType="NVarChar(50)")] string pN1, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PN2_2", DbType="NVarChar(20)")] string pN2_2)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _dictP1STID, _dictGOSTID, pN1, pN2_2);
			return ((ISingleResult<GetNomenSuperFieldUaResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TreeViewResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _Level;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    #endregion
		
		public TreeViewResult()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Level", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassificationTree")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ClassificationTree : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private string _Name;
		
		private string _Image;
		
		private System.Nullable<int> _cod_Asp;
		
		private EntitySet<ClassificationTree> _ClassificationTrees;
		
		private EntitySet<ClassificationTreeProduct> _ClassificationTreeProducts;
		
		private EntitySet<CustomClassificationTree> _CustomClassificationTrees;
		
		private EntityRef<ClassificationTree> _ClassificationTree1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void Oncod_AspChanging(System.Nullable<int> value);
    partial void Oncod_AspChanged();
    #endregion
		
		public ClassificationTree()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._ClassificationTree1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod_Asp", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> cod_Asp
		{
			get
			{
				return this._cod_Asp;
			}
			set
			{
				if ((this._cod_Asp != value))
				{
					this.Oncod_AspChanging(value);
					this.SendPropertyChanging();
					this._cod_Asp = value;
					this.SendPropertyChanged("cod_Asp");
					this.Oncod_AspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassificationTree_ClassificationTree", Storage="_ClassificationTrees", ThisKey="ID", OtherKey="ParentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<ClassificationTree> ClassificationTrees
		{
			get
			{
				if ((this.serializing 
							&& (this._ClassificationTrees.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ClassificationTrees;
			}
			set
			{
				this._ClassificationTrees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassificationTree_ClassificationTreeProduct", Storage="_ClassificationTreeProducts", ThisKey="ID", OtherKey="ClassificationTreeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<ClassificationTreeProduct> ClassificationTreeProducts
		{
			get
			{
				if ((this.serializing 
							&& (this._ClassificationTreeProducts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ClassificationTreeProducts;
			}
			set
			{
				this._ClassificationTreeProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassificationTree_CustomClassificationTree", Storage="_CustomClassificationTrees", ThisKey="ID", OtherKey="ClassificationTreeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<CustomClassificationTree> CustomClassificationTrees
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomClassificationTrees.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomClassificationTrees;
			}
			set
			{
				this._CustomClassificationTrees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassificationTree_ClassificationTree", Storage="_ClassificationTree1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public ClassificationTree ClassificationTree1
		{
			get
			{
				return this._ClassificationTree1.Entity;
			}
			set
			{
				ClassificationTree previousValue = this._ClassificationTree1.Entity;
				if (((previousValue != value) 
							|| (this._ClassificationTree1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassificationTree1.Entity = null;
						previousValue.ClassificationTrees.Remove(this);
					}
					this._ClassificationTree1.Entity = value;
					if ((value != null))
					{
						value.ClassificationTrees.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ClassificationTree1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClassificationTrees(ClassificationTree entity)
		{
			this.SendPropertyChanging();
			entity.ClassificationTree1 = this;
		}
		
		private void detach_ClassificationTrees(ClassificationTree entity)
		{
			this.SendPropertyChanging();
			entity.ClassificationTree1 = null;
		}
		
		private void attach_ClassificationTreeProducts(ClassificationTreeProduct entity)
		{
			this.SendPropertyChanging();
			entity.ClassificationTree = this;
		}
		
		private void detach_ClassificationTreeProducts(ClassificationTreeProduct entity)
		{
			this.SendPropertyChanging();
			entity.ClassificationTree = null;
		}
		
		private void attach_CustomClassificationTrees(CustomClassificationTree entity)
		{
			this.SendPropertyChanging();
			entity.ClassificationTree = this;
		}
		
		private void detach_CustomClassificationTrees(CustomClassificationTree entity)
		{
			this.SendPropertyChanging();
			entity.ClassificationTree = null;
		}
		
		private void Initialize()
		{
			this._ClassificationTrees = new EntitySet<ClassificationTree>(new Action<ClassificationTree>(this.attach_ClassificationTrees), new Action<ClassificationTree>(this.detach_ClassificationTrees));
			this._ClassificationTreeProducts = new EntitySet<ClassificationTreeProduct>(new Action<ClassificationTreeProduct>(this.attach_ClassificationTreeProducts), new Action<ClassificationTreeProduct>(this.detach_ClassificationTreeProducts));
			this._CustomClassificationTrees = new EntitySet<CustomClassificationTree>(new Action<CustomClassificationTree>(this.attach_CustomClassificationTrees), new Action<CustomClassificationTree>(this.detach_CustomClassificationTrees));
			this._ClassificationTree1 = default(EntityRef<ClassificationTree>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleViewPermission")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RoleViewPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _RoleID;
		
		private System.Guid _PermissionEntityID;
		
		private bool _Read;
		
		private bool _Modify;
		
		private bool _Delete;
		
		private System.Guid _EntityID;
		
		private EntityRef<PermissionEntity> _PermissionEntity;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnRoleIDChanging(System.Guid value);
    partial void OnRoleIDChanged();
    partial void OnPermissionEntityIDChanging(System.Guid value);
    partial void OnPermissionEntityIDChanged();
    partial void OnReadChanging(bool value);
    partial void OnReadChanged();
    partial void OnModifyChanging(bool value);
    partial void OnModifyChanged();
    partial void OnDeleteChanging(bool value);
    partial void OnDeleteChanged();
    partial void OnEntityIDChanging(System.Guid value);
    partial void OnEntityIDChanged();
    #endregion
		
		public RoleViewPermission()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionEntityID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid PermissionEntityID
		{
			get
			{
				return this._PermissionEntityID;
			}
			set
			{
				if ((this._PermissionEntityID != value))
				{
					if (this._PermissionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionEntityIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionEntityID = value;
					this.SendPropertyChanged("PermissionEntityID");
					this.OnPermissionEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Read]", Storage="_Read", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool Read
		{
			get
			{
				return this._Read;
			}
			set
			{
				if ((this._Read != value))
				{
					this.OnReadChanging(value);
					this.SendPropertyChanging();
					this._Read = value;
					this.SendPropertyChanged("Read");
					this.OnReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modify", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool Modify
		{
			get
			{
				return this._Modify;
			}
			set
			{
				if ((this._Modify != value))
				{
					this.OnModifyChanging(value);
					this.SendPropertyChanging();
					this._Modify = value;
					this.SendPropertyChanged("Modify");
					this.OnModifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Delete]", Storage="_Delete", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool Delete
		{
			get
			{
				return this._Delete;
			}
			set
			{
				if ((this._Delete != value))
				{
					this.OnDeleteChanging(value);
					this.SendPropertyChanging();
					this._Delete = value;
					this.SendPropertyChanged("Delete");
					this.OnDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Guid EntityID
		{
			get
			{
				return this._EntityID;
			}
			set
			{
				if ((this._EntityID != value))
				{
					this.OnEntityIDChanging(value);
					this.SendPropertyChanging();
					this._EntityID = value;
					this.SendPropertyChanged("EntityID");
					this.OnEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PermissionEntity_RoleViewPermission", Storage="_PermissionEntity", ThisKey="PermissionEntityID", OtherKey="ID", IsForeignKey=true)]
		public PermissionEntity PermissionEntity
		{
			get
			{
				return this._PermissionEntity.Entity;
			}
			set
			{
				PermissionEntity previousValue = this._PermissionEntity.Entity;
				if (((previousValue != value) 
							|| (this._PermissionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PermissionEntity.Entity = null;
						previousValue.RoleViewPermissions.Remove(this);
					}
					this._PermissionEntity.Entity = value;
					if ((value != null))
					{
						value.RoleViewPermissions.Add(this);
						this._PermissionEntityID = value.ID;
					}
					else
					{
						this._PermissionEntityID = default(System.Guid);
					}
					this.SendPropertyChanged("PermissionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleViewPermission", Storage="_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.RoleViewPermissions.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.RoleViewPermissions.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._PermissionEntity = default(EntityRef<PermissionEntity>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassificationTreeProduct")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ClassificationTreeProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _ProductID;
		
		private System.Guid _ClassificationTreeID;
		
		private EntityRef<ClassificationTree> _ClassificationTree;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnProductIDChanging(System.Guid value);
    partial void OnProductIDChanged();
    partial void OnClassificationTreeIDChanging(System.Guid value);
    partial void OnClassificationTreeIDChanged();
    #endregion
		
		public ClassificationTreeProduct()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationTreeID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid ClassificationTreeID
		{
			get
			{
				return this._ClassificationTreeID;
			}
			set
			{
				if ((this._ClassificationTreeID != value))
				{
					if (this._ClassificationTree.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassificationTreeIDChanging(value);
					this.SendPropertyChanging();
					this._ClassificationTreeID = value;
					this.SendPropertyChanged("ClassificationTreeID");
					this.OnClassificationTreeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassificationTree_ClassificationTreeProduct", Storage="_ClassificationTree", ThisKey="ClassificationTreeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ClassificationTree ClassificationTree
		{
			get
			{
				return this._ClassificationTree.Entity;
			}
			set
			{
				ClassificationTree previousValue = this._ClassificationTree.Entity;
				if (((previousValue != value) 
							|| (this._ClassificationTree.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassificationTree.Entity = null;
						previousValue.ClassificationTreeProducts.Remove(this);
					}
					this._ClassificationTree.Entity = value;
					if ((value != null))
					{
						value.ClassificationTreeProducts.Add(this);
						this._ClassificationTreeID = value.ID;
					}
					else
					{
						this._ClassificationTreeID = default(System.Guid);
					}
					this.SendPropertyChanged("ClassificationTree");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ClassificationTreeProduct", Storage="_Product", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ClassificationTreeProducts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ClassificationTreeProducts.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(System.Guid);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ClassificationTree = default(EntityRef<ClassificationTree>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConfigurationUserField")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ConfigurationUserField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _UserID;
		
		private System.Guid _DictionaryTreeID;
		
		private System.Guid _DcitionaryPropertyID;
		
		private System.Guid _FieldPlaceHolderID;
		
		private System.Guid _FormGridViewID;
		
		private int _Sequence;
		
		private EntityRef<FieldPlaceHolder> _FieldPlaceHolder;
		
		private EntityRef<FormGridView> _FormGridView;
		
		private EntityRef<User> _User;
		
		private EntityRef<DictionaryProperty> _DictionaryProperty;
		
		private EntityRef<DictionaryTree> _DictionaryTree;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnDictionaryTreeIDChanging(System.Guid value);
    partial void OnDictionaryTreeIDChanged();
    partial void OnDcitionaryPropertyIDChanging(System.Guid value);
    partial void OnDcitionaryPropertyIDChanged();
    partial void OnFieldPlaceHolderIDChanging(System.Guid value);
    partial void OnFieldPlaceHolderIDChanged();
    partial void OnFormGridViewIDChanging(System.Guid value);
    partial void OnFormGridViewIDChanged();
    partial void OnSequenceChanging(int value);
    partial void OnSequenceChanged();
    #endregion
		
		public ConfigurationUserField()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DictionaryTreeID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid DictionaryTreeID
		{
			get
			{
				return this._DictionaryTreeID;
			}
			set
			{
				if ((this._DictionaryTreeID != value))
				{
					if (this._DictionaryTree.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDictionaryTreeIDChanging(value);
					this.SendPropertyChanging();
					this._DictionaryTreeID = value;
					this.SendPropertyChanged("DictionaryTreeID");
					this.OnDictionaryTreeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DcitionaryPropertyID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Guid DcitionaryPropertyID
		{
			get
			{
				return this._DcitionaryPropertyID;
			}
			set
			{
				if ((this._DcitionaryPropertyID != value))
				{
					if (this._DictionaryProperty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDcitionaryPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._DcitionaryPropertyID = value;
					this.SendPropertyChanged("DcitionaryPropertyID");
					this.OnDcitionaryPropertyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldPlaceHolderID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid FieldPlaceHolderID
		{
			get
			{
				return this._FieldPlaceHolderID;
			}
			set
			{
				if ((this._FieldPlaceHolderID != value))
				{
					if (this._FieldPlaceHolder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldPlaceHolderIDChanging(value);
					this.SendPropertyChanging();
					this._FieldPlaceHolderID = value;
					this.SendPropertyChanged("FieldPlaceHolderID");
					this.OnFieldPlaceHolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormGridViewID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Guid FormGridViewID
		{
			get
			{
				return this._FormGridViewID;
			}
			set
			{
				if ((this._FormGridViewID != value))
				{
					if (this._FormGridView.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormGridViewIDChanging(value);
					this.SendPropertyChanging();
					this._FormGridViewID = value;
					this.SendPropertyChanged("FormGridViewID");
					this.OnFormGridViewIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldPlaceHolder_ConfigurationUserField", Storage="_FieldPlaceHolder", ThisKey="FieldPlaceHolderID", OtherKey="ID", IsForeignKey=true)]
		public FieldPlaceHolder FieldPlaceHolder
		{
			get
			{
				return this._FieldPlaceHolder.Entity;
			}
			set
			{
				FieldPlaceHolder previousValue = this._FieldPlaceHolder.Entity;
				if (((previousValue != value) 
							|| (this._FieldPlaceHolder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FieldPlaceHolder.Entity = null;
						previousValue.ConfigurationUserFields.Remove(this);
					}
					this._FieldPlaceHolder.Entity = value;
					if ((value != null))
					{
						value.ConfigurationUserFields.Add(this);
						this._FieldPlaceHolderID = value.ID;
					}
					else
					{
						this._FieldPlaceHolderID = default(System.Guid);
					}
					this.SendPropertyChanged("FieldPlaceHolder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormGridView_ConfigurationUserField", Storage="_FormGridView", ThisKey="FormGridViewID", OtherKey="ID", IsForeignKey=true)]
		public FormGridView FormGridView
		{
			get
			{
				return this._FormGridView.Entity;
			}
			set
			{
				FormGridView previousValue = this._FormGridView.Entity;
				if (((previousValue != value) 
							|| (this._FormGridView.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FormGridView.Entity = null;
						previousValue.ConfigurationUserFields.Remove(this);
					}
					this._FormGridView.Entity = value;
					if ((value != null))
					{
						value.ConfigurationUserFields.Add(this);
						this._FormGridViewID = value.ID;
					}
					else
					{
						this._FormGridViewID = default(System.Guid);
					}
					this.SendPropertyChanged("FormGridView");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ConfigurationUserField", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ConfigurationUserFields.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ConfigurationUserFields.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DictionaryProperty_ConfigurationUserField", Storage="_DictionaryProperty", ThisKey="DcitionaryPropertyID", OtherKey="ID", IsForeignKey=true)]
		public DictionaryProperty DictionaryProperty
		{
			get
			{
				return this._DictionaryProperty.Entity;
			}
			set
			{
				DictionaryProperty previousValue = this._DictionaryProperty.Entity;
				if (((previousValue != value) 
							|| (this._DictionaryProperty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DictionaryProperty.Entity = null;
						previousValue.ConfigurationUserFields.Remove(this);
					}
					this._DictionaryProperty.Entity = value;
					if ((value != null))
					{
						value.ConfigurationUserFields.Add(this);
						this._DcitionaryPropertyID = value.ID;
					}
					else
					{
						this._DcitionaryPropertyID = default(System.Guid);
					}
					this.SendPropertyChanged("DictionaryProperty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DictionaryTree_ConfigurationUserField", Storage="_DictionaryTree", ThisKey="DictionaryTreeID", OtherKey="ID", IsForeignKey=true)]
		public DictionaryTree DictionaryTree
		{
			get
			{
				return this._DictionaryTree.Entity;
			}
			set
			{
				DictionaryTree previousValue = this._DictionaryTree.Entity;
				if (((previousValue != value) 
							|| (this._DictionaryTree.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DictionaryTree.Entity = null;
						previousValue.ConfigurationUserFields.Remove(this);
					}
					this._DictionaryTree.Entity = value;
					if ((value != null))
					{
						value.ConfigurationUserFields.Add(this);
						this._DictionaryTreeID = value.ID;
					}
					else
					{
						this._DictionaryTreeID = default(System.Guid);
					}
					this.SendPropertyChanged("DictionaryTree");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._FieldPlaceHolder = default(EntityRef<FieldPlaceHolder>);
			this._FormGridView = default(EntityRef<FormGridView>);
			this._User = default(EntityRef<User>);
			this._DictionaryProperty = default(EntityRef<DictionaryProperty>);
			this._DictionaryTree = default(EntityRef<DictionaryTree>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConfigurationUserProperty")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ConfigurationUserProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _UserID;
		
		private System.Guid _PropertyID;
		
		private System.Guid _FieldPlaceHolderID;
		
		private System.Guid _FormGridViewID;
		
		private int _Sequence;
		
		private EntityRef<FieldPlaceHolder> _FieldPlaceHolder;
		
		private EntityRef<FormGridView> _FormGridView;
		
		private EntityRef<Property> _Property;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnPropertyIDChanging(System.Guid value);
    partial void OnPropertyIDChanged();
    partial void OnFieldPlaceHolderIDChanging(System.Guid value);
    partial void OnFieldPlaceHolderIDChanged();
    partial void OnFormGridViewIDChanging(System.Guid value);
    partial void OnFormGridViewIDChanged();
    partial void OnSequenceChanging(int value);
    partial void OnSequenceChanged();
    #endregion
		
		public ConfigurationUserProperty()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid PropertyID
		{
			get
			{
				return this._PropertyID;
			}
			set
			{
				if ((this._PropertyID != value))
				{
					if (this._Property.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyID = value;
					this.SendPropertyChanged("PropertyID");
					this.OnPropertyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldPlaceHolderID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Guid FieldPlaceHolderID
		{
			get
			{
				return this._FieldPlaceHolderID;
			}
			set
			{
				if ((this._FieldPlaceHolderID != value))
				{
					if (this._FieldPlaceHolder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldPlaceHolderIDChanging(value);
					this.SendPropertyChanging();
					this._FieldPlaceHolderID = value;
					this.SendPropertyChanged("FieldPlaceHolderID");
					this.OnFieldPlaceHolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormGridViewID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid FormGridViewID
		{
			get
			{
				return this._FormGridViewID;
			}
			set
			{
				if ((this._FormGridViewID != value))
				{
					if (this._FormGridView.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormGridViewIDChanging(value);
					this.SendPropertyChanging();
					this._FormGridViewID = value;
					this.SendPropertyChanged("FormGridViewID");
					this.OnFormGridViewIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldPlaceHolder_ConfigurationUserProperty", Storage="_FieldPlaceHolder", ThisKey="FieldPlaceHolderID", OtherKey="ID", IsForeignKey=true)]
		public FieldPlaceHolder FieldPlaceHolder
		{
			get
			{
				return this._FieldPlaceHolder.Entity;
			}
			set
			{
				FieldPlaceHolder previousValue = this._FieldPlaceHolder.Entity;
				if (((previousValue != value) 
							|| (this._FieldPlaceHolder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FieldPlaceHolder.Entity = null;
						previousValue.ConfigurationUserProperties.Remove(this);
					}
					this._FieldPlaceHolder.Entity = value;
					if ((value != null))
					{
						value.ConfigurationUserProperties.Add(this);
						this._FieldPlaceHolderID = value.ID;
					}
					else
					{
						this._FieldPlaceHolderID = default(System.Guid);
					}
					this.SendPropertyChanged("FieldPlaceHolder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormGridView_ConfigurationUserProperty", Storage="_FormGridView", ThisKey="FormGridViewID", OtherKey="ID", IsForeignKey=true)]
		public FormGridView FormGridView
		{
			get
			{
				return this._FormGridView.Entity;
			}
			set
			{
				FormGridView previousValue = this._FormGridView.Entity;
				if (((previousValue != value) 
							|| (this._FormGridView.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FormGridView.Entity = null;
						previousValue.ConfigurationUserProperties.Remove(this);
					}
					this._FormGridView.Entity = value;
					if ((value != null))
					{
						value.ConfigurationUserProperties.Add(this);
						this._FormGridViewID = value.ID;
					}
					else
					{
						this._FormGridViewID = default(System.Guid);
					}
					this.SendPropertyChanged("FormGridView");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Property_ConfigurationUserProperty", Storage="_Property", ThisKey="PropertyID", OtherKey="ID", IsForeignKey=true)]
		public Property Property
		{
			get
			{
				return this._Property.Entity;
			}
			set
			{
				Property previousValue = this._Property.Entity;
				if (((previousValue != value) 
							|| (this._Property.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Property.Entity = null;
						previousValue.ConfigurationUserProperties.Remove(this);
					}
					this._Property.Entity = value;
					if ((value != null))
					{
						value.ConfigurationUserProperties.Add(this);
						this._PropertyID = value.ID;
					}
					else
					{
						this._PropertyID = default(System.Guid);
					}
					this.SendPropertyChanged("Property");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ConfigurationUserProperty", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ConfigurationUserProperties.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ConfigurationUserProperties.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._FieldPlaceHolder = default(EntityRef<FieldPlaceHolder>);
			this._FormGridView = default(EntityRef<FormGridView>);
			this._Property = default(EntityRef<Property>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomClassificationNode")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomClassificationNode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private EntitySet<CustomClassificationNodeProduct> _CustomClassificationNodeProducts;
		
		private EntitySet<CustomClassificationTree> _CustomClassificationTrees;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CustomClassificationNode()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomClassificationNode_CustomClassificationNodeProduct", Storage="_CustomClassificationNodeProducts", ThisKey="ID", OtherKey="CustomClassificationNodeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<CustomClassificationNodeProduct> CustomClassificationNodeProducts
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomClassificationNodeProducts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomClassificationNodeProducts;
			}
			set
			{
				this._CustomClassificationNodeProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomClassificationNode_CustomClassificationTree", Storage="_CustomClassificationTrees", ThisKey="ID", OtherKey="CustomClassificationNodeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<CustomClassificationTree> CustomClassificationTrees
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomClassificationTrees.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomClassificationTrees;
			}
			set
			{
				this._CustomClassificationTrees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomClassificationNodeProducts(CustomClassificationNodeProduct entity)
		{
			this.SendPropertyChanging();
			entity.CustomClassificationNode = this;
		}
		
		private void detach_CustomClassificationNodeProducts(CustomClassificationNodeProduct entity)
		{
			this.SendPropertyChanging();
			entity.CustomClassificationNode = null;
		}
		
		private void attach_CustomClassificationTrees(CustomClassificationTree entity)
		{
			this.SendPropertyChanging();
			entity.CustomClassificationNode = this;
		}
		
		private void detach_CustomClassificationTrees(CustomClassificationTree entity)
		{
			this.SendPropertyChanging();
			entity.CustomClassificationNode = null;
		}
		
		private void Initialize()
		{
			this._CustomClassificationNodeProducts = new EntitySet<CustomClassificationNodeProduct>(new Action<CustomClassificationNodeProduct>(this.attach_CustomClassificationNodeProducts), new Action<CustomClassificationNodeProduct>(this.detach_CustomClassificationNodeProducts));
			this._CustomClassificationTrees = new EntitySet<CustomClassificationTree>(new Action<CustomClassificationTree>(this.attach_CustomClassificationTrees), new Action<CustomClassificationTree>(this.detach_CustomClassificationTrees));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomClassificationNodeProduct")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomClassificationNodeProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _CustomClassificationNodeID;
		
		private System.Guid _ProductID;
		
		private EntityRef<CustomClassificationNode> _CustomClassificationNode;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCustomClassificationNodeIDChanging(System.Guid value);
    partial void OnCustomClassificationNodeIDChanged();
    partial void OnProductIDChanging(System.Guid value);
    partial void OnProductIDChanged();
    #endregion
		
		public CustomClassificationNodeProduct()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomClassificationNodeID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid CustomClassificationNodeID
		{
			get
			{
				return this._CustomClassificationNodeID;
			}
			set
			{
				if ((this._CustomClassificationNodeID != value))
				{
					if (this._CustomClassificationNode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomClassificationNodeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomClassificationNodeID = value;
					this.SendPropertyChanged("CustomClassificationNodeID");
					this.OnCustomClassificationNodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomClassificationNode_CustomClassificationNodeProduct", Storage="_CustomClassificationNode", ThisKey="CustomClassificationNodeID", OtherKey="ID", IsForeignKey=true)]
		public CustomClassificationNode CustomClassificationNode
		{
			get
			{
				return this._CustomClassificationNode.Entity;
			}
			set
			{
				CustomClassificationNode previousValue = this._CustomClassificationNode.Entity;
				if (((previousValue != value) 
							|| (this._CustomClassificationNode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomClassificationNode.Entity = null;
						previousValue.CustomClassificationNodeProducts.Remove(this);
					}
					this._CustomClassificationNode.Entity = value;
					if ((value != null))
					{
						value.CustomClassificationNodeProducts.Add(this);
						this._CustomClassificationNodeID = value.ID;
					}
					else
					{
						this._CustomClassificationNodeID = default(System.Guid);
					}
					this.SendPropertyChanged("CustomClassificationNode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_CustomClassificationNodeProduct", Storage="_Product", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.CustomClassificationNodeProducts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.CustomClassificationNodeProducts.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(System.Guid);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CustomClassificationNode = default(EntityRef<CustomClassificationNode>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomClassificationTree")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomClassificationTree : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private string _Name;
		
		private System.Nullable<System.Guid> _ClassificationTreeID;
		
		private System.Nullable<System.Guid> _CustomClassificationNodeID;
		
		private EntitySet<CustomClassificationTree> _CustomClassificationTrees;
		
		private EntityRef<ClassificationTree> _ClassificationTree;
		
		private EntityRef<CustomClassificationNode> _CustomClassificationNode;
		
		private EntityRef<CustomClassificationTree> _CustomClassificationTree1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnClassificationTreeIDChanging(System.Nullable<System.Guid> value);
    partial void OnClassificationTreeIDChanged();
    partial void OnCustomClassificationNodeIDChanging(System.Nullable<System.Guid> value);
    partial void OnCustomClassificationNodeIDChanged();
    #endregion
		
		public CustomClassificationTree()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._CustomClassificationTree1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationTreeID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.Guid> ClassificationTreeID
		{
			get
			{
				return this._ClassificationTreeID;
			}
			set
			{
				if ((this._ClassificationTreeID != value))
				{
					if (this._ClassificationTree.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassificationTreeIDChanging(value);
					this.SendPropertyChanging();
					this._ClassificationTreeID = value;
					this.SendPropertyChanged("ClassificationTreeID");
					this.OnClassificationTreeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomClassificationNodeID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.Guid> CustomClassificationNodeID
		{
			get
			{
				return this._CustomClassificationNodeID;
			}
			set
			{
				if ((this._CustomClassificationNodeID != value))
				{
					if (this._CustomClassificationNode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomClassificationNodeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomClassificationNodeID = value;
					this.SendPropertyChanged("CustomClassificationNodeID");
					this.OnCustomClassificationNodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomClassificationTree_CustomClassificationTree", Storage="_CustomClassificationTrees", ThisKey="ID", OtherKey="ParentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<CustomClassificationTree> CustomClassificationTrees
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomClassificationTrees.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomClassificationTrees;
			}
			set
			{
				this._CustomClassificationTrees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassificationTree_CustomClassificationTree", Storage="_ClassificationTree", ThisKey="ClassificationTreeID", OtherKey="ID", IsForeignKey=true)]
		public ClassificationTree ClassificationTree
		{
			get
			{
				return this._ClassificationTree.Entity;
			}
			set
			{
				ClassificationTree previousValue = this._ClassificationTree.Entity;
				if (((previousValue != value) 
							|| (this._ClassificationTree.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassificationTree.Entity = null;
						previousValue.CustomClassificationTrees.Remove(this);
					}
					this._ClassificationTree.Entity = value;
					if ((value != null))
					{
						value.CustomClassificationTrees.Add(this);
						this._ClassificationTreeID = value.ID;
					}
					else
					{
						this._ClassificationTreeID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ClassificationTree");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomClassificationNode_CustomClassificationTree", Storage="_CustomClassificationNode", ThisKey="CustomClassificationNodeID", OtherKey="ID", IsForeignKey=true)]
		public CustomClassificationNode CustomClassificationNode
		{
			get
			{
				return this._CustomClassificationNode.Entity;
			}
			set
			{
				CustomClassificationNode previousValue = this._CustomClassificationNode.Entity;
				if (((previousValue != value) 
							|| (this._CustomClassificationNode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomClassificationNode.Entity = null;
						previousValue.CustomClassificationTrees.Remove(this);
					}
					this._CustomClassificationNode.Entity = value;
					if ((value != null))
					{
						value.CustomClassificationTrees.Add(this);
						this._CustomClassificationNodeID = value.ID;
					}
					else
					{
						this._CustomClassificationNodeID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("CustomClassificationNode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomClassificationTree_CustomClassificationTree", Storage="_CustomClassificationTree1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public CustomClassificationTree CustomClassificationTree1
		{
			get
			{
				return this._CustomClassificationTree1.Entity;
			}
			set
			{
				CustomClassificationTree previousValue = this._CustomClassificationTree1.Entity;
				if (((previousValue != value) 
							|| (this._CustomClassificationTree1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomClassificationTree1.Entity = null;
						previousValue.CustomClassificationTrees.Remove(this);
					}
					this._CustomClassificationTree1.Entity = value;
					if ((value != null))
					{
						value.CustomClassificationTrees.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("CustomClassificationTree1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomClassificationTrees(CustomClassificationTree entity)
		{
			this.SendPropertyChanging();
			entity.CustomClassificationTree1 = this;
		}
		
		private void detach_CustomClassificationTrees(CustomClassificationTree entity)
		{
			this.SendPropertyChanging();
			entity.CustomClassificationTree1 = null;
		}
		
		private void Initialize()
		{
			this._CustomClassificationTrees = new EntitySet<CustomClassificationTree>(new Action<CustomClassificationTree>(this.attach_CustomClassificationTrees), new Action<CustomClassificationTree>(this.detach_CustomClassificationTrees));
			this._ClassificationTree = default(EntityRef<ClassificationTree>);
			this._CustomClassificationNode = default(EntityRef<CustomClassificationNode>);
			this._CustomClassificationTree1 = default(EntityRef<CustomClassificationTree>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dictionary")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Dictionary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _TableName;
		
		private string _IdentifierField;
		
		private EntitySet<DictionaryProperty> _DictionaryProperties;
		
		private EntitySet<DictionaryTree> _DictionaryTrees;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnIdentifierFieldChanging(string value);
    partial void OnIdentifierFieldChanged();
    #endregion
		
		public Dictionary()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentifierField", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string IdentifierField
		{
			get
			{
				return this._IdentifierField;
			}
			set
			{
				if ((this._IdentifierField != value))
				{
					this.OnIdentifierFieldChanging(value);
					this.SendPropertyChanging();
					this._IdentifierField = value;
					this.SendPropertyChanged("IdentifierField");
					this.OnIdentifierFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dictionary_DictionaryProperty", Storage="_DictionaryProperties", ThisKey="ID", OtherKey="DictionaryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<DictionaryProperty> DictionaryProperties
		{
			get
			{
				if ((this.serializing 
							&& (this._DictionaryProperties.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DictionaryProperties;
			}
			set
			{
				this._DictionaryProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dictionary_DictionaryTree", Storage="_DictionaryTrees", ThisKey="ID", OtherKey="DictionaryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<DictionaryTree> DictionaryTrees
		{
			get
			{
				if ((this.serializing 
							&& (this._DictionaryTrees.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DictionaryTrees;
			}
			set
			{
				this._DictionaryTrees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DictionaryProperties(DictionaryProperty entity)
		{
			this.SendPropertyChanging();
			entity.Dictionary = this;
		}
		
		private void detach_DictionaryProperties(DictionaryProperty entity)
		{
			this.SendPropertyChanging();
			entity.Dictionary = null;
		}
		
		private void attach_DictionaryTrees(DictionaryTree entity)
		{
			this.SendPropertyChanging();
			entity.Dictionary = this;
		}
		
		private void detach_DictionaryTrees(DictionaryTree entity)
		{
			this.SendPropertyChanging();
			entity.Dictionary = null;
		}
		
		private void Initialize()
		{
			this._DictionaryProperties = new EntitySet<DictionaryProperty>(new Action<DictionaryProperty>(this.attach_DictionaryProperties), new Action<DictionaryProperty>(this.detach_DictionaryProperties));
			this._DictionaryTrees = new EntitySet<DictionaryTree>(new Action<DictionaryTree>(this.attach_DictionaryTrees), new Action<DictionaryTree>(this.detach_DictionaryTrees));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DictionaryUserField")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DictionaryUserField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _UserID;
		
		private System.Guid _DictionaryTreeID;
		
		private System.Guid _DictionaryTreeNodeID;
		
		private System.Guid _DcitionaryPropertyID;
		
		private System.Guid _FieldPlaceHolderID;
		
		private int _Sequence;
		
		private EntityRef<FieldPlaceHolder> _FieldPlaceHolder;
		
		private EntityRef<User> _User;
		
		private EntityRef<DictionaryProperty> _DictionaryProperty;
		
		private EntityRef<DictionaryTree> _DictionaryTree;
		
		private EntityRef<DictionaryTree> _DictionaryTree1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnDictionaryTreeIDChanging(System.Guid value);
    partial void OnDictionaryTreeIDChanged();
    partial void OnDictionaryTreeNodeIDChanging(System.Guid value);
    partial void OnDictionaryTreeNodeIDChanged();
    partial void OnDcitionaryPropertyIDChanging(System.Guid value);
    partial void OnDcitionaryPropertyIDChanged();
    partial void OnFieldPlaceHolderIDChanging(System.Guid value);
    partial void OnFieldPlaceHolderIDChanged();
    partial void OnSequenceChanging(int value);
    partial void OnSequenceChanged();
    #endregion
		
		public DictionaryUserField()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DictionaryTreeID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid DictionaryTreeID
		{
			get
			{
				return this._DictionaryTreeID;
			}
			set
			{
				if ((this._DictionaryTreeID != value))
				{
					if (this._DictionaryTree.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDictionaryTreeIDChanging(value);
					this.SendPropertyChanging();
					this._DictionaryTreeID = value;
					this.SendPropertyChanged("DictionaryTreeID");
					this.OnDictionaryTreeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DictionaryTreeNodeID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Guid DictionaryTreeNodeID
		{
			get
			{
				return this._DictionaryTreeNodeID;
			}
			set
			{
				if ((this._DictionaryTreeNodeID != value))
				{
					if (this._DictionaryTree1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDictionaryTreeNodeIDChanging(value);
					this.SendPropertyChanging();
					this._DictionaryTreeNodeID = value;
					this.SendPropertyChanged("DictionaryTreeNodeID");
					this.OnDictionaryTreeNodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DcitionaryPropertyID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid DcitionaryPropertyID
		{
			get
			{
				return this._DcitionaryPropertyID;
			}
			set
			{
				if ((this._DcitionaryPropertyID != value))
				{
					if (this._DictionaryProperty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDcitionaryPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._DcitionaryPropertyID = value;
					this.SendPropertyChanged("DcitionaryPropertyID");
					this.OnDcitionaryPropertyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldPlaceHolderID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Guid FieldPlaceHolderID
		{
			get
			{
				return this._FieldPlaceHolderID;
			}
			set
			{
				if ((this._FieldPlaceHolderID != value))
				{
					if (this._FieldPlaceHolder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldPlaceHolderIDChanging(value);
					this.SendPropertyChanging();
					this._FieldPlaceHolderID = value;
					this.SendPropertyChanged("FieldPlaceHolderID");
					this.OnFieldPlaceHolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldPlaceHolder_DictionaryUserField", Storage="_FieldPlaceHolder", ThisKey="FieldPlaceHolderID", OtherKey="ID", IsForeignKey=true)]
		public FieldPlaceHolder FieldPlaceHolder
		{
			get
			{
				return this._FieldPlaceHolder.Entity;
			}
			set
			{
				FieldPlaceHolder previousValue = this._FieldPlaceHolder.Entity;
				if (((previousValue != value) 
							|| (this._FieldPlaceHolder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FieldPlaceHolder.Entity = null;
						previousValue.DictionaryUserFields.Remove(this);
					}
					this._FieldPlaceHolder.Entity = value;
					if ((value != null))
					{
						value.DictionaryUserFields.Add(this);
						this._FieldPlaceHolderID = value.ID;
					}
					else
					{
						this._FieldPlaceHolderID = default(System.Guid);
					}
					this.SendPropertyChanged("FieldPlaceHolder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DictionaryUserField", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.DictionaryUserFields.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.DictionaryUserFields.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DictionaryProperty_DictionaryUserField", Storage="_DictionaryProperty", ThisKey="DcitionaryPropertyID", OtherKey="ID", IsForeignKey=true)]
		public DictionaryProperty DictionaryProperty
		{
			get
			{
				return this._DictionaryProperty.Entity;
			}
			set
			{
				DictionaryProperty previousValue = this._DictionaryProperty.Entity;
				if (((previousValue != value) 
							|| (this._DictionaryProperty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DictionaryProperty.Entity = null;
						previousValue.DictionaryUserFields.Remove(this);
					}
					this._DictionaryProperty.Entity = value;
					if ((value != null))
					{
						value.DictionaryUserFields.Add(this);
						this._DcitionaryPropertyID = value.ID;
					}
					else
					{
						this._DcitionaryPropertyID = default(System.Guid);
					}
					this.SendPropertyChanged("DictionaryProperty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DictionaryTree_DictionaryUserField", Storage="_DictionaryTree", ThisKey="DictionaryTreeID", OtherKey="ID", IsForeignKey=true)]
		public DictionaryTree DictionaryTree
		{
			get
			{
				return this._DictionaryTree.Entity;
			}
			set
			{
				DictionaryTree previousValue = this._DictionaryTree.Entity;
				if (((previousValue != value) 
							|| (this._DictionaryTree.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DictionaryTree.Entity = null;
						previousValue.DictionaryUserFields.Remove(this);
					}
					this._DictionaryTree.Entity = value;
					if ((value != null))
					{
						value.DictionaryUserFields.Add(this);
						this._DictionaryTreeID = value.ID;
					}
					else
					{
						this._DictionaryTreeID = default(System.Guid);
					}
					this.SendPropertyChanged("DictionaryTree");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DictionaryTree_DictionaryUserField1", Storage="_DictionaryTree1", ThisKey="DictionaryTreeNodeID", OtherKey="ID", IsForeignKey=true)]
		public DictionaryTree DictionaryTree1
		{
			get
			{
				return this._DictionaryTree1.Entity;
			}
			set
			{
				DictionaryTree previousValue = this._DictionaryTree1.Entity;
				if (((previousValue != value) 
							|| (this._DictionaryTree1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DictionaryTree1.Entity = null;
						previousValue.DictionaryUserFields1.Remove(this);
					}
					this._DictionaryTree1.Entity = value;
					if ((value != null))
					{
						value.DictionaryUserFields1.Add(this);
						this._DictionaryTreeNodeID = value.ID;
					}
					else
					{
						this._DictionaryTreeNodeID = default(System.Guid);
					}
					this.SendPropertyChanged("DictionaryTree1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._FieldPlaceHolder = default(EntityRef<FieldPlaceHolder>);
			this._User = default(EntityRef<User>);
			this._DictionaryProperty = default(EntityRef<DictionaryProperty>);
			this._DictionaryTree = default(EntityRef<DictionaryTree>);
			this._DictionaryTree1 = default(EntityRef<DictionaryTree>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FieldPlaceHolder")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FieldPlaceHolder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private EntitySet<ConfigurationUserField> _ConfigurationUserFields;
		
		private EntitySet<ConfigurationUserProperty> _ConfigurationUserProperties;
		
		private EntitySet<DictionaryUserField> _DictionaryUserFields;
		
		private EntitySet<UserField> _UserFields;
		
		private EntitySet<UserProperty> _UserProperties;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public FieldPlaceHolder()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldPlaceHolder_ConfigurationUserField", Storage="_ConfigurationUserFields", ThisKey="ID", OtherKey="FieldPlaceHolderID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<ConfigurationUserField> ConfigurationUserFields
		{
			get
			{
				if ((this.serializing 
							&& (this._ConfigurationUserFields.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ConfigurationUserFields;
			}
			set
			{
				this._ConfigurationUserFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldPlaceHolder_ConfigurationUserProperty", Storage="_ConfigurationUserProperties", ThisKey="ID", OtherKey="FieldPlaceHolderID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<ConfigurationUserProperty> ConfigurationUserProperties
		{
			get
			{
				if ((this.serializing 
							&& (this._ConfigurationUserProperties.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ConfigurationUserProperties;
			}
			set
			{
				this._ConfigurationUserProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldPlaceHolder_DictionaryUserField", Storage="_DictionaryUserFields", ThisKey="ID", OtherKey="FieldPlaceHolderID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<DictionaryUserField> DictionaryUserFields
		{
			get
			{
				if ((this.serializing 
							&& (this._DictionaryUserFields.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DictionaryUserFields;
			}
			set
			{
				this._DictionaryUserFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldPlaceHolder_UserField", Storage="_UserFields", ThisKey="ID", OtherKey="FieldPlaceHolderID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<UserField> UserFields
		{
			get
			{
				if ((this.serializing 
							&& (this._UserFields.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserFields;
			}
			set
			{
				this._UserFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldPlaceHolder_UserProperty", Storage="_UserProperties", ThisKey="ID", OtherKey="FieldPlaceHolderID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<UserProperty> UserProperties
		{
			get
			{
				if ((this.serializing 
							&& (this._UserProperties.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserProperties;
			}
			set
			{
				this._UserProperties.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConfigurationUserFields(ConfigurationUserField entity)
		{
			this.SendPropertyChanging();
			entity.FieldPlaceHolder = this;
		}
		
		private void detach_ConfigurationUserFields(ConfigurationUserField entity)
		{
			this.SendPropertyChanging();
			entity.FieldPlaceHolder = null;
		}
		
		private void attach_ConfigurationUserProperties(ConfigurationUserProperty entity)
		{
			this.SendPropertyChanging();
			entity.FieldPlaceHolder = this;
		}
		
		private void detach_ConfigurationUserProperties(ConfigurationUserProperty entity)
		{
			this.SendPropertyChanging();
			entity.FieldPlaceHolder = null;
		}
		
		private void attach_DictionaryUserFields(DictionaryUserField entity)
		{
			this.SendPropertyChanging();
			entity.FieldPlaceHolder = this;
		}
		
		private void detach_DictionaryUserFields(DictionaryUserField entity)
		{
			this.SendPropertyChanging();
			entity.FieldPlaceHolder = null;
		}
		
		private void attach_UserFields(UserField entity)
		{
			this.SendPropertyChanging();
			entity.FieldPlaceHolder = this;
		}
		
		private void detach_UserFields(UserField entity)
		{
			this.SendPropertyChanging();
			entity.FieldPlaceHolder = null;
		}
		
		private void attach_UserProperties(UserProperty entity)
		{
			this.SendPropertyChanging();
			entity.FieldPlaceHolder = this;
		}
		
		private void detach_UserProperties(UserProperty entity)
		{
			this.SendPropertyChanging();
			entity.FieldPlaceHolder = null;
		}
		
		private void Initialize()
		{
			this._ConfigurationUserFields = new EntitySet<ConfigurationUserField>(new Action<ConfigurationUserField>(this.attach_ConfigurationUserFields), new Action<ConfigurationUserField>(this.detach_ConfigurationUserFields));
			this._ConfigurationUserProperties = new EntitySet<ConfigurationUserProperty>(new Action<ConfigurationUserProperty>(this.attach_ConfigurationUserProperties), new Action<ConfigurationUserProperty>(this.detach_ConfigurationUserProperties));
			this._DictionaryUserFields = new EntitySet<DictionaryUserField>(new Action<DictionaryUserField>(this.attach_DictionaryUserFields), new Action<DictionaryUserField>(this.detach_DictionaryUserFields));
			this._UserFields = new EntitySet<UserField>(new Action<UserField>(this.attach_UserFields), new Action<UserField>(this.detach_UserFields));
			this._UserProperties = new EntitySet<UserProperty>(new Action<UserProperty>(this.attach_UserProperties), new Action<UserProperty>(this.detach_UserProperties));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FormGridView")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FormGridView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private EntitySet<ConfigurationUserField> _ConfigurationUserFields;
		
		private EntitySet<ConfigurationUserProperty> _ConfigurationUserProperties;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public FormGridView()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormGridView_ConfigurationUserField", Storage="_ConfigurationUserFields", ThisKey="ID", OtherKey="FormGridViewID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<ConfigurationUserField> ConfigurationUserFields
		{
			get
			{
				if ((this.serializing 
							&& (this._ConfigurationUserFields.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ConfigurationUserFields;
			}
			set
			{
				this._ConfigurationUserFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormGridView_ConfigurationUserProperty", Storage="_ConfigurationUserProperties", ThisKey="ID", OtherKey="FormGridViewID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<ConfigurationUserProperty> ConfigurationUserProperties
		{
			get
			{
				if ((this.serializing 
							&& (this._ConfigurationUserProperties.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ConfigurationUserProperties;
			}
			set
			{
				this._ConfigurationUserProperties.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConfigurationUserFields(ConfigurationUserField entity)
		{
			this.SendPropertyChanging();
			entity.FormGridView = this;
		}
		
		private void detach_ConfigurationUserFields(ConfigurationUserField entity)
		{
			this.SendPropertyChanging();
			entity.FormGridView = null;
		}
		
		private void attach_ConfigurationUserProperties(ConfigurationUserProperty entity)
		{
			this.SendPropertyChanging();
			entity.FormGridView = this;
		}
		
		private void detach_ConfigurationUserProperties(ConfigurationUserProperty entity)
		{
			this.SendPropertyChanging();
			entity.FormGridView = null;
		}
		
		private void Initialize()
		{
			this._ConfigurationUserFields = new EntitySet<ConfigurationUserField>(new Action<ConfigurationUserField>(this.attach_ConfigurationUserFields), new Action<ConfigurationUserField>(this.detach_ConfigurationUserFields));
			this._ConfigurationUserProperties = new EntitySet<ConfigurationUserProperty>(new Action<ConfigurationUserProperty>(this.attach_ConfigurationUserProperties), new Action<ConfigurationUserProperty>(this.detach_ConfigurationUserProperties));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PermissionEntity")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PermissionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private EntitySet<RoleViewPermission> _RoleViewPermissions;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public PermissionEntity()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PermissionEntity_RoleViewPermission", Storage="_RoleViewPermissions", ThisKey="ID", OtherKey="PermissionEntityID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<RoleViewPermission> RoleViewPermissions
		{
			get
			{
				if ((this.serializing 
							&& (this._RoleViewPermissions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RoleViewPermissions;
			}
			set
			{
				this._RoleViewPermissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoleViewPermissions(RoleViewPermission entity)
		{
			this.SendPropertyChanging();
			entity.PermissionEntity = this;
		}
		
		private void detach_RoleViewPermissions(RoleViewPermission entity)
		{
			this.SendPropertyChanging();
			entity.PermissionEntity = null;
		}
		
		private void Initialize()
		{
			this._RoleViewPermissions = new EntitySet<RoleViewPermission>(new Action<RoleViewPermission>(this.attach_RoleViewPermissions), new Action<RoleViewPermission>(this.detach_RoleViewPermissions));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductProperty")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ProductProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _ProductID;
		
		private System.Guid _PropertyID;
		
		private string _Value;
		
		private EntityRef<Property> _Property;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnProductIDChanging(System.Guid value);
    partial void OnProductIDChanged();
    partial void OnPropertyIDChanging(System.Guid value);
    partial void OnPropertyIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public ProductProperty()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid PropertyID
		{
			get
			{
				return this._PropertyID;
			}
			set
			{
				if ((this._PropertyID != value))
				{
					if (this._Property.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyID = value;
					this.SendPropertyChanged("PropertyID");
					this.OnPropertyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Property_ProductProperty", Storage="_Property", ThisKey="PropertyID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Property Property
		{
			get
			{
				return this._Property.Entity;
			}
			set
			{
				Property previousValue = this._Property.Entity;
				if (((previousValue != value) 
							|| (this._Property.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Property.Entity = null;
						previousValue.ProductProperties.Remove(this);
					}
					this._Property.Entity = value;
					if ((value != null))
					{
						value.ProductProperties.Add(this);
						this._PropertyID = value.ID;
					}
					else
					{
						this._PropertyID = default(System.Guid);
					}
					this.SendPropertyChanged("Property");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductProperty", Storage="_Product", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductProperties.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductProperties.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(System.Guid);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Property = default(EntityRef<Property>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Property")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Property : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private System.Guid _TypeID;
		
		private string _Alias;
		
		private System.Nullable<System.Guid> _ClassificationTreeID;
		
		private System.Nullable<System.Guid> _CustomClassificationNodeID;
		
		private System.Nullable<System.Guid> _ClassificationID;
		
		private string _Caption;
		
		private EntitySet<ConfigurationUserProperty> _ConfigurationUserProperties;
		
		private EntitySet<ProductProperty> _ProductProperties;
		
		private EntitySet<UserProperty> _UserProperties;
		
		private EntityRef<Type> _Type;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeIDChanging(System.Guid value);
    partial void OnTypeIDChanged();
    partial void OnAliasChanging(string value);
    partial void OnAliasChanged();
    partial void OnClassificationTreeIDChanging(System.Nullable<System.Guid> value);
    partial void OnClassificationTreeIDChanged();
    partial void OnCustomClassificationNodeIDChanging(System.Nullable<System.Guid> value);
    partial void OnCustomClassificationNodeIDChanged();
    partial void OnClassificationIDChanging(System.Nullable<System.Guid> value);
    partial void OnClassificationIDChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    #endregion
		
		public Property()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alias", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Alias
		{
			get
			{
				return this._Alias;
			}
			set
			{
				if ((this._Alias != value))
				{
					this.OnAliasChanging(value);
					this.SendPropertyChanging();
					this._Alias = value;
					this.SendPropertyChanged("Alias");
					this.OnAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationTreeID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.Guid> ClassificationTreeID
		{
			get
			{
				return this._ClassificationTreeID;
			}
			set
			{
				if ((this._ClassificationTreeID != value))
				{
					this.OnClassificationTreeIDChanging(value);
					this.SendPropertyChanging();
					this._ClassificationTreeID = value;
					this.SendPropertyChanged("ClassificationTreeID");
					this.OnClassificationTreeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomClassificationNodeID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.Guid> CustomClassificationNodeID
		{
			get
			{
				return this._CustomClassificationNodeID;
			}
			set
			{
				if ((this._CustomClassificationNodeID != value))
				{
					this.OnCustomClassificationNodeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomClassificationNodeID = value;
					this.SendPropertyChanged("CustomClassificationNodeID");
					this.OnCustomClassificationNodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.Guid> ClassificationID
		{
			get
			{
				return this._ClassificationID;
			}
			set
			{
				if ((this._ClassificationID != value))
				{
					this.OnClassificationIDChanging(value);
					this.SendPropertyChanging();
					this._ClassificationID = value;
					this.SendPropertyChanged("ClassificationID");
					this.OnClassificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this.OnCaptionChanging(value);
					this.SendPropertyChanging();
					this._Caption = value;
					this.SendPropertyChanged("Caption");
					this.OnCaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Property_ConfigurationUserProperty", Storage="_ConfigurationUserProperties", ThisKey="ID", OtherKey="PropertyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<ConfigurationUserProperty> ConfigurationUserProperties
		{
			get
			{
				if ((this.serializing 
							&& (this._ConfigurationUserProperties.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ConfigurationUserProperties;
			}
			set
			{
				this._ConfigurationUserProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Property_ProductProperty", Storage="_ProductProperties", ThisKey="ID", OtherKey="PropertyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<ProductProperty> ProductProperties
		{
			get
			{
				if ((this.serializing 
							&& (this._ProductProperties.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProductProperties;
			}
			set
			{
				this._ProductProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Property_UserProperty", Storage="_UserProperties", ThisKey="ID", OtherKey="PropertyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<UserProperty> UserProperties
		{
			get
			{
				if ((this.serializing 
							&& (this._UserProperties.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserProperties;
			}
			set
			{
				this._UserProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Property", Storage="_Type", ThisKey="TypeID", OtherKey="ID", IsForeignKey=true)]
		public Type Type
		{
			get
			{
				return this._Type.Entity;
			}
			set
			{
				Type previousValue = this._Type.Entity;
				if (((previousValue != value) 
							|| (this._Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Type.Entity = null;
						previousValue.Properties.Remove(this);
					}
					this._Type.Entity = value;
					if ((value != null))
					{
						value.Properties.Add(this);
						this._TypeID = value.ID;
					}
					else
					{
						this._TypeID = default(System.Guid);
					}
					this.SendPropertyChanged("Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConfigurationUserProperties(ConfigurationUserProperty entity)
		{
			this.SendPropertyChanging();
			entity.Property = this;
		}
		
		private void detach_ConfigurationUserProperties(ConfigurationUserProperty entity)
		{
			this.SendPropertyChanging();
			entity.Property = null;
		}
		
		private void attach_ProductProperties(ProductProperty entity)
		{
			this.SendPropertyChanging();
			entity.Property = this;
		}
		
		private void detach_ProductProperties(ProductProperty entity)
		{
			this.SendPropertyChanging();
			entity.Property = null;
		}
		
		private void attach_UserProperties(UserProperty entity)
		{
			this.SendPropertyChanging();
			entity.Property = this;
		}
		
		private void detach_UserProperties(UserProperty entity)
		{
			this.SendPropertyChanging();
			entity.Property = null;
		}
		
		private void Initialize()
		{
			this._ConfigurationUserProperties = new EntitySet<ConfigurationUserProperty>(new Action<ConfigurationUserProperty>(this.attach_ConfigurationUserProperties), new Action<ConfigurationUserProperty>(this.detach_ConfigurationUserProperties));
			this._ProductProperties = new EntitySet<ProductProperty>(new Action<ProductProperty>(this.attach_ProductProperties), new Action<ProductProperty>(this.detach_ProductProperties));
			this._UserProperties = new EntitySet<UserProperty>(new Action<UserProperty>(this.attach_UserProperties), new Action<UserProperty>(this.detach_UserProperties));
			this._Type = default(EntityRef<Type>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private EntitySet<RoleViewPermission> _RoleViewPermissions;
		
		private EntitySet<UserRole> _UserRoles;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Role()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleViewPermission", Storage="_RoleViewPermissions", ThisKey="ID", OtherKey="RoleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<RoleViewPermission> RoleViewPermissions
		{
			get
			{
				if ((this.serializing 
							&& (this._RoleViewPermissions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RoleViewPermissions;
			}
			set
			{
				this._RoleViewPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_UserRoles", ThisKey="ID", OtherKey="RoleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._UserRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoleViewPermissions(RoleViewPermission entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_RoleViewPermissions(RoleViewPermission entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void Initialize()
		{
			this._RoleViewPermissions = new EntitySet<RoleViewPermission>(new Action<RoleViewPermission>(this.attach_RoleViewPermissions), new Action<RoleViewPermission>(this.detach_RoleViewPermissions));
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_dictHS]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class _dictH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _cod_old;
		
		private int _hso;
		
		private string _hsn1;
		
		private string _hsn2;
		
		private string _Comment;
		
		private int _cod_Asp;
		
		private EntitySet<_dictNomen> @__dictNomens;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void Oncod_oldChanging(int value);
    partial void Oncod_oldChanged();
    partial void OnhsoChanging(int value);
    partial void OnhsoChanged();
    partial void Onhsn1Changing(string value);
    partial void Onhsn1Changed();
    partial void Onhsn2Changing(string value);
    partial void Onhsn2Changed();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void Oncod_AspChanging(int value);
    partial void Oncod_AspChanged();
    #endregion
		
		public _dictH()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod_old", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int cod_old
		{
			get
			{
				return this._cod_old;
			}
			set
			{
				if ((this._cod_old != value))
				{
					this.Oncod_oldChanging(value);
					this.SendPropertyChanging();
					this._cod_old = value;
					this.SendPropertyChanged("cod_old");
					this.Oncod_oldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hso", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int hso
		{
			get
			{
				return this._hso;
			}
			set
			{
				if ((this._hso != value))
				{
					this.OnhsoChanging(value);
					this.SendPropertyChanging();
					this._hso = value;
					this.SendPropertyChanged("hso");
					this.OnhsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hsn1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string hsn1
		{
			get
			{
				return this._hsn1;
			}
			set
			{
				if ((this._hsn1 != value))
				{
					this.Onhsn1Changing(value);
					this.SendPropertyChanging();
					this._hsn1 = value;
					this.SendPropertyChanged("hsn1");
					this.Onhsn1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hsn2", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string hsn2
		{
			get
			{
				return this._hsn2;
			}
			set
			{
				if ((this._hsn2 != value))
				{
					this.Onhsn2Changing(value);
					this.SendPropertyChanging();
					this._hsn2 = value;
					this.SendPropertyChanged("hsn2");
					this.Onhsn2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod_Asp", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int cod_Asp
		{
			get
			{
				return this._cod_Asp;
			}
			set
			{
				if ((this._cod_Asp != value))
				{
					this.Oncod_AspChanging(value);
					this.SendPropertyChanging();
					this._cod_Asp = value;
					this.SendPropertyChanged("cod_Asp");
					this.Oncod_AspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictH__dictNomen", Storage="__dictNomens", ThisKey="ID", OtherKey="_dictHSID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<_dictNomen> _dictNomens
		{
			get
			{
				if ((this.serializing 
							&& (this.@__dictNomens.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this.@__dictNomens;
			}
			set
			{
				this.@__dictNomens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach__dictNomens(_dictNomen entity)
		{
			this.SendPropertyChanging();
			entity._dictH = this;
		}
		
		private void detach__dictNomens(_dictNomen entity)
		{
			this.SendPropertyChanging();
			entity._dictH = null;
		}
		
		private void Initialize()
		{
			this.@__dictNomens = new EntitySet<_dictNomen>(new Action<_dictNomen>(this.attach__dictNomens), new Action<_dictNomen>(this.detach__dictNomens));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Type")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private EntitySet<Property> _Properties;
		
		private EntitySet<DictionaryProperty> _DictionaryProperties;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Type()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Property", Storage="_Properties", ThisKey="ID", OtherKey="TypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<Property> Properties
		{
			get
			{
				if ((this.serializing 
							&& (this._Properties.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Properties;
			}
			set
			{
				this._Properties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_DictionaryProperty", Storage="_DictionaryProperties", ThisKey="ID", OtherKey="TypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<DictionaryProperty> DictionaryProperties
		{
			get
			{
				if ((this.serializing 
							&& (this._DictionaryProperties.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DictionaryProperties;
			}
			set
			{
				this._DictionaryProperties.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Properties(Property entity)
		{
			this.SendPropertyChanging();
			entity.Type = this;
		}
		
		private void detach_Properties(Property entity)
		{
			this.SendPropertyChanging();
			entity.Type = null;
		}
		
		private void attach_DictionaryProperties(DictionaryProperty entity)
		{
			this.SendPropertyChanging();
			entity.Type = this;
		}
		
		private void detach_DictionaryProperties(DictionaryProperty entity)
		{
			this.SendPropertyChanging();
			entity.Type = null;
		}
		
		private void Initialize()
		{
			this._Properties = new EntitySet<Property>(new Action<Property>(this.attach_Properties), new Action<Property>(this.detach_Properties));
			this._DictionaryProperties = new EntitySet<DictionaryProperty>(new Action<DictionaryProperty>(this.attach_DictionaryProperties), new Action<DictionaryProperty>(this.detach_DictionaryProperties));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private string _Password;
		
		private EntitySet<ConfigurationUserField> _ConfigurationUserFields;
		
		private EntitySet<ConfigurationUserProperty> _ConfigurationUserProperties;
		
		private EntitySet<DictionaryUserField> _DictionaryUserFields;
		
		private EntitySet<UserField> _UserFields;
		
		private EntitySet<UserMenuItem> _UserMenuItems;
		
		private EntitySet<UserProperty> _UserProperties;
		
		private EntitySet<UserRole> _UserRoles;
		
		private EntitySet<UserSetting> _UserSettings;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public User()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ConfigurationUserField", Storage="_ConfigurationUserFields", ThisKey="ID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<ConfigurationUserField> ConfigurationUserFields
		{
			get
			{
				if ((this.serializing 
							&& (this._ConfigurationUserFields.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ConfigurationUserFields;
			}
			set
			{
				this._ConfigurationUserFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ConfigurationUserProperty", Storage="_ConfigurationUserProperties", ThisKey="ID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<ConfigurationUserProperty> ConfigurationUserProperties
		{
			get
			{
				if ((this.serializing 
							&& (this._ConfigurationUserProperties.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ConfigurationUserProperties;
			}
			set
			{
				this._ConfigurationUserProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DictionaryUserField", Storage="_DictionaryUserFields", ThisKey="ID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<DictionaryUserField> DictionaryUserFields
		{
			get
			{
				if ((this.serializing 
							&& (this._DictionaryUserFields.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DictionaryUserFields;
			}
			set
			{
				this._DictionaryUserFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserField", Storage="_UserFields", ThisKey="ID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<UserField> UserFields
		{
			get
			{
				if ((this.serializing 
							&& (this._UserFields.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserFields;
			}
			set
			{
				this._UserFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserMenuItem", Storage="_UserMenuItems", ThisKey="ID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<UserMenuItem> UserMenuItems
		{
			get
			{
				if ((this.serializing 
							&& (this._UserMenuItems.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserMenuItems;
			}
			set
			{
				this._UserMenuItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserProperty", Storage="_UserProperties", ThisKey="ID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<UserProperty> UserProperties
		{
			get
			{
				if ((this.serializing 
							&& (this._UserProperties.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserProperties;
			}
			set
			{
				this._UserProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_UserRoles", ThisKey="ID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._UserRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserSetting", Storage="_UserSettings", ThisKey="ID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<UserSetting> UserSettings
		{
			get
			{
				if ((this.serializing 
							&& (this._UserSettings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserSettings;
			}
			set
			{
				this._UserSettings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConfigurationUserFields(ConfigurationUserField entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ConfigurationUserFields(ConfigurationUserField entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ConfigurationUserProperties(ConfigurationUserProperty entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ConfigurationUserProperties(ConfigurationUserProperty entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_DictionaryUserFields(DictionaryUserField entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_DictionaryUserFields(DictionaryUserField entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserFields(UserField entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserFields(UserField entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserMenuItems(UserMenuItem entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserMenuItems(UserMenuItem entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserProperties(UserProperty entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserProperties(UserProperty entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserSettings(UserSetting entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserSettings(UserSetting entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void Initialize()
		{
			this._ConfigurationUserFields = new EntitySet<ConfigurationUserField>(new Action<ConfigurationUserField>(this.attach_ConfigurationUserFields), new Action<ConfigurationUserField>(this.detach_ConfigurationUserFields));
			this._ConfigurationUserProperties = new EntitySet<ConfigurationUserProperty>(new Action<ConfigurationUserProperty>(this.attach_ConfigurationUserProperties), new Action<ConfigurationUserProperty>(this.detach_ConfigurationUserProperties));
			this._DictionaryUserFields = new EntitySet<DictionaryUserField>(new Action<DictionaryUserField>(this.attach_DictionaryUserFields), new Action<DictionaryUserField>(this.detach_DictionaryUserFields));
			this._UserFields = new EntitySet<UserField>(new Action<UserField>(this.attach_UserFields), new Action<UserField>(this.detach_UserFields));
			this._UserMenuItems = new EntitySet<UserMenuItem>(new Action<UserMenuItem>(this.attach_UserMenuItems), new Action<UserMenuItem>(this.detach_UserMenuItems));
			this._UserProperties = new EntitySet<UserProperty>(new Action<UserProperty>(this.attach_UserProperties), new Action<UserProperty>(this.detach_UserProperties));
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			this._UserSettings = new EntitySet<UserSetting>(new Action<UserSetting>(this.attach_UserSettings), new Action<UserSetting>(this.detach_UserSettings));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserField")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _UserID;
		
		private System.Guid _ClassificationTreeID;
		
		private System.Guid _DictionaryTreeID;
		
		private System.Guid _DcitionaryPropertyID;
		
		private System.Guid _FieldPlaceHolderID;
		
		private int _Sequence;
		
		private EntityRef<FieldPlaceHolder> _FieldPlaceHolder;
		
		private EntityRef<User> _User;
		
		private EntityRef<DictionaryProperty> _DictionaryProperty;
		
		private EntityRef<DictionaryTree> _DictionaryTree;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnClassificationTreeIDChanging(System.Guid value);
    partial void OnClassificationTreeIDChanged();
    partial void OnDictionaryTreeIDChanging(System.Guid value);
    partial void OnDictionaryTreeIDChanged();
    partial void OnDcitionaryPropertyIDChanging(System.Guid value);
    partial void OnDcitionaryPropertyIDChanged();
    partial void OnFieldPlaceHolderIDChanging(System.Guid value);
    partial void OnFieldPlaceHolderIDChanged();
    partial void OnSequenceChanging(int value);
    partial void OnSequenceChanged();
    #endregion
		
		public UserField()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationTreeID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid ClassificationTreeID
		{
			get
			{
				return this._ClassificationTreeID;
			}
			set
			{
				if ((this._ClassificationTreeID != value))
				{
					this.OnClassificationTreeIDChanging(value);
					this.SendPropertyChanging();
					this._ClassificationTreeID = value;
					this.SendPropertyChanged("ClassificationTreeID");
					this.OnClassificationTreeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DictionaryTreeID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Guid DictionaryTreeID
		{
			get
			{
				return this._DictionaryTreeID;
			}
			set
			{
				if ((this._DictionaryTreeID != value))
				{
					if (this._DictionaryTree.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDictionaryTreeIDChanging(value);
					this.SendPropertyChanging();
					this._DictionaryTreeID = value;
					this.SendPropertyChanged("DictionaryTreeID");
					this.OnDictionaryTreeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DcitionaryPropertyID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid DcitionaryPropertyID
		{
			get
			{
				return this._DcitionaryPropertyID;
			}
			set
			{
				if ((this._DcitionaryPropertyID != value))
				{
					if (this._DictionaryProperty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDcitionaryPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._DcitionaryPropertyID = value;
					this.SendPropertyChanged("DcitionaryPropertyID");
					this.OnDcitionaryPropertyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldPlaceHolderID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Guid FieldPlaceHolderID
		{
			get
			{
				return this._FieldPlaceHolderID;
			}
			set
			{
				if ((this._FieldPlaceHolderID != value))
				{
					if (this._FieldPlaceHolder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldPlaceHolderIDChanging(value);
					this.SendPropertyChanging();
					this._FieldPlaceHolderID = value;
					this.SendPropertyChanged("FieldPlaceHolderID");
					this.OnFieldPlaceHolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldPlaceHolder_UserField", Storage="_FieldPlaceHolder", ThisKey="FieldPlaceHolderID", OtherKey="ID", IsForeignKey=true)]
		public FieldPlaceHolder FieldPlaceHolder
		{
			get
			{
				return this._FieldPlaceHolder.Entity;
			}
			set
			{
				FieldPlaceHolder previousValue = this._FieldPlaceHolder.Entity;
				if (((previousValue != value) 
							|| (this._FieldPlaceHolder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FieldPlaceHolder.Entity = null;
						previousValue.UserFields.Remove(this);
					}
					this._FieldPlaceHolder.Entity = value;
					if ((value != null))
					{
						value.UserFields.Add(this);
						this._FieldPlaceHolderID = value.ID;
					}
					else
					{
						this._FieldPlaceHolderID = default(System.Guid);
					}
					this.SendPropertyChanged("FieldPlaceHolder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserField", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserFields.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserFields.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DictionaryProperty_UserField", Storage="_DictionaryProperty", ThisKey="DcitionaryPropertyID", OtherKey="ID", IsForeignKey=true)]
		public DictionaryProperty DictionaryProperty
		{
			get
			{
				return this._DictionaryProperty.Entity;
			}
			set
			{
				DictionaryProperty previousValue = this._DictionaryProperty.Entity;
				if (((previousValue != value) 
							|| (this._DictionaryProperty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DictionaryProperty.Entity = null;
						previousValue.UserFields.Remove(this);
					}
					this._DictionaryProperty.Entity = value;
					if ((value != null))
					{
						value.UserFields.Add(this);
						this._DcitionaryPropertyID = value.ID;
					}
					else
					{
						this._DcitionaryPropertyID = default(System.Guid);
					}
					this.SendPropertyChanged("DictionaryProperty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DictionaryTree_UserField", Storage="_DictionaryTree", ThisKey="DictionaryTreeID", OtherKey="ID", IsForeignKey=true)]
		public DictionaryTree DictionaryTree
		{
			get
			{
				return this._DictionaryTree.Entity;
			}
			set
			{
				DictionaryTree previousValue = this._DictionaryTree.Entity;
				if (((previousValue != value) 
							|| (this._DictionaryTree.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DictionaryTree.Entity = null;
						previousValue.UserFields.Remove(this);
					}
					this._DictionaryTree.Entity = value;
					if ((value != null))
					{
						value.UserFields.Add(this);
						this._DictionaryTreeID = value.ID;
					}
					else
					{
						this._DictionaryTreeID = default(System.Guid);
					}
					this.SendPropertyChanged("DictionaryTree");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._FieldPlaceHolder = default(EntityRef<FieldPlaceHolder>);
			this._User = default(EntityRef<User>);
			this._DictionaryProperty = default(EntityRef<DictionaryProperty>);
			this._DictionaryTree = default(EntityRef<DictionaryTree>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMenuItem")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserMenuItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _UserID;
		
		private System.Guid _UserMenuTypeID;
		
		private string _Name;
		
		private System.Guid _ViewID;
		
		private System.DateTime _CreatedDate;
		
		private string _Url;
		
		private EntityRef<User> _User;
		
		private EntityRef<UserMenuType> _UserMenuType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnUserMenuTypeIDChanging(System.Guid value);
    partial void OnUserMenuTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnViewIDChanging(System.Guid value);
    partial void OnViewIDChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public UserMenuItem()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMenuTypeID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid UserMenuTypeID
		{
			get
			{
				return this._UserMenuTypeID;
			}
			set
			{
				if ((this._UserMenuTypeID != value))
				{
					if (this._UserMenuType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserMenuTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UserMenuTypeID = value;
					this.SendPropertyChanged("UserMenuTypeID");
					this.OnUserMenuTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid ViewID
		{
			get
			{
				return this._ViewID;
			}
			set
			{
				if ((this._ViewID != value))
				{
					this.OnViewIDChanging(value);
					this.SendPropertyChanging();
					this._ViewID = value;
					this.SendPropertyChanged("ViewID");
					this.OnViewIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserMenuItem", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserMenuItems.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserMenuItems.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMenuType_UserMenuItem", Storage="_UserMenuType", ThisKey="UserMenuTypeID", OtherKey="ID", IsForeignKey=true)]
		public UserMenuType UserMenuType
		{
			get
			{
				return this._UserMenuType.Entity;
			}
			set
			{
				UserMenuType previousValue = this._UserMenuType.Entity;
				if (((previousValue != value) 
							|| (this._UserMenuType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserMenuType.Entity = null;
						previousValue.UserMenuItems.Remove(this);
					}
					this._UserMenuType.Entity = value;
					if ((value != null))
					{
						value.UserMenuItems.Add(this);
						this._UserMenuTypeID = value.ID;
					}
					else
					{
						this._UserMenuTypeID = default(System.Guid);
					}
					this.SendPropertyChanged("UserMenuType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._User = default(EntityRef<User>);
			this._UserMenuType = default(EntityRef<UserMenuType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMenuType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserMenuType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private EntitySet<UserMenuItem> _UserMenuItems;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public UserMenuType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMenuType_UserMenuItem", Storage="_UserMenuItems", ThisKey="ID", OtherKey="UserMenuTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<UserMenuItem> UserMenuItems
		{
			get
			{
				if ((this.serializing 
							&& (this._UserMenuItems.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserMenuItems;
			}
			set
			{
				this._UserMenuItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserMenuItems(UserMenuItem entity)
		{
			this.SendPropertyChanging();
			entity.UserMenuType = this;
		}
		
		private void detach_UserMenuItems(UserMenuItem entity)
		{
			this.SendPropertyChanging();
			entity.UserMenuType = null;
		}
		
		private void Initialize()
		{
			this._UserMenuItems = new EntitySet<UserMenuItem>(new Action<UserMenuItem>(this.attach_UserMenuItems), new Action<UserMenuItem>(this.detach_UserMenuItems));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProperty")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _UserID;
		
		private System.Guid _PropertyID;
		
		private System.Guid _ClassificationTreeID;
		
		private System.Guid _FieldPlaceHolderID;
		
		private int _Sequence;
		
		private EntityRef<FieldPlaceHolder> _FieldPlaceHolder;
		
		private EntityRef<Property> _Property;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnPropertyIDChanging(System.Guid value);
    partial void OnPropertyIDChanged();
    partial void OnClassificationTreeIDChanging(System.Guid value);
    partial void OnClassificationTreeIDChanged();
    partial void OnFieldPlaceHolderIDChanging(System.Guid value);
    partial void OnFieldPlaceHolderIDChanged();
    partial void OnSequenceChanging(int value);
    partial void OnSequenceChanged();
    #endregion
		
		public UserProperty()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid PropertyID
		{
			get
			{
				return this._PropertyID;
			}
			set
			{
				if ((this._PropertyID != value))
				{
					if (this._Property.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyID = value;
					this.SendPropertyChanged("PropertyID");
					this.OnPropertyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationTreeID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Guid ClassificationTreeID
		{
			get
			{
				return this._ClassificationTreeID;
			}
			set
			{
				if ((this._ClassificationTreeID != value))
				{
					this.OnClassificationTreeIDChanging(value);
					this.SendPropertyChanging();
					this._ClassificationTreeID = value;
					this.SendPropertyChanged("ClassificationTreeID");
					this.OnClassificationTreeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldPlaceHolderID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid FieldPlaceHolderID
		{
			get
			{
				return this._FieldPlaceHolderID;
			}
			set
			{
				if ((this._FieldPlaceHolderID != value))
				{
					if (this._FieldPlaceHolder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldPlaceHolderIDChanging(value);
					this.SendPropertyChanging();
					this._FieldPlaceHolderID = value;
					this.SendPropertyChanged("FieldPlaceHolderID");
					this.OnFieldPlaceHolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldPlaceHolder_UserProperty", Storage="_FieldPlaceHolder", ThisKey="FieldPlaceHolderID", OtherKey="ID", IsForeignKey=true)]
		public FieldPlaceHolder FieldPlaceHolder
		{
			get
			{
				return this._FieldPlaceHolder.Entity;
			}
			set
			{
				FieldPlaceHolder previousValue = this._FieldPlaceHolder.Entity;
				if (((previousValue != value) 
							|| (this._FieldPlaceHolder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FieldPlaceHolder.Entity = null;
						previousValue.UserProperties.Remove(this);
					}
					this._FieldPlaceHolder.Entity = value;
					if ((value != null))
					{
						value.UserProperties.Add(this);
						this._FieldPlaceHolderID = value.ID;
					}
					else
					{
						this._FieldPlaceHolderID = default(System.Guid);
					}
					this.SendPropertyChanged("FieldPlaceHolder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Property_UserProperty", Storage="_Property", ThisKey="PropertyID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Property Property
		{
			get
			{
				return this._Property.Entity;
			}
			set
			{
				Property previousValue = this._Property.Entity;
				if (((previousValue != value) 
							|| (this._Property.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Property.Entity = null;
						previousValue.UserProperties.Remove(this);
					}
					this._Property.Entity = value;
					if ((value != null))
					{
						value.UserProperties.Add(this);
						this._PropertyID = value.ID;
					}
					else
					{
						this._PropertyID = default(System.Guid);
					}
					this.SendPropertyChanged("Property");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserProperty", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserProperties.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserProperties.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._FieldPlaceHolder = default(EntityRef<FieldPlaceHolder>);
			this._Property = default(EntityRef<Property>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRole")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _UserID;
		
		private System.Guid _RoleID;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnRoleIDChanging(System.Guid value);
    partial void OnRoleIDChanged();
    #endregion
		
		public UserRole()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Role = default(EntityRef<Role>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Configuration")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Configuration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _ProductID;
		
		private decimal _Quantity;
		
		private string _Position;
		
		private string _Zone;
		
		private string _Comment;
		
		private int _QuantityInclusive;
		
		private bool _AutoUpdate;
		
		private System.Nullable<int> _GroupNumber;
		
		private System.Nullable<int> _GroupToChange;
		
		private System.Nullable<System.Guid> @__dictUMID;
		
		private System.Guid _ProductOwnerID;
		
		private System.Nullable<int> _version;
		
		private System.Nullable<System.Guid> _UserID;
		
		private System.Nullable<System.DateTime> _dt_upd;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Product> _Product1;
		
		private EntityRef<_dictUM> @__dictUM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnProductIDChanging(System.Guid value);
    partial void OnProductIDChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnZoneChanging(string value);
    partial void OnZoneChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnQuantityInclusiveChanging(int value);
    partial void OnQuantityInclusiveChanged();
    partial void OnAutoUpdateChanging(bool value);
    partial void OnAutoUpdateChanged();
    partial void OnGroupNumberChanging(System.Nullable<int> value);
    partial void OnGroupNumberChanged();
    partial void OnGroupToChangeChanging(System.Nullable<int> value);
    partial void OnGroupToChangeChanged();
    partial void On_dictUMIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictUMIDChanged();
    partial void OnProductOwnerIDChanging(System.Guid value);
    partial void OnProductOwnerIDChanged();
    partial void OnversionChanging(System.Nullable<int> value);
    partial void OnversionChanged();
    partial void OnUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnUserIDChanged();
    partial void Ondt_updChanging(System.Nullable<System.DateTime> value);
    partial void Ondt_updChanged();
    #endregion
		
		public Configuration()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zone", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Zone
		{
			get
			{
				return this._Zone;
			}
			set
			{
				if ((this._Zone != value))
				{
					this.OnZoneChanging(value);
					this.SendPropertyChanging();
					this._Zone = value;
					this.SendPropertyChanged("Zone");
					this.OnZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(250)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityInclusive", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int QuantityInclusive
		{
			get
			{
				return this._QuantityInclusive;
			}
			set
			{
				if ((this._QuantityInclusive != value))
				{
					this.OnQuantityInclusiveChanging(value);
					this.SendPropertyChanging();
					this._QuantityInclusive = value;
					this.SendPropertyChanged("QuantityInclusive");
					this.OnQuantityInclusiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoUpdate", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool AutoUpdate
		{
			get
			{
				return this._AutoUpdate;
			}
			set
			{
				if ((this._AutoUpdate != value))
				{
					this.OnAutoUpdateChanging(value);
					this.SendPropertyChanging();
					this._AutoUpdate = value;
					this.SendPropertyChanged("AutoUpdate");
					this.OnAutoUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupNumber", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> GroupNumber
		{
			get
			{
				return this._GroupNumber;
			}
			set
			{
				if ((this._GroupNumber != value))
				{
					this.OnGroupNumberChanging(value);
					this.SendPropertyChanging();
					this._GroupNumber = value;
					this.SendPropertyChanged("GroupNumber");
					this.OnGroupNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupToChange", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> GroupToChange
		{
			get
			{
				return this._GroupToChange;
			}
			set
			{
				if ((this._GroupToChange != value))
				{
					this.OnGroupToChangeChanging(value);
					this.SendPropertyChanging();
					this._GroupToChange = value;
					this.SendPropertyChanged("GroupToChange");
					this.OnGroupToChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictUMID]", Storage="__dictUMID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<System.Guid> _dictUMID
		{
			get
			{
				return this.@__dictUMID;
			}
			set
			{
				if ((this.@__dictUMID != value))
				{
					this.On_dictUMIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictUMID = value;
					this.SendPropertyChanged("_dictUMID");
					this.On_dictUMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductOwnerID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Guid ProductOwnerID
		{
			get
			{
				return this._ProductOwnerID;
			}
			set
			{
				if ((this._ProductOwnerID != value))
				{
					if (this._Product1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._ProductOwnerID = value;
					this.SendPropertyChanged("ProductOwnerID");
					this.OnProductOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<int> version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<System.Guid> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_upd", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<System.DateTime> dt_upd
		{
			get
			{
				return this._dt_upd;
			}
			set
			{
				if ((this._dt_upd != value))
				{
					this.Ondt_updChanging(value);
					this.SendPropertyChanging();
					this._dt_upd = value;
					this.SendPropertyChanged("dt_upd");
					this.Ondt_updChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Configuration", Storage="_Product", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Configurations.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Configurations.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(System.Guid);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Configuration1", Storage="_Product1", ThisKey="ProductOwnerID", OtherKey="ID", IsForeignKey=true)]
		public Product Product1
		{
			get
			{
				return this._Product1.Entity;
			}
			set
			{
				Product previousValue = this._Product1.Entity;
				if (((previousValue != value) 
							|| (this._Product1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product1.Entity = null;
						previousValue.Configurations1.Remove(this);
					}
					this._Product1.Entity = value;
					if ((value != null))
					{
						value.Configurations1.Add(this);
						this._ProductOwnerID = value.ID;
					}
					else
					{
						this._ProductOwnerID = default(System.Guid);
					}
					this.SendPropertyChanged("Product1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictUM_Configuration", Storage="__dictUM", ThisKey="_dictUMID", OtherKey="ID", IsForeignKey=true)]
		public _dictUM _dictUM
		{
			get
			{
				return this.@__dictUM.Entity;
			}
			set
			{
				_dictUM previousValue = this.@__dictUM.Entity;
				if (((previousValue != value) 
							|| (this.@__dictUM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__dictUM.Entity = null;
						previousValue.Configurations.Remove(this);
					}
					this.@__dictUM.Entity = value;
					if ((value != null))
					{
						value.Configurations.Add(this);
						this.@__dictUMID = value.ID;
					}
					else
					{
						this.@__dictUMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("_dictUM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Product = default(EntityRef<Product>);
			this._Product1 = default(EntityRef<Product>);
			this.@__dictUM = default(EntityRef<_dictUM>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.Guid> @__dictPVDID;
		
		private System.Nullable<System.Guid> @__dictSFID;
		
		private System.Nullable<System.Guid> @__dictUMID;
		
		private System.Nullable<int> _cod_Asp;
		
		private System.Nullable<System.Guid> @__dictNomenID;
		
		private System.Nullable<System.Guid> @__dictNomen1ID;
		
		private System.Nullable<int> _cod_Nomen_Asp;
		
		private System.Nullable<int> _cod_Nomen1_Asp;
		
		private System.Nullable<System.Guid> _userID;
		
		private EntitySet<ClassificationTreeProduct> _ClassificationTreeProducts;
		
		private EntitySet<CustomClassificationNodeProduct> _CustomClassificationNodeProducts;
		
		private EntitySet<ProductProperty> _ProductProperties;
		
		private EntitySet<Configuration> _Configurations;
		
		private EntitySet<Configuration> _Configurations1;
		
		private EntityRef<_dictNomen> @__dictNomen;
		
		private EntityRef<_dictNomen> @__dictNomen1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void On_dictPVDIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictPVDIDChanged();
    partial void On_dictSFIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictSFIDChanged();
    partial void On_dictUMIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictUMIDChanged();
    partial void Oncod_AspChanging(System.Nullable<int> value);
    partial void Oncod_AspChanged();
    partial void On_dictNomenIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictNomenIDChanged();
    partial void On_dictNomen1IDChanging(System.Nullable<System.Guid> value);
    partial void On_dictNomen1IDChanged();
    partial void Oncod_Nomen_AspChanging(System.Nullable<int> value);
    partial void Oncod_Nomen_AspChanged();
    partial void Oncod_Nomen1_AspChanging(System.Nullable<int> value);
    partial void Oncod_Nomen1_AspChanged();
    partial void OnuserIDChanging(System.Nullable<System.Guid> value);
    partial void OnuserIDChanged();
    #endregion
		
		public Product()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(300) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictPVDID]", Storage="__dictPVDID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.Guid> _dictPVDID
		{
			get
			{
				return this.@__dictPVDID;
			}
			set
			{
				if ((this.@__dictPVDID != value))
				{
					this.On_dictPVDIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictPVDID = value;
					this.SendPropertyChanged("_dictPVDID");
					this.On_dictPVDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictSFID]", Storage="__dictSFID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.Guid> _dictSFID
		{
			get
			{
				return this.@__dictSFID;
			}
			set
			{
				if ((this.@__dictSFID != value))
				{
					this.On_dictSFIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictSFID = value;
					this.SendPropertyChanged("_dictSFID");
					this.On_dictSFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictUMID]", Storage="__dictUMID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.Guid> _dictUMID
		{
			get
			{
				return this.@__dictUMID;
			}
			set
			{
				if ((this.@__dictUMID != value))
				{
					this.On_dictUMIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictUMID = value;
					this.SendPropertyChanged("_dictUMID");
					this.On_dictUMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod_Asp", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> cod_Asp
		{
			get
			{
				return this._cod_Asp;
			}
			set
			{
				if ((this._cod_Asp != value))
				{
					this.Oncod_AspChanging(value);
					this.SendPropertyChanging();
					this._cod_Asp = value;
					this.SendPropertyChanged("cod_Asp");
					this.Oncod_AspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictNomenID]", Storage="__dictNomenID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.Guid> _dictNomenID
		{
			get
			{
				return this.@__dictNomenID;
			}
			set
			{
				if ((this.@__dictNomenID != value))
				{
					this.On_dictNomenIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictNomenID = value;
					this.SendPropertyChanged("_dictNomenID");
					this.On_dictNomenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictNomen1ID]", Storage="__dictNomen1ID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.Guid> _dictNomen1ID
		{
			get
			{
				return this.@__dictNomen1ID;
			}
			set
			{
				if ((this.@__dictNomen1ID != value))
				{
					this.On_dictNomen1IDChanging(value);
					this.SendPropertyChanging();
					this.@__dictNomen1ID = value;
					this.SendPropertyChanged("_dictNomen1ID");
					this.On_dictNomen1IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod_Nomen_Asp", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> cod_Nomen_Asp
		{
			get
			{
				return this._cod_Nomen_Asp;
			}
			set
			{
				if ((this._cod_Nomen_Asp != value))
				{
					this.Oncod_Nomen_AspChanging(value);
					this.SendPropertyChanging();
					this._cod_Nomen_Asp = value;
					this.SendPropertyChanged("cod_Nomen_Asp");
					this.Oncod_Nomen_AspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod_Nomen1_Asp", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> cod_Nomen1_Asp
		{
			get
			{
				return this._cod_Nomen1_Asp;
			}
			set
			{
				if ((this._cod_Nomen1_Asp != value))
				{
					this.Oncod_Nomen1_AspChanging(value);
					this.SendPropertyChanging();
					this._cod_Nomen1_Asp = value;
					this.SendPropertyChanged("cod_Nomen1_Asp");
					this.Oncod_Nomen1_AspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[userID]", Storage="_userID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<System.Guid> userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ClassificationTreeProduct", Storage="_ClassificationTreeProducts", ThisKey="ID", OtherKey="ProductID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<ClassificationTreeProduct> ClassificationTreeProducts
		{
			get
			{
				if ((this.serializing 
							&& (this._ClassificationTreeProducts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ClassificationTreeProducts;
			}
			set
			{
				this._ClassificationTreeProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_CustomClassificationNodeProduct", Storage="_CustomClassificationNodeProducts", ThisKey="ID", OtherKey="ProductID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<CustomClassificationNodeProduct> CustomClassificationNodeProducts
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomClassificationNodeProducts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomClassificationNodeProducts;
			}
			set
			{
				this._CustomClassificationNodeProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductProperty", Storage="_ProductProperties", ThisKey="ID", OtherKey="ProductID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<ProductProperty> ProductProperties
		{
			get
			{
				if ((this.serializing 
							&& (this._ProductProperties.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProductProperties;
			}
			set
			{
				this._ProductProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Configuration", Storage="_Configurations", ThisKey="ID", OtherKey="ProductID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<Configuration> Configurations
		{
			get
			{
				if ((this.serializing 
							&& (this._Configurations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Configurations;
			}
			set
			{
				this._Configurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Configuration1", Storage="_Configurations1", ThisKey="ID", OtherKey="ProductOwnerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<Configuration> Configurations1
		{
			get
			{
				if ((this.serializing 
							&& (this._Configurations1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Configurations1;
			}
			set
			{
				this._Configurations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_Product", Storage="__dictNomen", ThisKey="_dictNomenID", OtherKey="ID", IsForeignKey=true)]
		public _dictNomen _dictNomen
		{
			get
			{
				return this.@__dictNomen.Entity;
			}
			set
			{
				_dictNomen previousValue = this.@__dictNomen.Entity;
				if (((previousValue != value) 
							|| (this.@__dictNomen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__dictNomen.Entity = null;
						previousValue.Products.Remove(this);
					}
					this.@__dictNomen.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this.@__dictNomenID = value.ID;
					}
					else
					{
						this.@__dictNomenID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("_dictNomen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_Product1", Storage="__dictNomen1", ThisKey="_dictNomen1ID", OtherKey="ID", IsForeignKey=true)]
		public _dictNomen _dictNomen1
		{
			get
			{
				return this.@__dictNomen1.Entity;
			}
			set
			{
				_dictNomen previousValue = this.@__dictNomen1.Entity;
				if (((previousValue != value) 
							|| (this.@__dictNomen1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__dictNomen1.Entity = null;
						previousValue.Products1.Remove(this);
					}
					this.@__dictNomen1.Entity = value;
					if ((value != null))
					{
						value.Products1.Add(this);
						this.@__dictNomen1ID = value.ID;
					}
					else
					{
						this.@__dictNomen1ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("_dictNomen1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClassificationTreeProducts(ClassificationTreeProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ClassificationTreeProducts(ClassificationTreeProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_CustomClassificationNodeProducts(CustomClassificationNodeProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_CustomClassificationNodeProducts(CustomClassificationNodeProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductProperties(ProductProperty entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductProperties(ProductProperty entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Configurations(Configuration entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Configurations(Configuration entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Configurations1(Configuration entity)
		{
			this.SendPropertyChanging();
			entity.Product1 = this;
		}
		
		private void detach_Configurations1(Configuration entity)
		{
			this.SendPropertyChanging();
			entity.Product1 = null;
		}
		
		private void Initialize()
		{
			this._ClassificationTreeProducts = new EntitySet<ClassificationTreeProduct>(new Action<ClassificationTreeProduct>(this.attach_ClassificationTreeProducts), new Action<ClassificationTreeProduct>(this.detach_ClassificationTreeProducts));
			this._CustomClassificationNodeProducts = new EntitySet<CustomClassificationNodeProduct>(new Action<CustomClassificationNodeProduct>(this.attach_CustomClassificationNodeProducts), new Action<CustomClassificationNodeProduct>(this.detach_CustomClassificationNodeProducts));
			this._ProductProperties = new EntitySet<ProductProperty>(new Action<ProductProperty>(this.attach_ProductProperties), new Action<ProductProperty>(this.detach_ProductProperties));
			this._Configurations = new EntitySet<Configuration>(new Action<Configuration>(this.attach_Configurations), new Action<Configuration>(this.detach_Configurations));
			this._Configurations1 = new EntitySet<Configuration>(new Action<Configuration>(this.attach_Configurations1), new Action<Configuration>(this.detach_Configurations1));
			this.@__dictNomen = default(EntityRef<_dictNomen>);
			this.@__dictNomen1 = default(EntityRef<_dictNomen>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_dictNomen]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class _dictNomen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _pn1;
		
		private System.Nullable<decimal> _pw;
		
		private string _cmt_ogt;
		
		private string _cmt_skb;
		
		private string _cmt;
		
		private System.Nullable<decimal> _raznes;
		
		private System.Nullable<System.DateTime> _dt_izg;
		
		private System.Nullable<decimal> _kol_izg;
		
		private System.Nullable<int> _ost;
		
		private string _superpole;
		
		private string _kodmat;
		
		private string _top_marka;
		
		private string _gosthimstr;
		
		private System.Nullable<System.Guid> @__dictP1StID;
		
		private System.Nullable<System.Guid> @__dictGostID;
		
		private System.Nullable<System.Guid> @__dictHSID;
		
		private System.Nullable<System.Guid> @__dictSortamID;
		
		private System.Nullable<System.Guid> @__dictMarkaID;
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> @__dictFDID;
		
		private System.Nullable<char> _ost_m1;
		
		private string _name2;
		
		private System.Nullable<System.Guid> @__dictSortam1ID;
		
		private string _pn2_2;
		
		private System.Nullable<System.Guid> @__dictMarka1ID;
		
		private string _pn2 = default(string);
		
		private System.Nullable<int> _cod;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<Product> _Products1;
		
		private EntitySet<Specification_1> _Specification_1s;
		
		private EntitySet<Specification_1> _Specification_1s1;
		
		private EntitySet<Specification_2> _Specification_2s;
		
		private EntitySet<Specification_2> _Specification_2s1;
		
		private EntityRef<Specification_3> _Specification_3s;
		
		private EntityRef<Specification_3> _Specification_3s1;
		
		private EntityRef<TechnReadiness> _TechnReadinesses;
		
		private EntityRef<_dictH> @__dictH;
		
		private EntityRef<TechnDate> _TechnDate;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpn1Changing(string value);
    partial void Onpn1Changed();
    partial void OnpwChanging(System.Nullable<decimal> value);
    partial void OnpwChanged();
    partial void Oncmt_ogtChanging(string value);
    partial void Oncmt_ogtChanged();
    partial void Oncmt_skbChanging(string value);
    partial void Oncmt_skbChanged();
    partial void OncmtChanging(string value);
    partial void OncmtChanged();
    partial void OnraznesChanging(System.Nullable<decimal> value);
    partial void OnraznesChanged();
    partial void Ondt_izgChanging(System.Nullable<System.DateTime> value);
    partial void Ondt_izgChanged();
    partial void Onkol_izgChanging(System.Nullable<decimal> value);
    partial void Onkol_izgChanged();
    partial void OnostChanging(System.Nullable<int> value);
    partial void OnostChanged();
    partial void OnsuperpoleChanging(string value);
    partial void OnsuperpoleChanged();
    partial void OnkodmatChanging(string value);
    partial void OnkodmatChanged();
    partial void Ontop_markaChanging(string value);
    partial void Ontop_markaChanged();
    partial void OngosthimstrChanging(string value);
    partial void OngosthimstrChanged();
    partial void On_dictP1StIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictP1StIDChanged();
    partial void On_dictGostIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictGostIDChanged();
    partial void On_dictHSIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictHSIDChanged();
    partial void On_dictSortamIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictSortamIDChanged();
    partial void On_dictMarkaIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictMarkaIDChanged();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void On_dictFDIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictFDIDChanged();
    partial void Onost_m1Changing(System.Nullable<char> value);
    partial void Onost_m1Changed();
    partial void Onname2Changing(string value);
    partial void Onname2Changed();
    partial void On_dictSortam1IDChanging(System.Nullable<System.Guid> value);
    partial void On_dictSortam1IDChanged();
    partial void Onpn2_2Changing(string value);
    partial void Onpn2_2Changed();
    partial void On_dictMarka1IDChanging(System.Nullable<System.Guid> value);
    partial void On_dictMarka1IDChanged();
    partial void Onpn2Changing(string value);
    partial void Onpn2Changed();
    partial void OncodChanging(System.Nullable<int> value);
    partial void OncodChanged();
    #endregion
		
		public _dictNomen()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pn1", DbType="Char(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string pn1
		{
			get
			{
				return this._pn1;
			}
			set
			{
				if ((this._pn1 != value))
				{
					this.Onpn1Changing(value);
					this.SendPropertyChanging();
					this._pn1 = value;
					this.SendPropertyChanged("pn1");
					this.Onpn1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pw", DbType="Decimal(14,7)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<decimal> pw
		{
			get
			{
				return this._pw;
			}
			set
			{
				if ((this._pw != value))
				{
					this.OnpwChanging(value);
					this.SendPropertyChanging();
					this._pw = value;
					this.SendPropertyChanged("pw");
					this.OnpwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmt_ogt", DbType="Char(40)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string cmt_ogt
		{
			get
			{
				return this._cmt_ogt;
			}
			set
			{
				if ((this._cmt_ogt != value))
				{
					this.Oncmt_ogtChanging(value);
					this.SendPropertyChanging();
					this._cmt_ogt = value;
					this.SendPropertyChanged("cmt_ogt");
					this.Oncmt_ogtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmt_skb", DbType="Char(25)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string cmt_skb
		{
			get
			{
				return this._cmt_skb;
			}
			set
			{
				if ((this._cmt_skb != value))
				{
					this.Oncmt_skbChanging(value);
					this.SendPropertyChanging();
					this._cmt_skb = value;
					this.SendPropertyChanged("cmt_skb");
					this.Oncmt_skbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmt", DbType="Char(25)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string cmt
		{
			get
			{
				return this._cmt;
			}
			set
			{
				if ((this._cmt != value))
				{
					this.OncmtChanging(value);
					this.SendPropertyChanging();
					this._cmt = value;
					this.SendPropertyChanged("cmt");
					this.OncmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_raznes", DbType="Decimal(11,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<decimal> raznes
		{
			get
			{
				return this._raznes;
			}
			set
			{
				if ((this._raznes != value))
				{
					this.OnraznesChanging(value);
					this.SendPropertyChanging();
					this._raznes = value;
					this.SendPropertyChanged("raznes");
					this.OnraznesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_izg", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> dt_izg
		{
			get
			{
				return this._dt_izg;
			}
			set
			{
				if ((this._dt_izg != value))
				{
					this.Ondt_izgChanging(value);
					this.SendPropertyChanging();
					this._dt_izg = value;
					this.SendPropertyChanged("dt_izg");
					this.Ondt_izgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kol_izg", DbType="Decimal(6,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<decimal> kol_izg
		{
			get
			{
				return this._kol_izg;
			}
			set
			{
				if ((this._kol_izg != value))
				{
					this.Onkol_izgChanging(value);
					this.SendPropertyChanging();
					this._kol_izg = value;
					this.SendPropertyChanged("kol_izg");
					this.Onkol_izgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ost", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> ost
		{
			get
			{
				return this._ost;
			}
			set
			{
				if ((this._ost != value))
				{
					this.OnostChanging(value);
					this.SendPropertyChanging();
					this._ost = value;
					this.SendPropertyChanged("ost");
					this.OnostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_superpole", DbType="Char(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string superpole
		{
			get
			{
				return this._superpole;
			}
			set
			{
				if ((this._superpole != value))
				{
					this.OnsuperpoleChanging(value);
					this.SendPropertyChanging();
					this._superpole = value;
					this.SendPropertyChanged("superpole");
					this.OnsuperpoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kodmat", DbType="Char(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string kodmat
		{
			get
			{
				return this._kodmat;
			}
			set
			{
				if ((this._kodmat != value))
				{
					this.OnkodmatChanging(value);
					this.SendPropertyChanging();
					this._kodmat = value;
					this.SendPropertyChanged("kodmat");
					this.OnkodmatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_top_marka", DbType="Char(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string top_marka
		{
			get
			{
				return this._top_marka;
			}
			set
			{
				if ((this._top_marka != value))
				{
					this.Ontop_markaChanging(value);
					this.SendPropertyChanging();
					this._top_marka = value;
					this.SendPropertyChanged("top_marka");
					this.Ontop_markaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gosthimstr", DbType="Char(25)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string gosthimstr
		{
			get
			{
				return this._gosthimstr;
			}
			set
			{
				if ((this._gosthimstr != value))
				{
					this.OngosthimstrChanging(value);
					this.SendPropertyChanging();
					this._gosthimstr = value;
					this.SendPropertyChanged("gosthimstr");
					this.OngosthimstrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictP1StID]", Storage="__dictP1StID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<System.Guid> _dictP1StID
		{
			get
			{
				return this.@__dictP1StID;
			}
			set
			{
				if ((this.@__dictP1StID != value))
				{
					this.On_dictP1StIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictP1StID = value;
					this.SendPropertyChanged("_dictP1StID");
					this.On_dictP1StIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictGostID]", Storage="__dictGostID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<System.Guid> _dictGostID
		{
			get
			{
				return this.@__dictGostID;
			}
			set
			{
				if ((this.@__dictGostID != value))
				{
					this.On_dictGostIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictGostID = value;
					this.SendPropertyChanged("_dictGostID");
					this.On_dictGostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictHSID]", Storage="__dictHSID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<System.Guid> _dictHSID
		{
			get
			{
				return this.@__dictHSID;
			}
			set
			{
				if ((this.@__dictHSID != value))
				{
					this.On_dictHSIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictHSID = value;
					this.SendPropertyChanged("_dictHSID");
					this.On_dictHSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictSortamID]", Storage="__dictSortamID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<System.Guid> _dictSortamID
		{
			get
			{
				return this.@__dictSortamID;
			}
			set
			{
				if ((this.@__dictSortamID != value))
				{
					this.On_dictSortamIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictSortamID = value;
					this.SendPropertyChanged("_dictSortamID");
					this.On_dictSortamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictMarkaID]", Storage="__dictMarkaID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<System.Guid> _dictMarkaID
		{
			get
			{
				return this.@__dictMarkaID;
			}
			set
			{
				if ((this.@__dictMarkaID != value))
				{
					this.On_dictMarkaIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictMarkaID = value;
					this.SendPropertyChanged("_dictMarkaID");
					this.On_dictMarkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._TechnDate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictFDID]", Storage="__dictFDID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<System.Guid> _dictFDID
		{
			get
			{
				return this.@__dictFDID;
			}
			set
			{
				if ((this.@__dictFDID != value))
				{
					this.On_dictFDIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictFDID = value;
					this.SendPropertyChanged("_dictFDID");
					this.On_dictFDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ost_m1", DbType="NChar(1)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<char> ost_m1
		{
			get
			{
				return this._ost_m1;
			}
			set
			{
				if ((this._ost_m1 != value))
				{
					this.Onost_m1Changing(value);
					this.SendPropertyChanging();
					this._ost_m1 = value;
					this.SendPropertyChanged("ost_m1");
					this.Onost_m1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name2", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string name2
		{
			get
			{
				return this._name2;
			}
			set
			{
				if ((this._name2 != value))
				{
					this.Onname2Changing(value);
					this.SendPropertyChanging();
					this._name2 = value;
					this.SendPropertyChanged("name2");
					this.Onname2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictSortam1ID]", Storage="__dictSortam1ID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<System.Guid> _dictSortam1ID
		{
			get
			{
				return this.@__dictSortam1ID;
			}
			set
			{
				if ((this.@__dictSortam1ID != value))
				{
					this.On_dictSortam1IDChanging(value);
					this.SendPropertyChanging();
					this.@__dictSortam1ID = value;
					this.SendPropertyChanged("_dictSortam1ID");
					this.On_dictSortam1IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pn2_2", DbType="VarChar(40)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string pn2_2
		{
			get
			{
				return this._pn2_2;
			}
			set
			{
				if ((this._pn2_2 != value))
				{
					this.Onpn2_2Changing(value);
					this.SendPropertyChanging();
					this._pn2_2 = value;
					this.SendPropertyChanged("pn2_2");
					this.Onpn2_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictMarka1ID]", Storage="__dictMarka1ID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<System.Guid> _dictMarka1ID
		{
			get
			{
				return this.@__dictMarka1ID;
			}
			set
			{
				if ((this.@__dictMarka1ID != value))
				{
					this.On_dictMarka1IDChanging(value);
					this.SendPropertyChanging();
					this.@__dictMarka1ID = value;
					this.SendPropertyChanged("_dictMarka1ID");
					this.On_dictMarka1IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pn2", DbType="VarChar(300)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public string pn2
		{
			get
			{
				return this._pn2;
			}
			set
			{
				if ((this._pn2 != value))
				{
					this.Onpn2Changing(value);
					this.SendPropertyChanging();
					this._pn2 = value;
					this.SendPropertyChanged("pn2");
					this.Onpn2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public System.Nullable<int> cod
		{
			get
			{
				return this._cod;
			}
			set
			{
				if ((this._cod != value))
				{
					this.OncodChanging(value);
					this.SendPropertyChanging();
					this._cod = value;
					this.SendPropertyChanged("cod");
					this.OncodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_Product", Storage="_Products", ThisKey="ID", OtherKey="_dictNomenID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public EntitySet<Product> Products
		{
			get
			{
				if ((this.serializing 
							&& (this._Products.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_Product1", Storage="_Products1", ThisKey="ID", OtherKey="_dictNomen1ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29, EmitDefaultValue=false)]
		public EntitySet<Product> Products1
		{
			get
			{
				if ((this.serializing 
							&& (this._Products1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Products1;
			}
			set
			{
				this._Products1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_Specification_1", Storage="_Specification_1s", ThisKey="ID", OtherKey="_Product_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30, EmitDefaultValue=false)]
		public EntitySet<Specification_1> Specification_1s
		{
			get
			{
				if ((this.serializing 
							&& (this._Specification_1s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Specification_1s;
			}
			set
			{
				this._Specification_1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_Specification_11", Storage="_Specification_1s1", ThisKey="ID", OtherKey="_Material_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31, EmitDefaultValue=false)]
		public EntitySet<Specification_1> Specification_1s1
		{
			get
			{
				if ((this.serializing 
							&& (this._Specification_1s1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Specification_1s1;
			}
			set
			{
				this._Specification_1s1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_Specification_2", Storage="_Specification_2s", ThisKey="ID", OtherKey="_Product_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32, EmitDefaultValue=false)]
		public EntitySet<Specification_2> Specification_2s
		{
			get
			{
				if ((this.serializing 
							&& (this._Specification_2s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Specification_2s;
			}
			set
			{
				this._Specification_2s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_Specification_21", Storage="_Specification_2s1", ThisKey="ID", OtherKey="_Material_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33, EmitDefaultValue=false)]
		public EntitySet<Specification_2> Specification_2s1
		{
			get
			{
				if ((this.serializing 
							&& (this._Specification_2s1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Specification_2s1;
			}
			set
			{
				this._Specification_2s1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_Specification_3", Storage="_Specification_3s", ThisKey="ID", OtherKey="_Product_ID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34, EmitDefaultValue=false)]
		public Specification_3 Specification_3s
		{
			get
			{
				if ((this.serializing 
							&& (this._Specification_3s.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Specification_3s.Entity;
			}
			set
			{
				Specification_3 previousValue = this._Specification_3s.Entity;
				if (((previousValue != value) 
							|| (this._Specification_3s.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Specification_3s.Entity = null;
						previousValue._dictNomen = null;
					}
					this._Specification_3s.Entity = value;
					if ((value != null))
					{
						value._dictNomen = this;
					}
					this.SendPropertyChanged("Specification_3s");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_Specification_31", Storage="_Specification_3s1", ThisKey="ID", OtherKey="_Material_ID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35, EmitDefaultValue=false)]
		public Specification_3 Specification_3s1
		{
			get
			{
				if ((this.serializing 
							&& (this._Specification_3s1.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Specification_3s1.Entity;
			}
			set
			{
				Specification_3 previousValue = this._Specification_3s1.Entity;
				if (((previousValue != value) 
							|| (this._Specification_3s1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Specification_3s1.Entity = null;
						previousValue._dictNomen1 = null;
					}
					this._Specification_3s1.Entity = value;
					if ((value != null))
					{
						value._dictNomen1 = this;
					}
					this.SendPropertyChanged("Specification_3s1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_TechnReadiness", Storage="_TechnReadinesses", ThisKey="ID", OtherKey="_dictNomenID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36, EmitDefaultValue=false)]
		public TechnReadiness TechnReadinesses
		{
			get
			{
				if ((this.serializing 
							&& (this._TechnReadinesses.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._TechnReadinesses.Entity;
			}
			set
			{
				TechnReadiness previousValue = this._TechnReadinesses.Entity;
				if (((previousValue != value) 
							|| (this._TechnReadinesses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TechnReadinesses.Entity = null;
						previousValue._dictNomen = null;
					}
					this._TechnReadinesses.Entity = value;
					if ((value != null))
					{
						value._dictNomen = this;
					}
					this.SendPropertyChanged("TechnReadinesses");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictH__dictNomen", Storage="__dictH", ThisKey="_dictHSID", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public _dictH _dictH
		{
			get
			{
				return this.@__dictH.Entity;
			}
			set
			{
				_dictH previousValue = this.@__dictH.Entity;
				if (((previousValue != value) 
							|| (this.@__dictH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__dictH.Entity = null;
						previousValue._dictNomens.Remove(this);
					}
					this.@__dictH.Entity = value;
					if ((value != null))
					{
						value._dictNomens.Add(this);
						this.@__dictHSID = value.ID;
					}
					else
					{
						this.@__dictHSID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("_dictH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TechnDate__dictNomen", Storage="_TechnDate", ThisKey="ID", OtherKey="_dictNomenID", IsForeignKey=true)]
		public TechnDate TechnDate
		{
			get
			{
				return this._TechnDate.Entity;
			}
			set
			{
				TechnDate previousValue = this._TechnDate.Entity;
				if (((previousValue != value) 
							|| (this._TechnDate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TechnDate.Entity = null;
						previousValue._dictNomens = null;
					}
					this._TechnDate.Entity = value;
					if ((value != null))
					{
						value._dictNomens = this;
						this._ID = value._dictNomenID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("TechnDate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity._dictNomen = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity._dictNomen = null;
		}
		
		private void attach_Products1(Product entity)
		{
			this.SendPropertyChanging();
			entity._dictNomen1 = this;
		}
		
		private void detach_Products1(Product entity)
		{
			this.SendPropertyChanging();
			entity._dictNomen1 = null;
		}
		
		private void attach_Specification_1s(Specification_1 entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Specification_1s(Specification_1 entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Specification_1s1(Specification_1 entity)
		{
			this.SendPropertyChanging();
			entity.Material = this;
		}
		
		private void detach_Specification_1s1(Specification_1 entity)
		{
			this.SendPropertyChanging();
			entity.Material = null;
		}
		
		private void attach_Specification_2s(Specification_2 entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Specification_2s(Specification_2 entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Specification_2s1(Specification_2 entity)
		{
			this.SendPropertyChanging();
			entity.Material = this;
		}
		
		private void detach_Specification_2s1(Specification_2 entity)
		{
			this.SendPropertyChanging();
			entity.Material = null;
		}
		
		private void Initialize()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Products1 = new EntitySet<Product>(new Action<Product>(this.attach_Products1), new Action<Product>(this.detach_Products1));
			this._Specification_1s = new EntitySet<Specification_1>(new Action<Specification_1>(this.attach_Specification_1s), new Action<Specification_1>(this.detach_Specification_1s));
			this._Specification_1s1 = new EntitySet<Specification_1>(new Action<Specification_1>(this.attach_Specification_1s1), new Action<Specification_1>(this.detach_Specification_1s1));
			this._Specification_2s = new EntitySet<Specification_2>(new Action<Specification_2>(this.attach_Specification_2s), new Action<Specification_2>(this.detach_Specification_2s));
			this._Specification_2s1 = new EntitySet<Specification_2>(new Action<Specification_2>(this.attach_Specification_2s1), new Action<Specification_2>(this.detach_Specification_2s1));
			this._Specification_3s = default(EntityRef<Specification_3>);
			this._Specification_3s1 = default(EntityRef<Specification_3>);
			this._TechnReadinesses = default(EntityRef<TechnReadiness>);
			this.@__dictH = default(EntityRef<_dictH>);
			this._TechnDate = default(EntityRef<TechnDate>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Setting")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private EntitySet<UserSetting> _UserSettings;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Setting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Setting_UserSetting", Storage="_UserSettings", ThisKey="ID", OtherKey="SettingID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<UserSetting> UserSettings
		{
			get
			{
				if ((this.serializing 
							&& (this._UserSettings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserSettings;
			}
			set
			{
				this._UserSettings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserSettings(UserSetting entity)
		{
			this.SendPropertyChanging();
			entity.Setting = this;
		}
		
		private void detach_UserSettings(UserSetting entity)
		{
			this.SendPropertyChanging();
			entity.Setting = null;
		}
		
		private void Initialize()
		{
			this._UserSettings = new EntitySet<UserSetting>(new Action<UserSetting>(this.attach_UserSettings), new Action<UserSetting>(this.detach_UserSettings));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserSetting")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Value;
		
		private System.Guid _UserID;
		
		private System.Guid _SettingID;
		
		private EntityRef<Setting> _Setting;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnSettingIDChanging(System.Guid value);
    partial void OnSettingIDChanged();
    #endregion
		
		public UserSetting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Guid SettingID
		{
			get
			{
				return this._SettingID;
			}
			set
			{
				if ((this._SettingID != value))
				{
					if (this._Setting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSettingIDChanging(value);
					this.SendPropertyChanging();
					this._SettingID = value;
					this.SendPropertyChanged("SettingID");
					this.OnSettingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Setting_UserSetting", Storage="_Setting", ThisKey="SettingID", OtherKey="ID", IsForeignKey=true)]
		public Setting Setting
		{
			get
			{
				return this._Setting.Entity;
			}
			set
			{
				Setting previousValue = this._Setting.Entity;
				if (((previousValue != value) 
							|| (this._Setting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Setting.Entity = null;
						previousValue.UserSettings.Remove(this);
					}
					this._Setting.Entity = value;
					if ((value != null))
					{
						value.UserSettings.Add(this);
						this._SettingID = value.ID;
					}
					else
					{
						this._SettingID = default(System.Guid);
					}
					this.SendPropertyChanged("Setting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserSetting", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserSettings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserSettings.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Setting = default(EntityRef<Setting>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DictionaryProperty")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DictionaryProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _ColumnName;
		
		private System.Guid _DictionaryID;
		
		private string _Name;
		
		private System.Guid _TypeID;
		
		private int _Position;
		
		private EntitySet<ConfigurationUserField> _ConfigurationUserFields;
		
		private EntitySet<DictionaryUserField> _DictionaryUserFields;
		
		private EntitySet<UserField> _UserFields;
		
		private EntityRef<Dictionary> _Dictionary;
		
		private EntityRef<Type> _Type;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnColumnNameChanging(string value);
    partial void OnColumnNameChanged();
    partial void OnDictionaryIDChanging(System.Guid value);
    partial void OnDictionaryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeIDChanging(System.Guid value);
    partial void OnTypeIDChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    #endregion
		
		public DictionaryProperty()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this.OnColumnNameChanging(value);
					this.SendPropertyChanging();
					this._ColumnName = value;
					this.SendPropertyChanged("ColumnName");
					this.OnColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DictionaryID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid DictionaryID
		{
			get
			{
				return this._DictionaryID;
			}
			set
			{
				if ((this._DictionaryID != value))
				{
					if (this._Dictionary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDictionaryIDChanging(value);
					this.SendPropertyChanging();
					this._DictionaryID = value;
					this.SendPropertyChanged("DictionaryID");
					this.OnDictionaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DictionaryProperty_ConfigurationUserField", Storage="_ConfigurationUserFields", ThisKey="ID", OtherKey="DcitionaryPropertyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<ConfigurationUserField> ConfigurationUserFields
		{
			get
			{
				if ((this.serializing 
							&& (this._ConfigurationUserFields.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ConfigurationUserFields;
			}
			set
			{
				this._ConfigurationUserFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DictionaryProperty_DictionaryUserField", Storage="_DictionaryUserFields", ThisKey="ID", OtherKey="DcitionaryPropertyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<DictionaryUserField> DictionaryUserFields
		{
			get
			{
				if ((this.serializing 
							&& (this._DictionaryUserFields.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DictionaryUserFields;
			}
			set
			{
				this._DictionaryUserFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DictionaryProperty_UserField", Storage="_UserFields", ThisKey="ID", OtherKey="DcitionaryPropertyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<UserField> UserFields
		{
			get
			{
				if ((this.serializing 
							&& (this._UserFields.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserFields;
			}
			set
			{
				this._UserFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dictionary_DictionaryProperty", Storage="_Dictionary", ThisKey="DictionaryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Dictionary Dictionary
		{
			get
			{
				return this._Dictionary.Entity;
			}
			set
			{
				Dictionary previousValue = this._Dictionary.Entity;
				if (((previousValue != value) 
							|| (this._Dictionary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dictionary.Entity = null;
						previousValue.DictionaryProperties.Remove(this);
					}
					this._Dictionary.Entity = value;
					if ((value != null))
					{
						value.DictionaryProperties.Add(this);
						this._DictionaryID = value.ID;
					}
					else
					{
						this._DictionaryID = default(System.Guid);
					}
					this.SendPropertyChanged("Dictionary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_DictionaryProperty", Storage="_Type", ThisKey="TypeID", OtherKey="ID", IsForeignKey=true)]
		public Type Type
		{
			get
			{
				return this._Type.Entity;
			}
			set
			{
				Type previousValue = this._Type.Entity;
				if (((previousValue != value) 
							|| (this._Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Type.Entity = null;
						previousValue.DictionaryProperties.Remove(this);
					}
					this._Type.Entity = value;
					if ((value != null))
					{
						value.DictionaryProperties.Add(this);
						this._TypeID = value.ID;
					}
					else
					{
						this._TypeID = default(System.Guid);
					}
					this.SendPropertyChanged("Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConfigurationUserFields(ConfigurationUserField entity)
		{
			this.SendPropertyChanging();
			entity.DictionaryProperty = this;
		}
		
		private void detach_ConfigurationUserFields(ConfigurationUserField entity)
		{
			this.SendPropertyChanging();
			entity.DictionaryProperty = null;
		}
		
		private void attach_DictionaryUserFields(DictionaryUserField entity)
		{
			this.SendPropertyChanging();
			entity.DictionaryProperty = this;
		}
		
		private void detach_DictionaryUserFields(DictionaryUserField entity)
		{
			this.SendPropertyChanging();
			entity.DictionaryProperty = null;
		}
		
		private void attach_UserFields(UserField entity)
		{
			this.SendPropertyChanging();
			entity.DictionaryProperty = this;
		}
		
		private void detach_UserFields(UserField entity)
		{
			this.SendPropertyChanging();
			entity.DictionaryProperty = null;
		}
		
		private void Initialize()
		{
			this._ConfigurationUserFields = new EntitySet<ConfigurationUserField>(new Action<ConfigurationUserField>(this.attach_ConfigurationUserFields), new Action<ConfigurationUserField>(this.detach_ConfigurationUserFields));
			this._DictionaryUserFields = new EntitySet<DictionaryUserField>(new Action<DictionaryUserField>(this.attach_DictionaryUserFields), new Action<DictionaryUserField>(this.detach_DictionaryUserFields));
			this._UserFields = new EntitySet<UserField>(new Action<UserField>(this.attach_UserFields), new Action<UserField>(this.detach_UserFields));
			this._Dictionary = default(EntityRef<Dictionary>);
			this._Type = default(EntityRef<Type>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_dictS]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class _dict : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<int> _cod;
		
		private System.Nullable<int> _cod_old;
		
		private System.Nullable<int> _so;
		
		private string _sn1;
		
		private string _sn2;
		
		private System.Nullable<int> _potrebm;
		
		private string _cmt;
		
		private EntitySet<Specification_1> _Specification_1s;
		
		private EntitySet<Specification_2> _Specification_2s;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OncodChanging(System.Nullable<int> value);
    partial void OncodChanged();
    partial void Oncod_oldChanging(System.Nullable<int> value);
    partial void Oncod_oldChanged();
    partial void OnsoChanging(System.Nullable<int> value);
    partial void OnsoChanged();
    partial void Onsn1Changing(string value);
    partial void Onsn1Changed();
    partial void Onsn2Changing(string value);
    partial void Onsn2Changed();
    partial void OnpotrebmChanging(System.Nullable<int> value);
    partial void OnpotrebmChanged();
    partial void OncmtChanging(string value);
    partial void OncmtChanged();
    #endregion
		
		public _dict()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> cod
		{
			get
			{
				return this._cod;
			}
			set
			{
				if ((this._cod != value))
				{
					this.OncodChanging(value);
					this.SendPropertyChanging();
					this._cod = value;
					this.SendPropertyChanged("cod");
					this.OncodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod_old", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> cod_old
		{
			get
			{
				return this._cod_old;
			}
			set
			{
				if ((this._cod_old != value))
				{
					this.Oncod_oldChanging(value);
					this.SendPropertyChanging();
					this._cod_old = value;
					this.SendPropertyChanged("cod_old");
					this.Oncod_oldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_so", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> so
		{
			get
			{
				return this._so;
			}
			set
			{
				if ((this._so != value))
				{
					this.OnsoChanging(value);
					this.SendPropertyChanging();
					this._so = value;
					this.SendPropertyChanged("so");
					this.OnsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sn1", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string sn1
		{
			get
			{
				return this._sn1;
			}
			set
			{
				if ((this._sn1 != value))
				{
					this.Onsn1Changing(value);
					this.SendPropertyChanging();
					this._sn1 = value;
					this.SendPropertyChanged("sn1");
					this.Onsn1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sn2", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string sn2
		{
			get
			{
				return this._sn2;
			}
			set
			{
				if ((this._sn2 != value))
				{
					this.Onsn2Changing(value);
					this.SendPropertyChanging();
					this._sn2 = value;
					this.SendPropertyChanged("sn2");
					this.Onsn2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_potrebm", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> potrebm
		{
			get
			{
				return this._potrebm;
			}
			set
			{
				if ((this._potrebm != value))
				{
					this.OnpotrebmChanging(value);
					this.SendPropertyChanging();
					this._potrebm = value;
					this.SendPropertyChanged("potrebm");
					this.OnpotrebmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmt", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string cmt
		{
			get
			{
				return this._cmt;
			}
			set
			{
				if ((this._cmt != value))
				{
					this.OncmtChanging(value);
					this.SendPropertyChanging();
					this._cmt = value;
					this.SendPropertyChanged("cmt");
					this.OncmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dict_Specification_1", Storage="_Specification_1s", ThisKey="id", OtherKey="_dictSID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<Specification_1> Specification_1s
		{
			get
			{
				if ((this.serializing 
							&& (this._Specification_1s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Specification_1s;
			}
			set
			{
				this._Specification_1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dict_Specification_2", Storage="_Specification_2s", ThisKey="id", OtherKey="_dictSID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<Specification_2> Specification_2s
		{
			get
			{
				if ((this.serializing 
							&& (this._Specification_2s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Specification_2s;
			}
			set
			{
				this._Specification_2s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Specification_1s(Specification_1 entity)
		{
			this.SendPropertyChanging();
			entity._dict = this;
		}
		
		private void detach_Specification_1s(Specification_1 entity)
		{
			this.SendPropertyChanging();
			entity._dict = null;
		}
		
		private void attach_Specification_2s(Specification_2 entity)
		{
			this.SendPropertyChanging();
			entity._dict = this;
		}
		
		private void detach_Specification_2s(Specification_2 entity)
		{
			this.SendPropertyChanging();
			entity._dict = null;
		}
		
		private void Initialize()
		{
			this._Specification_1s = new EntitySet<Specification_1>(new Action<Specification_1>(this.attach_Specification_1s), new Action<Specification_1>(this.detach_Specification_1s));
			this._Specification_2s = new EntitySet<Specification_2>(new Action<Specification_2>(this.attach_Specification_2s), new Action<Specification_2>(this.detach_Specification_2s));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_dictS_te]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class _dictS_te : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<int> _cod;
		
		private string _type;
		
		private EntitySet<Specification_1> _Specification_1s;
		
		private EntitySet<Specification_2> _Specification_2s;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OncodChanging(System.Nullable<int> value);
    partial void OncodChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public _dictS_te()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> cod
		{
			get
			{
				return this._cod;
			}
			set
			{
				if ((this._cod != value))
				{
					this.OncodChanging(value);
					this.SendPropertyChanging();
					this._cod = value;
					this.SendPropertyChanged("cod");
					this.OncodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Char(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictS_te_Specification_1", Storage="_Specification_1s", ThisKey="id", OtherKey="_dictS_TEID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<Specification_1> Specification_1s
		{
			get
			{
				if ((this.serializing 
							&& (this._Specification_1s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Specification_1s;
			}
			set
			{
				this._Specification_1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictS_te_Specification_2", Storage="_Specification_2s", ThisKey="id", OtherKey="_dictS_TEID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<Specification_2> Specification_2s
		{
			get
			{
				if ((this.serializing 
							&& (this._Specification_2s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Specification_2s;
			}
			set
			{
				this._Specification_2s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Specification_1s(Specification_1 entity)
		{
			this.SendPropertyChanging();
			entity._dictS_te = this;
		}
		
		private void detach_Specification_1s(Specification_1 entity)
		{
			this.SendPropertyChanging();
			entity._dictS_te = null;
		}
		
		private void attach_Specification_2s(Specification_2 entity)
		{
			this.SendPropertyChanging();
			entity._dictS_te = this;
		}
		
		private void detach_Specification_2s(Specification_2 entity)
		{
			this.SendPropertyChanging();
			entity._dictS_te = null;
		}
		
		private void Initialize()
		{
			this._Specification_1s = new EntitySet<Specification_1>(new Action<Specification_1>(this.attach_Specification_1s), new Action<Specification_1>(this.detach_Specification_1s));
			this._Specification_2s = new EntitySet<Specification_2>(new Action<Specification_2>(this.attach_Specification_2s), new Action<Specification_2>(this.detach_Specification_2s));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DictionaryTree")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DictionaryTree : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private System.Guid _DictionaryID;
		
		private string _Name;
		
		private string _Alias;
		
		private string _PK;
		
		private string _FK;
		
		private System.Nullable<System.Guid> _ClassificationID;
		
		private int _Position;
		
		private EntitySet<ConfigurationUserField> _ConfigurationUserFields;
		
		private EntitySet<DictionaryUserField> _DictionaryUserFields;
		
		private EntitySet<DictionaryUserField> _DictionaryUserFields1;
		
		private EntitySet<UserField> _UserFields;
		
		private EntitySet<DictionaryTree> _DictionaryTrees;
		
		private EntityRef<Dictionary> _Dictionary;
		
		private EntityRef<DictionaryTree> _DictionaryTree1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnDictionaryIDChanging(System.Guid value);
    partial void OnDictionaryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAliasChanging(string value);
    partial void OnAliasChanged();
    partial void OnPKChanging(string value);
    partial void OnPKChanged();
    partial void OnFKChanging(string value);
    partial void OnFKChanged();
    partial void OnClassificationIDChanging(System.Nullable<System.Guid> value);
    partial void OnClassificationIDChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    #endregion
		
		public DictionaryTree()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._DictionaryTree1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DictionaryID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid DictionaryID
		{
			get
			{
				return this._DictionaryID;
			}
			set
			{
				if ((this._DictionaryID != value))
				{
					if (this._Dictionary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDictionaryIDChanging(value);
					this.SendPropertyChanging();
					this._DictionaryID = value;
					this.SendPropertyChanged("DictionaryID");
					this.OnDictionaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alias", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Alias
		{
			get
			{
				return this._Alias;
			}
			set
			{
				if ((this._Alias != value))
				{
					this.OnAliasChanging(value);
					this.SendPropertyChanging();
					this._Alias = value;
					this.SendPropertyChanged("Alias");
					this.OnAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string PK
		{
			get
			{
				return this._PK;
			}
			set
			{
				if ((this._PK != value))
				{
					this.OnPKChanging(value);
					this.SendPropertyChanging();
					this._PK = value;
					this.SendPropertyChanged("PK");
					this.OnPKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string FK
		{
			get
			{
				return this._FK;
			}
			set
			{
				if ((this._FK != value))
				{
					this.OnFKChanging(value);
					this.SendPropertyChanging();
					this._FK = value;
					this.SendPropertyChanged("FK");
					this.OnFKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.Guid> ClassificationID
		{
			get
			{
				return this._ClassificationID;
			}
			set
			{
				if ((this._ClassificationID != value))
				{
					this.OnClassificationIDChanging(value);
					this.SendPropertyChanging();
					this._ClassificationID = value;
					this.SendPropertyChanged("ClassificationID");
					this.OnClassificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DictionaryTree_ConfigurationUserField", Storage="_ConfigurationUserFields", ThisKey="ID", OtherKey="DictionaryTreeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<ConfigurationUserField> ConfigurationUserFields
		{
			get
			{
				if ((this.serializing 
							&& (this._ConfigurationUserFields.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ConfigurationUserFields;
			}
			set
			{
				this._ConfigurationUserFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DictionaryTree_DictionaryUserField", Storage="_DictionaryUserFields", ThisKey="ID", OtherKey="DictionaryTreeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<DictionaryUserField> DictionaryUserFields
		{
			get
			{
				if ((this.serializing 
							&& (this._DictionaryUserFields.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DictionaryUserFields;
			}
			set
			{
				this._DictionaryUserFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DictionaryTree_DictionaryUserField1", Storage="_DictionaryUserFields1", ThisKey="ID", OtherKey="DictionaryTreeNodeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<DictionaryUserField> DictionaryUserFields1
		{
			get
			{
				if ((this.serializing 
							&& (this._DictionaryUserFields1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DictionaryUserFields1;
			}
			set
			{
				this._DictionaryUserFields1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DictionaryTree_UserField", Storage="_UserFields", ThisKey="ID", OtherKey="DictionaryTreeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<UserField> UserFields
		{
			get
			{
				if ((this.serializing 
							&& (this._UserFields.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserFields;
			}
			set
			{
				this._UserFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DictionaryTree_DictionaryTree", Storage="_DictionaryTrees", ThisKey="ID", OtherKey="ParentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<DictionaryTree> DictionaryTrees
		{
			get
			{
				if ((this.serializing 
							&& (this._DictionaryTrees.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DictionaryTrees;
			}
			set
			{
				this._DictionaryTrees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dictionary_DictionaryTree", Storage="_Dictionary", ThisKey="DictionaryID", OtherKey="ID", IsForeignKey=true)]
		public Dictionary Dictionary
		{
			get
			{
				return this._Dictionary.Entity;
			}
			set
			{
				Dictionary previousValue = this._Dictionary.Entity;
				if (((previousValue != value) 
							|| (this._Dictionary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dictionary.Entity = null;
						previousValue.DictionaryTrees.Remove(this);
					}
					this._Dictionary.Entity = value;
					if ((value != null))
					{
						value.DictionaryTrees.Add(this);
						this._DictionaryID = value.ID;
					}
					else
					{
						this._DictionaryID = default(System.Guid);
					}
					this.SendPropertyChanged("Dictionary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DictionaryTree_DictionaryTree", Storage="_DictionaryTree1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public DictionaryTree DictionaryTree1
		{
			get
			{
				return this._DictionaryTree1.Entity;
			}
			set
			{
				DictionaryTree previousValue = this._DictionaryTree1.Entity;
				if (((previousValue != value) 
							|| (this._DictionaryTree1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DictionaryTree1.Entity = null;
						previousValue.DictionaryTrees.Remove(this);
					}
					this._DictionaryTree1.Entity = value;
					if ((value != null))
					{
						value.DictionaryTrees.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("DictionaryTree1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConfigurationUserFields(ConfigurationUserField entity)
		{
			this.SendPropertyChanging();
			entity.DictionaryTree = this;
		}
		
		private void detach_ConfigurationUserFields(ConfigurationUserField entity)
		{
			this.SendPropertyChanging();
			entity.DictionaryTree = null;
		}
		
		private void attach_DictionaryUserFields(DictionaryUserField entity)
		{
			this.SendPropertyChanging();
			entity.DictionaryTree = this;
		}
		
		private void detach_DictionaryUserFields(DictionaryUserField entity)
		{
			this.SendPropertyChanging();
			entity.DictionaryTree = null;
		}
		
		private void attach_DictionaryUserFields1(DictionaryUserField entity)
		{
			this.SendPropertyChanging();
			entity.DictionaryTree1 = this;
		}
		
		private void detach_DictionaryUserFields1(DictionaryUserField entity)
		{
			this.SendPropertyChanging();
			entity.DictionaryTree1 = null;
		}
		
		private void attach_UserFields(UserField entity)
		{
			this.SendPropertyChanging();
			entity.DictionaryTree = this;
		}
		
		private void detach_UserFields(UserField entity)
		{
			this.SendPropertyChanging();
			entity.DictionaryTree = null;
		}
		
		private void attach_DictionaryTrees(DictionaryTree entity)
		{
			this.SendPropertyChanging();
			entity.DictionaryTree1 = this;
		}
		
		private void detach_DictionaryTrees(DictionaryTree entity)
		{
			this.SendPropertyChanging();
			entity.DictionaryTree1 = null;
		}
		
		private void Initialize()
		{
			this._ConfigurationUserFields = new EntitySet<ConfigurationUserField>(new Action<ConfigurationUserField>(this.attach_ConfigurationUserFields), new Action<ConfigurationUserField>(this.detach_ConfigurationUserFields));
			this._DictionaryUserFields = new EntitySet<DictionaryUserField>(new Action<DictionaryUserField>(this.attach_DictionaryUserFields), new Action<DictionaryUserField>(this.detach_DictionaryUserFields));
			this._DictionaryUserFields1 = new EntitySet<DictionaryUserField>(new Action<DictionaryUserField>(this.attach_DictionaryUserFields1), new Action<DictionaryUserField>(this.detach_DictionaryUserFields1));
			this._UserFields = new EntitySet<UserField>(new Action<UserField>(this.attach_UserFields), new Action<UserField>(this.detach_UserFields));
			this._DictionaryTrees = new EntitySet<DictionaryTree>(new Action<DictionaryTree>(this.attach_DictionaryTrees), new Action<DictionaryTree>(this.detach_DictionaryTrees));
			this._Dictionary = default(EntityRef<Dictionary>);
			this._DictionaryTree1 = default(EntityRef<DictionaryTree>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_dictPVD]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class _dictPVD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _pvdn;
		
		private string _Comment;
		
		private System.Nullable<int> _cod_Asp;
		
		private System.Nullable<int> _urle;
		
		private System.Nullable<System.DateTime> _dtle;
		
		private System.Nullable<System.Guid> _userID;
		
		private EntitySet<Specification_1> _Specification_1s;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnpvdnChanging(string value);
    partial void OnpvdnChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void Oncod_AspChanging(System.Nullable<int> value);
    partial void Oncod_AspChanged();
    partial void OnurleChanging(System.Nullable<int> value);
    partial void OnurleChanged();
    partial void OndtleChanging(System.Nullable<System.DateTime> value);
    partial void OndtleChanged();
    partial void OnuserIDChanging(System.Nullable<System.Guid> value);
    partial void OnuserIDChanged();
    #endregion
		
		public _dictPVD()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pvdn", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string pvdn
		{
			get
			{
				return this._pvdn;
			}
			set
			{
				if ((this._pvdn != value))
				{
					this.OnpvdnChanging(value);
					this.SendPropertyChanging();
					this._pvdn = value;
					this.SendPropertyChanged("pvdn");
					this.OnpvdnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod_Asp", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> cod_Asp
		{
			get
			{
				return this._cod_Asp;
			}
			set
			{
				if ((this._cod_Asp != value))
				{
					this.Oncod_AspChanging(value);
					this.SendPropertyChanging();
					this._cod_Asp = value;
					this.SendPropertyChanged("cod_Asp");
					this.Oncod_AspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urle", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> urle
		{
			get
			{
				return this._urle;
			}
			set
			{
				if ((this._urle != value))
				{
					this.OnurleChanging(value);
					this.SendPropertyChanging();
					this._urle = value;
					this.SendPropertyChanged("urle");
					this.OnurleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtle", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> dtle
		{
			get
			{
				return this._dtle;
			}
			set
			{
				if ((this._dtle != value))
				{
					this.OndtleChanging(value);
					this.SendPropertyChanging();
					this._dtle = value;
					this.SendPropertyChanged("dtle");
					this.OndtleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.Guid> userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictPVD_Specification_1", Storage="_Specification_1s", ThisKey="ID", OtherKey="_dictPVDID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<Specification_1> Specification_1s
		{
			get
			{
				if ((this.serializing 
							&& (this._Specification_1s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Specification_1s;
			}
			set
			{
				this._Specification_1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Specification_1s(Specification_1 entity)
		{
			this.SendPropertyChanging();
			entity._dictPVD = this;
		}
		
		private void detach_Specification_1s(Specification_1 entity)
		{
			this.SendPropertyChanging();
			entity._dictPVD = null;
		}
		
		private void Initialize()
		{
			this._Specification_1s = new EntitySet<Specification_1>(new Action<Specification_1>(this.attach_Specification_1s), new Action<Specification_1>(this.detach_Specification_1s));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_dictUM]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class _dictUM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _cod_old;
		
		private string _umn1;
		
		private string _umn2;
		
		private string _Comment;
		
		private System.Nullable<int> _cod_Asp;
		
		private System.Nullable<int> _urle;
		
		private System.Nullable<System.DateTime> _dtle;
		
		private System.Nullable<System.Guid> _userID;
		
		private EntitySet<Configuration> _Configurations;
		
		private EntitySet<Specification_1> _Specification_1s;
		
		private EntitySet<Specification_2> _Specification_2s;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void Oncod_oldChanging(System.Nullable<int> value);
    partial void Oncod_oldChanged();
    partial void Onumn1Changing(string value);
    partial void Onumn1Changed();
    partial void Onumn2Changing(string value);
    partial void Onumn2Changed();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void Oncod_AspChanging(System.Nullable<int> value);
    partial void Oncod_AspChanged();
    partial void OnurleChanging(System.Nullable<int> value);
    partial void OnurleChanged();
    partial void OndtleChanging(System.Nullable<System.DateTime> value);
    partial void OndtleChanged();
    partial void OnuserIDChanging(System.Nullable<System.Guid> value);
    partial void OnuserIDChanged();
    #endregion
		
		public _dictUM()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod_old", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> cod_old
		{
			get
			{
				return this._cod_old;
			}
			set
			{
				if ((this._cod_old != value))
				{
					this.Oncod_oldChanging(value);
					this.SendPropertyChanging();
					this._cod_old = value;
					this.SendPropertyChanged("cod_old");
					this.Oncod_oldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_umn1", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string umn1
		{
			get
			{
				return this._umn1;
			}
			set
			{
				if ((this._umn1 != value))
				{
					this.Onumn1Changing(value);
					this.SendPropertyChanging();
					this._umn1 = value;
					this.SendPropertyChanged("umn1");
					this.Onumn1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_umn2", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string umn2
		{
			get
			{
				return this._umn2;
			}
			set
			{
				if ((this._umn2 != value))
				{
					this.Onumn2Changing(value);
					this.SendPropertyChanging();
					this._umn2 = value;
					this.SendPropertyChanged("umn2");
					this.Onumn2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod_Asp", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> cod_Asp
		{
			get
			{
				return this._cod_Asp;
			}
			set
			{
				if ((this._cod_Asp != value))
				{
					this.Oncod_AspChanging(value);
					this.SendPropertyChanging();
					this._cod_Asp = value;
					this.SendPropertyChanged("cod_Asp");
					this.Oncod_AspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urle", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> urle
		{
			get
			{
				return this._urle;
			}
			set
			{
				if ((this._urle != value))
				{
					this.OnurleChanging(value);
					this.SendPropertyChanging();
					this._urle = value;
					this.SendPropertyChanged("urle");
					this.OnurleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtle", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> dtle
		{
			get
			{
				return this._dtle;
			}
			set
			{
				if ((this._dtle != value))
				{
					this.OndtleChanging(value);
					this.SendPropertyChanging();
					this._dtle = value;
					this.SendPropertyChanged("dtle");
					this.OndtleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.Guid> userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictUM_Configuration", Storage="_Configurations", ThisKey="ID", OtherKey="_dictUMID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<Configuration> Configurations
		{
			get
			{
				if ((this.serializing 
							&& (this._Configurations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Configurations;
			}
			set
			{
				this._Configurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictUM_Specification_1", Storage="_Specification_1s", ThisKey="ID", OtherKey="_dictUMID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<Specification_1> Specification_1s
		{
			get
			{
				if ((this.serializing 
							&& (this._Specification_1s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Specification_1s;
			}
			set
			{
				this._Specification_1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictUM_Specification_2", Storage="_Specification_2s", ThisKey="ID", OtherKey="_dictUMID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<Specification_2> Specification_2s
		{
			get
			{
				if ((this.serializing 
							&& (this._Specification_2s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Specification_2s;
			}
			set
			{
				this._Specification_2s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Configurations(Configuration entity)
		{
			this.SendPropertyChanging();
			entity._dictUM = this;
		}
		
		private void detach_Configurations(Configuration entity)
		{
			this.SendPropertyChanging();
			entity._dictUM = null;
		}
		
		private void attach_Specification_1s(Specification_1 entity)
		{
			this.SendPropertyChanging();
			entity._dictUM = this;
		}
		
		private void detach_Specification_1s(Specification_1 entity)
		{
			this.SendPropertyChanging();
			entity._dictUM = null;
		}
		
		private void attach_Specification_2s(Specification_2 entity)
		{
			this.SendPropertyChanging();
			entity._dictUM = this;
		}
		
		private void detach_Specification_2s(Specification_2 entity)
		{
			this.SendPropertyChanging();
			entity._dictUM = null;
		}
		
		private void Initialize()
		{
			this._Configurations = new EntitySet<Configuration>(new Action<Configuration>(this.attach_Configurations), new Action<Configuration>(this.detach_Configurations));
			this._Specification_1s = new EntitySet<Specification_1>(new Action<Specification_1>(this.attach_Specification_1s), new Action<Specification_1>(this.detach_Specification_1s));
			this._Specification_2s = new EntitySet<Specification_2>(new Action<Specification_2>(this.attach_Specification_2s), new Action<Specification_2>(this.detach_Specification_2s));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_dictSF]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class _dictSF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _cod_Asp;
		
		private string _sfn;
		
		private string _Comment;
		
		private System.Nullable<int> _urle;
		
		private System.Nullable<System.DateTime> _dtle;
		
		private System.Nullable<System.Guid> _userID;
		
		private EntitySet<Specification_1> _Specification_1s;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void Oncod_AspChanging(System.Nullable<int> value);
    partial void Oncod_AspChanged();
    partial void OnsfnChanging(string value);
    partial void OnsfnChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnurleChanging(System.Nullable<int> value);
    partial void OnurleChanged();
    partial void OndtleChanging(System.Nullable<System.DateTime> value);
    partial void OndtleChanged();
    partial void OnuserIDChanging(System.Nullable<System.Guid> value);
    partial void OnuserIDChanged();
    #endregion
		
		public _dictSF()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod_Asp", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> cod_Asp
		{
			get
			{
				return this._cod_Asp;
			}
			set
			{
				if ((this._cod_Asp != value))
				{
					this.Oncod_AspChanging(value);
					this.SendPropertyChanging();
					this._cod_Asp = value;
					this.SendPropertyChanged("cod_Asp");
					this.Oncod_AspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sfn", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string sfn
		{
			get
			{
				return this._sfn;
			}
			set
			{
				if ((this._sfn != value))
				{
					this.OnsfnChanging(value);
					this.SendPropertyChanging();
					this._sfn = value;
					this.SendPropertyChanged("sfn");
					this.OnsfnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urle", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> urle
		{
			get
			{
				return this._urle;
			}
			set
			{
				if ((this._urle != value))
				{
					this.OnurleChanging(value);
					this.SendPropertyChanging();
					this._urle = value;
					this.SendPropertyChanged("urle");
					this.OnurleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtle", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> dtle
		{
			get
			{
				return this._dtle;
			}
			set
			{
				if ((this._dtle != value))
				{
					this.OndtleChanging(value);
					this.SendPropertyChanging();
					this._dtle = value;
					this.SendPropertyChanged("dtle");
					this.OndtleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.Guid> userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictSF_Specification_1", Storage="_Specification_1s", ThisKey="ID", OtherKey="_dictSFID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<Specification_1> Specification_1s
		{
			get
			{
				if ((this.serializing 
							&& (this._Specification_1s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Specification_1s;
			}
			set
			{
				this._Specification_1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Specification_1s(Specification_1 entity)
		{
			this.SendPropertyChanging();
			entity._dictSF = this;
		}
		
		private void detach_Specification_1s(Specification_1 entity)
		{
			this.SendPropertyChanging();
			entity._dictSF = null;
		}
		
		private void Initialize()
		{
			this._Specification_1s = new EntitySet<Specification_1>(new Action<Specification_1>(this.attach_Specification_1s), new Action<Specification_1>(this.detach_Specification_1s));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderArticle")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class OrderArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.Guid> @__dictNomenID;
		
		private string _year;
		
		private string _cco;
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _LastVersProductID;
		
		private System.Nullable<System.DateTime> _LastVersCreatedDate;
		
		private EntitySet<Specification_1> _Specification_1s;
		
		private EntitySet<Specification_2> _Specification_2s;
		
		private EntityRef<TechnReadiness> _TechnReadinesses;
		
		private EntityRef<TechnDate> _TechnDate;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_dictNomenIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictNomenIDChanged();
    partial void OnyearChanging(string value);
    partial void OnyearChanged();
    partial void OnccoChanging(string value);
    partial void OnccoChanged();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnLastVersProductIDChanging(System.Nullable<System.Guid> value);
    partial void OnLastVersProductIDChanged();
    partial void OnLastVersCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastVersCreatedDateChanged();
    #endregion
		
		public OrderArticle()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictNomenID]", Storage="__dictNomenID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Nullable<System.Guid> _dictNomenID
		{
			get
			{
				return this.@__dictNomenID;
			}
			set
			{
				if ((this.@__dictNomenID != value))
				{
					this.On_dictNomenIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictNomenID = value;
					this.SendPropertyChanged("_dictNomenID");
					this.On_dictNomenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="Char(4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cco", DbType="VarChar(22)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string cco
		{
			get
			{
				return this._cco;
			}
			set
			{
				if ((this._cco != value))
				{
					this.OnccoChanging(value);
					this.SendPropertyChanging();
					this._cco = value;
					this.SendPropertyChanged("cco");
					this.OnccoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._TechnDate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastVersProductID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.Guid> LastVersProductID
		{
			get
			{
				return this._LastVersProductID;
			}
			set
			{
				if ((this._LastVersProductID != value))
				{
					this.OnLastVersProductIDChanging(value);
					this.SendPropertyChanging();
					this._LastVersProductID = value;
					this.SendPropertyChanged("LastVersProductID");
					this.OnLastVersProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastVersCreatedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> LastVersCreatedDate
		{
			get
			{
				return this._LastVersCreatedDate;
			}
			set
			{
				if ((this._LastVersCreatedDate != value))
				{
					this.OnLastVersCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastVersCreatedDate = value;
					this.SendPropertyChanged("LastVersCreatedDate");
					this.OnLastVersCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderArticle_Specification_1", Storage="_Specification_1s", ThisKey="ID", OtherKey="OrderArticleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<Specification_1> Specification_1s
		{
			get
			{
				if ((this.serializing 
							&& (this._Specification_1s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Specification_1s;
			}
			set
			{
				this._Specification_1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderArticle_Specification_2", Storage="_Specification_2s", ThisKey="ID", OtherKey="OrderArticleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<Specification_2> Specification_2s
		{
			get
			{
				if ((this.serializing 
							&& (this._Specification_2s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Specification_2s;
			}
			set
			{
				this._Specification_2s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderArticle_TechnReadiness", Storage="_TechnReadinesses", ThisKey="ID", OtherKey="OrderArticleID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public TechnReadiness TechnReadinesses
		{
			get
			{
				if ((this.serializing 
							&& (this._TechnReadinesses.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._TechnReadinesses.Entity;
			}
			set
			{
				TechnReadiness previousValue = this._TechnReadinesses.Entity;
				if (((previousValue != value) 
							|| (this._TechnReadinesses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TechnReadinesses.Entity = null;
						previousValue.OrderArticle = null;
					}
					this._TechnReadinesses.Entity = value;
					if ((value != null))
					{
						value.OrderArticle = this;
					}
					this.SendPropertyChanged("TechnReadinesses");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TechnDate_OrderArticle", Storage="_TechnDate", ThisKey="ID", OtherKey="OrderArticleID", IsForeignKey=true)]
		public TechnDate TechnDate
		{
			get
			{
				return this._TechnDate.Entity;
			}
			set
			{
				TechnDate previousValue = this._TechnDate.Entity;
				if (((previousValue != value) 
							|| (this._TechnDate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TechnDate.Entity = null;
						previousValue.OrderArticles = null;
					}
					this._TechnDate.Entity = value;
					if ((value != null))
					{
						value.OrderArticles = this;
						this._ID = value.OrderArticleID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("TechnDate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Specification_1s(Specification_1 entity)
		{
			this.SendPropertyChanging();
			entity.OrderArticle = this;
		}
		
		private void detach_Specification_1s(Specification_1 entity)
		{
			this.SendPropertyChanging();
			entity.OrderArticle = null;
		}
		
		private void attach_Specification_2s(Specification_2 entity)
		{
			this.SendPropertyChanging();
			entity.OrderArticle = this;
		}
		
		private void detach_Specification_2s(Specification_2 entity)
		{
			this.SendPropertyChanging();
			entity.OrderArticle = null;
		}
		
		private void Initialize()
		{
			this._Specification_1s = new EntitySet<Specification_1>(new Action<Specification_1>(this.attach_Specification_1s), new Action<Specification_1>(this.detach_Specification_1s));
			this._Specification_2s = new EntitySet<Specification_2>(new Action<Specification_2>(this.attach_Specification_2s), new Action<Specification_2>(this.detach_Specification_2s));
			this._TechnReadinesses = default(EntityRef<TechnReadiness>);
			this._TechnDate = default(EntityRef<TechnDate>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Specification_1")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Specification_1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<System.DateTime> _StartDT;
		
		private System.Nullable<System.DateTime> _FinishDT;
		
		private System.Nullable<System.Guid> _OrderArticleID;
		
		private System.Nullable<System.Guid> @__Product_ID;
		
		private System.Nullable<System.Guid> @__dictPVDID;
		
		private System.Nullable<System.Guid> @__Material_ID;
		
		private System.Nullable<decimal> _no;
		
		private System.Nullable<System.Guid> @__dictUMID;
		
		private System.Nullable<System.Guid> @__dictSFID;
		
		private string _ss;
		
		private string _sd;
		
		private string _sp;
		
		private System.Nullable<decimal> _sw;
		
		private System.Nullable<decimal> _stw;
		
		private System.Nullable<System.Guid> @__dictSID;
		
		private string _cmt;
		
		private System.Nullable<int> _urle;
		
		private System.Nullable<System.DateTime> _dtle;
		
		private System.Nullable<decimal> _gt_kmh;
		
		private System.Nullable<System.DateTime> _gt_kmh_dt;
		
		private System.Nullable<int> _gt_kmh_us;
		
		private string _t_got;
		
		private string _h_got;
		
		private string _s_got;
		
		private string _Route;
		
		private System.Nullable<decimal> _qdu;
		
		private System.Nullable<System.Guid> _userID;
		
		private System.Nullable<System.Guid> @__dictS_TEID;
		
		private EntityRef<_dictNomen> _Product;
		
		private EntityRef<_dictNomen> _Material;
		
		private EntityRef<OrderArticle> _OrderArticle;
		
		private EntityRef<_dictPVD> @__dictPVD;
		
		private EntityRef<_dictUM> @__dictUM;
		
		private EntityRef<_dictSF> @__dictSF;
		
		private EntityRef<_dictS_te> @__dictS_te;
		
		private EntityRef<_dict> @__dict;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnStartDTChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDTChanged();
    partial void OnFinishDTChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishDTChanged();
    partial void OnOrderArticleIDChanging(System.Nullable<System.Guid> value);
    partial void OnOrderArticleIDChanged();
    partial void On_Product_IDChanging(System.Nullable<System.Guid> value);
    partial void On_Product_IDChanged();
    partial void On_dictPVDIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictPVDIDChanged();
    partial void On_Material_IDChanging(System.Nullable<System.Guid> value);
    partial void On_Material_IDChanged();
    partial void OnnoChanging(System.Nullable<decimal> value);
    partial void OnnoChanged();
    partial void On_dictUMIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictUMIDChanged();
    partial void On_dictSFIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictSFIDChanged();
    partial void OnssChanging(string value);
    partial void OnssChanged();
    partial void OnsdChanging(string value);
    partial void OnsdChanged();
    partial void OnspChanging(string value);
    partial void OnspChanged();
    partial void OnswChanging(System.Nullable<decimal> value);
    partial void OnswChanged();
    partial void OnstwChanging(System.Nullable<decimal> value);
    partial void OnstwChanged();
    partial void On_dictSIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictSIDChanged();
    partial void OncmtChanging(string value);
    partial void OncmtChanged();
    partial void OnurleChanging(System.Nullable<int> value);
    partial void OnurleChanged();
    partial void OndtleChanging(System.Nullable<System.DateTime> value);
    partial void OndtleChanged();
    partial void Ongt_kmhChanging(System.Nullable<decimal> value);
    partial void Ongt_kmhChanged();
    partial void Ongt_kmh_dtChanging(System.Nullable<System.DateTime> value);
    partial void Ongt_kmh_dtChanged();
    partial void Ongt_kmh_usChanging(System.Nullable<int> value);
    partial void Ongt_kmh_usChanged();
    partial void Ont_gotChanging(string value);
    partial void Ont_gotChanged();
    partial void Onh_gotChanging(string value);
    partial void Onh_gotChanged();
    partial void Ons_gotChanging(string value);
    partial void Ons_gotChanged();
    partial void OnRouteChanging(string value);
    partial void OnRouteChanged();
    partial void OnqduChanging(System.Nullable<decimal> value);
    partial void OnqduChanged();
    partial void OnuserIDChanging(System.Nullable<System.Guid> value);
    partial void OnuserIDChanged();
    partial void On_dictS_TEIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictS_TEIDChanged();
    #endregion
		
		public Specification_1()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDT", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> StartDT
		{
			get
			{
				return this._StartDT;
			}
			set
			{
				if ((this._StartDT != value))
				{
					this.OnStartDTChanging(value);
					this.SendPropertyChanging();
					this._StartDT = value;
					this.SendPropertyChanged("StartDT");
					this.OnStartDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishDT", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> FinishDT
		{
			get
			{
				return this._FinishDT;
			}
			set
			{
				if ((this._FinishDT != value))
				{
					this.OnFinishDTChanging(value);
					this.SendPropertyChanging();
					this._FinishDT = value;
					this.SendPropertyChanged("FinishDT");
					this.OnFinishDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderArticleID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.Guid> OrderArticleID
		{
			get
			{
				return this._OrderArticleID;
			}
			set
			{
				if ((this._OrderArticleID != value))
				{
					if (this._OrderArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderArticleIDChanging(value);
					this.SendPropertyChanging();
					this._OrderArticleID = value;
					this.SendPropertyChanged("OrderArticleID");
					this.OnOrderArticleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Product_ID]", Storage="__Product_ID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.Guid> _Product_ID
		{
			get
			{
				return this.@__Product_ID;
			}
			set
			{
				if ((this.@__Product_ID != value))
				{
					this.On_Product_IDChanging(value);
					this.SendPropertyChanging();
					this.@__Product_ID = value;
					this.SendPropertyChanged("_Product_ID");
					this.On_Product_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictPVDID]", Storage="__dictPVDID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.Guid> _dictPVDID
		{
			get
			{
				return this.@__dictPVDID;
			}
			set
			{
				if ((this.@__dictPVDID != value))
				{
					this.On_dictPVDIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictPVDID = value;
					this.SendPropertyChanged("_dictPVDID");
					this.On_dictPVDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Material_ID]", Storage="__Material_ID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.Guid> _Material_ID
		{
			get
			{
				return this.@__Material_ID;
			}
			set
			{
				if ((this.@__Material_ID != value))
				{
					this.On_Material_IDChanging(value);
					this.SendPropertyChanging();
					this.@__Material_ID = value;
					this.SendPropertyChanged("_Material_ID");
					this.On_Material_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_no", DbType="Decimal(15,10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<decimal> no
		{
			get
			{
				return this._no;
			}
			set
			{
				if ((this._no != value))
				{
					this.OnnoChanging(value);
					this.SendPropertyChanging();
					this._no = value;
					this.SendPropertyChanged("no");
					this.OnnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictUMID]", Storage="__dictUMID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.Guid> _dictUMID
		{
			get
			{
				return this.@__dictUMID;
			}
			set
			{
				if ((this.@__dictUMID != value))
				{
					this.On_dictUMIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictUMID = value;
					this.SendPropertyChanged("_dictUMID");
					this.On_dictUMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictSFID]", Storage="__dictSFID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.Guid> _dictSFID
		{
			get
			{
				return this.@__dictSFID;
			}
			set
			{
				if ((this.@__dictSFID != value))
				{
					this.On_dictSFIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictSFID = value;
					this.SendPropertyChanged("_dictSFID");
					this.On_dictSFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ss", DbType="Char(30)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string ss
		{
			get
			{
				return this._ss;
			}
			set
			{
				if ((this._ss != value))
				{
					this.OnssChanging(value);
					this.SendPropertyChanging();
					this._ss = value;
					this.SendPropertyChanged("ss");
					this.OnssChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sd", DbType="Char(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string sd
		{
			get
			{
				return this._sd;
			}
			set
			{
				if ((this._sd != value))
				{
					this.OnsdChanging(value);
					this.SendPropertyChanging();
					this._sd = value;
					this.SendPropertyChanged("sd");
					this.OnsdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp", DbType="Char(40)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string sp
		{
			get
			{
				return this._sp;
			}
			set
			{
				if ((this._sp != value))
				{
					this.OnspChanging(value);
					this.SendPropertyChanging();
					this._sp = value;
					this.SendPropertyChanged("sp");
					this.OnspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sw", DbType="Decimal(11,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<decimal> sw
		{
			get
			{
				return this._sw;
			}
			set
			{
				if ((this._sw != value))
				{
					this.OnswChanging(value);
					this.SendPropertyChanging();
					this._sw = value;
					this.SendPropertyChanged("sw");
					this.OnswChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stw", DbType="Decimal(11,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<decimal> stw
		{
			get
			{
				return this._stw;
			}
			set
			{
				if ((this._stw != value))
				{
					this.OnstwChanging(value);
					this.SendPropertyChanging();
					this._stw = value;
					this.SendPropertyChanged("stw");
					this.OnstwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictSID]", Storage="__dictSID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<System.Guid> _dictSID
		{
			get
			{
				return this.@__dictSID;
			}
			set
			{
				if ((this.@__dictSID != value))
				{
					this.On_dictSIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictSID = value;
					this.SendPropertyChanged("_dictSID");
					this.On_dictSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmt", DbType="VarChar(222)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string cmt
		{
			get
			{
				return this._cmt;
			}
			set
			{
				if ((this._cmt != value))
				{
					this.OncmtChanging(value);
					this.SendPropertyChanging();
					this._cmt = value;
					this.SendPropertyChanged("cmt");
					this.OncmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urle", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> urle
		{
			get
			{
				return this._urle;
			}
			set
			{
				if ((this._urle != value))
				{
					this.OnurleChanging(value);
					this.SendPropertyChanging();
					this._urle = value;
					this.SendPropertyChanged("urle");
					this.OnurleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtle", DbType="DateTime2")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<System.DateTime> dtle
		{
			get
			{
				return this._dtle;
			}
			set
			{
				if ((this._dtle != value))
				{
					this.OndtleChanging(value);
					this.SendPropertyChanging();
					this._dtle = value;
					this.SendPropertyChanged("dtle");
					this.OndtleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gt_kmh", DbType="Decimal(1,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<decimal> gt_kmh
		{
			get
			{
				return this._gt_kmh;
			}
			set
			{
				if ((this._gt_kmh != value))
				{
					this.Ongt_kmhChanging(value);
					this.SendPropertyChanging();
					this._gt_kmh = value;
					this.SendPropertyChanged("gt_kmh");
					this.Ongt_kmhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gt_kmh_dt", DbType="DateTime2")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<System.DateTime> gt_kmh_dt
		{
			get
			{
				return this._gt_kmh_dt;
			}
			set
			{
				if ((this._gt_kmh_dt != value))
				{
					this.Ongt_kmh_dtChanging(value);
					this.SendPropertyChanging();
					this._gt_kmh_dt = value;
					this.SendPropertyChanged("gt_kmh_dt");
					this.Ongt_kmh_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gt_kmh_us", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<int> gt_kmh_us
		{
			get
			{
				return this._gt_kmh_us;
			}
			set
			{
				if ((this._gt_kmh_us != value))
				{
					this.Ongt_kmh_usChanging(value);
					this.SendPropertyChanging();
					this._gt_kmh_us = value;
					this.SendPropertyChanged("gt_kmh_us");
					this.Ongt_kmh_usChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_got", DbType="Char(14)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string t_got
		{
			get
			{
				return this._t_got;
			}
			set
			{
				if ((this._t_got != value))
				{
					this.Ont_gotChanging(value);
					this.SendPropertyChanging();
					this._t_got = value;
					this.SendPropertyChanged("t_got");
					this.Ont_gotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_h_got", DbType="Char(14)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string h_got
		{
			get
			{
				return this._h_got;
			}
			set
			{
				if ((this._h_got != value))
				{
					this.Onh_gotChanging(value);
					this.SendPropertyChanging();
					this._h_got = value;
					this.SendPropertyChanged("h_got");
					this.Onh_gotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_got", DbType="Char(14)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public string s_got
		{
			get
			{
				return this._s_got;
			}
			set
			{
				if ((this._s_got != value))
				{
					this.Ons_gotChanging(value);
					this.SendPropertyChanging();
					this._s_got = value;
					this.SendPropertyChanged("s_got");
					this.Ons_gotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Route", DbType="VarChar(168)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public string Route
		{
			get
			{
				return this._Route;
			}
			set
			{
				if ((this._Route != value))
				{
					this.OnRouteChanging(value);
					this.SendPropertyChanging();
					this._Route = value;
					this.SendPropertyChanged("Route");
					this.OnRouteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qdu", DbType="Decimal(9,3)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public System.Nullable<decimal> qdu
		{
			get
			{
				return this._qdu;
			}
			set
			{
				if ((this._qdu != value))
				{
					this.OnqduChanging(value);
					this.SendPropertyChanging();
					this._qdu = value;
					this.SendPropertyChanged("qdu");
					this.OnqduChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<System.Guid> userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictS_TEID]", Storage="__dictS_TEID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public System.Nullable<System.Guid> _dictS_TEID
		{
			get
			{
				return this.@__dictS_TEID;
			}
			set
			{
				if ((this.@__dictS_TEID != value))
				{
					this.On_dictS_TEIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictS_TEID = value;
					this.SendPropertyChanged("_dictS_TEID");
					this.On_dictS_TEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_Specification_1", Storage="_Product", ThisKey="_Product_ID", OtherKey="ID", IsForeignKey=true)]
		public _dictNomen Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				_dictNomen previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Specification_1s.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Specification_1s.Add(this);
						this.@__Product_ID = value.ID;
					}
					else
					{
						this.@__Product_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_Specification_11", Storage="_Material", ThisKey="_Material_ID", OtherKey="ID", IsForeignKey=true)]
		public _dictNomen Material
		{
			get
			{
				return this._Material.Entity;
			}
			set
			{
				_dictNomen previousValue = this._Material.Entity;
				if (((previousValue != value) 
							|| (this._Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Material.Entity = null;
						previousValue.Specification_1s1.Remove(this);
					}
					this._Material.Entity = value;
					if ((value != null))
					{
						value.Specification_1s1.Add(this);
						this.@__Material_ID = value.ID;
					}
					else
					{
						this.@__Material_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Material");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderArticle_Specification_1", Storage="_OrderArticle", ThisKey="OrderArticleID", OtherKey="ID", IsForeignKey=true)]
		public OrderArticle OrderArticle
		{
			get
			{
				return this._OrderArticle.Entity;
			}
			set
			{
				OrderArticle previousValue = this._OrderArticle.Entity;
				if (((previousValue != value) 
							|| (this._OrderArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderArticle.Entity = null;
						previousValue.Specification_1s.Remove(this);
					}
					this._OrderArticle.Entity = value;
					if ((value != null))
					{
						value.Specification_1s.Add(this);
						this._OrderArticleID = value.ID;
					}
					else
					{
						this._OrderArticleID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("OrderArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictPVD_Specification_1", Storage="__dictPVD", ThisKey="_dictPVDID", OtherKey="ID", IsForeignKey=true)]
		public _dictPVD _dictPVD
		{
			get
			{
				return this.@__dictPVD.Entity;
			}
			set
			{
				_dictPVD previousValue = this.@__dictPVD.Entity;
				if (((previousValue != value) 
							|| (this.@__dictPVD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__dictPVD.Entity = null;
						previousValue.Specification_1s.Remove(this);
					}
					this.@__dictPVD.Entity = value;
					if ((value != null))
					{
						value.Specification_1s.Add(this);
						this.@__dictPVDID = value.ID;
					}
					else
					{
						this.@__dictPVDID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("_dictPVD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictUM_Specification_1", Storage="__dictUM", ThisKey="_dictUMID", OtherKey="ID", IsForeignKey=true)]
		public _dictUM _dictUM
		{
			get
			{
				return this.@__dictUM.Entity;
			}
			set
			{
				_dictUM previousValue = this.@__dictUM.Entity;
				if (((previousValue != value) 
							|| (this.@__dictUM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__dictUM.Entity = null;
						previousValue.Specification_1s.Remove(this);
					}
					this.@__dictUM.Entity = value;
					if ((value != null))
					{
						value.Specification_1s.Add(this);
						this.@__dictUMID = value.ID;
					}
					else
					{
						this.@__dictUMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("_dictUM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictSF_Specification_1", Storage="__dictSF", ThisKey="_dictSFID", OtherKey="ID", IsForeignKey=true)]
		public _dictSF _dictSF
		{
			get
			{
				return this.@__dictSF.Entity;
			}
			set
			{
				_dictSF previousValue = this.@__dictSF.Entity;
				if (((previousValue != value) 
							|| (this.@__dictSF.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__dictSF.Entity = null;
						previousValue.Specification_1s.Remove(this);
					}
					this.@__dictSF.Entity = value;
					if ((value != null))
					{
						value.Specification_1s.Add(this);
						this.@__dictSFID = value.ID;
					}
					else
					{
						this.@__dictSFID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("_dictSF");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictS_te_Specification_1", Storage="__dictS_te", ThisKey="_dictS_TEID", OtherKey="id", IsForeignKey=true)]
		public _dictS_te _dictS_te
		{
			get
			{
				return this.@__dictS_te.Entity;
			}
			set
			{
				_dictS_te previousValue = this.@__dictS_te.Entity;
				if (((previousValue != value) 
							|| (this.@__dictS_te.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__dictS_te.Entity = null;
						previousValue.Specification_1s.Remove(this);
					}
					this.@__dictS_te.Entity = value;
					if ((value != null))
					{
						value.Specification_1s.Add(this);
						this.@__dictS_TEID = value.id;
					}
					else
					{
						this.@__dictS_TEID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("_dictS_te");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dict_Specification_1", Storage="__dict", ThisKey="_dictSID", OtherKey="id", IsForeignKey=true)]
		public _dict _dict
		{
			get
			{
				return this.@__dict.Entity;
			}
			set
			{
				_dict previousValue = this.@__dict.Entity;
				if (((previousValue != value) 
							|| (this.@__dict.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__dict.Entity = null;
						previousValue.Specification_1s.Remove(this);
					}
					this.@__dict.Entity = value;
					if ((value != null))
					{
						value.Specification_1s.Add(this);
						this.@__dictSID = value.id;
					}
					else
					{
						this.@__dictSID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("_dict");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Product = default(EntityRef<_dictNomen>);
			this._Material = default(EntityRef<_dictNomen>);
			this._OrderArticle = default(EntityRef<OrderArticle>);
			this.@__dictPVD = default(EntityRef<_dictPVD>);
			this.@__dictUM = default(EntityRef<_dictUM>);
			this.@__dictSF = default(EntityRef<_dictSF>);
			this.@__dictS_te = default(EntityRef<_dictS_te>);
			this.@__dict = default(EntityRef<_dict>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Specification_2")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Specification_2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<System.DateTime> _StartDT;
		
		private System.Nullable<System.DateTime> _FinishDT;
		
		private System.Nullable<System.Guid> _OrderArticleID;
		
		private System.Nullable<System.Guid> @__dictS_TEID;
		
		private System.Nullable<System.Guid> @__Product_ID;
		
		private System.Nullable<System.Guid> @__Material_ID;
		
		private System.Nullable<decimal> _no;
		
		private System.Nullable<System.Guid> @__dictUMID;
		
		private System.Nullable<System.Guid> @__dictSID;
		
		private string _cmt;
		
		private System.Nullable<int> _urle;
		
		private System.Nullable<System.DateTime> _dtle;
		
		private System.Nullable<System.Guid> _userID;
		
		private EntityRef<_dictNomen> _Product;
		
		private EntityRef<_dictNomen> _Material;
		
		private EntityRef<OrderArticle> _OrderArticle;
		
		private EntityRef<_dictUM> @__dictUM;
		
		private EntityRef<_dictS_te> @__dictS_te;
		
		private EntityRef<_dict> @__dict;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnStartDTChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDTChanged();
    partial void OnFinishDTChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishDTChanged();
    partial void OnOrderArticleIDChanging(System.Nullable<System.Guid> value);
    partial void OnOrderArticleIDChanged();
    partial void On_dictS_TEIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictS_TEIDChanged();
    partial void On_Product_IDChanging(System.Nullable<System.Guid> value);
    partial void On_Product_IDChanged();
    partial void On_Material_IDChanging(System.Nullable<System.Guid> value);
    partial void On_Material_IDChanged();
    partial void OnnoChanging(System.Nullable<decimal> value);
    partial void OnnoChanged();
    partial void On_dictUMIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictUMIDChanged();
    partial void On_dictSIDChanging(System.Nullable<System.Guid> value);
    partial void On_dictSIDChanged();
    partial void OncmtChanging(string value);
    partial void OncmtChanged();
    partial void OnurleChanging(System.Nullable<int> value);
    partial void OnurleChanged();
    partial void OndtleChanging(System.Nullable<System.DateTime> value);
    partial void OndtleChanged();
    partial void OnuserIDChanging(System.Nullable<System.Guid> value);
    partial void OnuserIDChanged();
    #endregion
		
		public Specification_2()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDT", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> StartDT
		{
			get
			{
				return this._StartDT;
			}
			set
			{
				if ((this._StartDT != value))
				{
					this.OnStartDTChanging(value);
					this.SendPropertyChanging();
					this._StartDT = value;
					this.SendPropertyChanged("StartDT");
					this.OnStartDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishDT", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> FinishDT
		{
			get
			{
				return this._FinishDT;
			}
			set
			{
				if ((this._FinishDT != value))
				{
					this.OnFinishDTChanging(value);
					this.SendPropertyChanging();
					this._FinishDT = value;
					this.SendPropertyChanged("FinishDT");
					this.OnFinishDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderArticleID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.Guid> OrderArticleID
		{
			get
			{
				return this._OrderArticleID;
			}
			set
			{
				if ((this._OrderArticleID != value))
				{
					if (this._OrderArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderArticleIDChanging(value);
					this.SendPropertyChanging();
					this._OrderArticleID = value;
					this.SendPropertyChanged("OrderArticleID");
					this.OnOrderArticleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictS_TEID]", Storage="__dictS_TEID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.Guid> _dictS_TEID
		{
			get
			{
				return this.@__dictS_TEID;
			}
			set
			{
				if ((this.@__dictS_TEID != value))
				{
					this.On_dictS_TEIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictS_TEID = value;
					this.SendPropertyChanged("_dictS_TEID");
					this.On_dictS_TEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Product_ID]", Storage="__Product_ID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.Guid> _Product_ID
		{
			get
			{
				return this.@__Product_ID;
			}
			set
			{
				if ((this.@__Product_ID != value))
				{
					this.On_Product_IDChanging(value);
					this.SendPropertyChanging();
					this.@__Product_ID = value;
					this.SendPropertyChanged("_Product_ID");
					this.On_Product_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Material_ID]", Storage="__Material_ID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.Guid> _Material_ID
		{
			get
			{
				return this.@__Material_ID;
			}
			set
			{
				if ((this.@__Material_ID != value))
				{
					this.On_Material_IDChanging(value);
					this.SendPropertyChanging();
					this.@__Material_ID = value;
					this.SendPropertyChanged("_Material_ID");
					this.On_Material_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_no", DbType="Decimal(15,10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<decimal> no
		{
			get
			{
				return this._no;
			}
			set
			{
				if ((this._no != value))
				{
					this.OnnoChanging(value);
					this.SendPropertyChanging();
					this._no = value;
					this.SendPropertyChanged("no");
					this.OnnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictUMID]", Storage="__dictUMID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.Guid> _dictUMID
		{
			get
			{
				return this.@__dictUMID;
			}
			set
			{
				if ((this.@__dictUMID != value))
				{
					this.On_dictUMIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictUMID = value;
					this.SendPropertyChanged("_dictUMID");
					this.On_dictUMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictSID]", Storage="__dictSID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.Guid> _dictSID
		{
			get
			{
				return this.@__dictSID;
			}
			set
			{
				if ((this.@__dictSID != value))
				{
					this.On_dictSIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictSID = value;
					this.SendPropertyChanged("_dictSID");
					this.On_dictSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmt", DbType="VarChar(222)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string cmt
		{
			get
			{
				return this._cmt;
			}
			set
			{
				if ((this._cmt != value))
				{
					this.OncmtChanging(value);
					this.SendPropertyChanging();
					this._cmt = value;
					this.SendPropertyChanged("cmt");
					this.OncmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urle", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> urle
		{
			get
			{
				return this._urle;
			}
			set
			{
				if ((this._urle != value))
				{
					this.OnurleChanging(value);
					this.SendPropertyChanging();
					this._urle = value;
					this.SendPropertyChanged("urle");
					this.OnurleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtle", DbType="DateTime2")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<System.DateTime> dtle
		{
			get
			{
				return this._dtle;
			}
			set
			{
				if ((this._dtle != value))
				{
					this.OndtleChanging(value);
					this.SendPropertyChanging();
					this._dtle = value;
					this.SendPropertyChanged("dtle");
					this.OndtleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<System.Guid> userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_Specification_2", Storage="_Product", ThisKey="_Product_ID", OtherKey="ID", IsForeignKey=true)]
		public _dictNomen Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				_dictNomen previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Specification_2s.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Specification_2s.Add(this);
						this.@__Product_ID = value.ID;
					}
					else
					{
						this.@__Product_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_Specification_21", Storage="_Material", ThisKey="_Material_ID", OtherKey="ID", IsForeignKey=true)]
		public _dictNomen Material
		{
			get
			{
				return this._Material.Entity;
			}
			set
			{
				_dictNomen previousValue = this._Material.Entity;
				if (((previousValue != value) 
							|| (this._Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Material.Entity = null;
						previousValue.Specification_2s1.Remove(this);
					}
					this._Material.Entity = value;
					if ((value != null))
					{
						value.Specification_2s1.Add(this);
						this.@__Material_ID = value.ID;
					}
					else
					{
						this.@__Material_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Material");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderArticle_Specification_2", Storage="_OrderArticle", ThisKey="OrderArticleID", OtherKey="ID", IsForeignKey=true)]
		public OrderArticle OrderArticle
		{
			get
			{
				return this._OrderArticle.Entity;
			}
			set
			{
				OrderArticle previousValue = this._OrderArticle.Entity;
				if (((previousValue != value) 
							|| (this._OrderArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderArticle.Entity = null;
						previousValue.Specification_2s.Remove(this);
					}
					this._OrderArticle.Entity = value;
					if ((value != null))
					{
						value.Specification_2s.Add(this);
						this._OrderArticleID = value.ID;
					}
					else
					{
						this._OrderArticleID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("OrderArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictUM_Specification_2", Storage="__dictUM", ThisKey="_dictUMID", OtherKey="ID", IsForeignKey=true)]
		public _dictUM _dictUM
		{
			get
			{
				return this.@__dictUM.Entity;
			}
			set
			{
				_dictUM previousValue = this.@__dictUM.Entity;
				if (((previousValue != value) 
							|| (this.@__dictUM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__dictUM.Entity = null;
						previousValue.Specification_2s.Remove(this);
					}
					this.@__dictUM.Entity = value;
					if ((value != null))
					{
						value.Specification_2s.Add(this);
						this.@__dictUMID = value.ID;
					}
					else
					{
						this.@__dictUMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("_dictUM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictS_te_Specification_2", Storage="__dictS_te", ThisKey="_dictS_TEID", OtherKey="id", IsForeignKey=true)]
		public _dictS_te _dictS_te
		{
			get
			{
				return this.@__dictS_te.Entity;
			}
			set
			{
				_dictS_te previousValue = this.@__dictS_te.Entity;
				if (((previousValue != value) 
							|| (this.@__dictS_te.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__dictS_te.Entity = null;
						previousValue.Specification_2s.Remove(this);
					}
					this.@__dictS_te.Entity = value;
					if ((value != null))
					{
						value.Specification_2s.Add(this);
						this.@__dictS_TEID = value.id;
					}
					else
					{
						this.@__dictS_TEID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("_dictS_te");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dict_Specification_2", Storage="__dict", ThisKey="_dictSID", OtherKey="id", IsForeignKey=true)]
		public _dict _dict
		{
			get
			{
				return this.@__dict.Entity;
			}
			set
			{
				_dict previousValue = this.@__dict.Entity;
				if (((previousValue != value) 
							|| (this.@__dict.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__dict.Entity = null;
						previousValue.Specification_2s.Remove(this);
					}
					this.@__dict.Entity = value;
					if ((value != null))
					{
						value.Specification_2s.Add(this);
						this.@__dictSID = value.id;
					}
					else
					{
						this.@__dictSID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("_dict");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Product = default(EntityRef<_dictNomen>);
			this._Material = default(EntityRef<_dictNomen>);
			this._OrderArticle = default(EntityRef<OrderArticle>);
			this.@__dictUM = default(EntityRef<_dictUM>);
			this.@__dictS_te = default(EntityRef<_dictS_te>);
			this.@__dict = default(EntityRef<_dict>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Specification_3")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Specification_3 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.DateTime _StartDT;
		
		private System.DateTime _FinishDT;
		
		private System.Guid @__Product_ID;
		
		private System.Guid @__Material_ID;
		
		private string _cmt;
		
		private System.Nullable<int> _urle;
		
		private System.Nullable<System.DateTime> _dtle;
		
		private string _Route;
		
		private System.Nullable<System.Guid> _userID;
		
		private EntityRef<_dictNomen> @__dictNomen;
		
		private EntityRef<_dictNomen> @__dictNomen1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnStartDTChanging(System.DateTime value);
    partial void OnStartDTChanged();
    partial void OnFinishDTChanging(System.DateTime value);
    partial void OnFinishDTChanged();
    partial void On_Product_IDChanging(System.Guid value);
    partial void On_Product_IDChanged();
    partial void On_Material_IDChanging(System.Guid value);
    partial void On_Material_IDChanged();
    partial void OncmtChanging(string value);
    partial void OncmtChanged();
    partial void OnurleChanging(System.Nullable<int> value);
    partial void OnurleChanged();
    partial void OndtleChanging(System.Nullable<System.DateTime> value);
    partial void OndtleChanged();
    partial void OnRouteChanging(string value);
    partial void OnRouteChanged();
    partial void OnuserIDChanging(System.Nullable<System.Guid> value);
    partial void OnuserIDChanged();
    #endregion
		
		public Specification_3()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDT", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime StartDT
		{
			get
			{
				return this._StartDT;
			}
			set
			{
				if ((this._StartDT != value))
				{
					this.OnStartDTChanging(value);
					this.SendPropertyChanging();
					this._StartDT = value;
					this.SendPropertyChanged("StartDT");
					this.OnStartDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishDT", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime FinishDT
		{
			get
			{
				return this._FinishDT;
			}
			set
			{
				if ((this._FinishDT != value))
				{
					this.OnFinishDTChanging(value);
					this.SendPropertyChanging();
					this._FinishDT = value;
					this.SendPropertyChanged("FinishDT");
					this.OnFinishDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Product_ID]", Storage="__Product_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Guid _Product_ID
		{
			get
			{
				return this.@__Product_ID;
			}
			set
			{
				if ((this.@__Product_ID != value))
				{
					this.On_Product_IDChanging(value);
					this.SendPropertyChanging();
					this.@__Product_ID = value;
					this.SendPropertyChanged("_Product_ID");
					this.On_Product_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Material_ID]", Storage="__Material_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid _Material_ID
		{
			get
			{
				return this.@__Material_ID;
			}
			set
			{
				if ((this.@__Material_ID != value))
				{
					this.On_Material_IDChanging(value);
					this.SendPropertyChanging();
					this.@__Material_ID = value;
					this.SendPropertyChanged("_Material_ID");
					this.On_Material_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmt", DbType="VarChar(222)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string cmt
		{
			get
			{
				return this._cmt;
			}
			set
			{
				if ((this._cmt != value))
				{
					this.OncmtChanging(value);
					this.SendPropertyChanging();
					this._cmt = value;
					this.SendPropertyChanged("cmt");
					this.OncmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urle", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> urle
		{
			get
			{
				return this._urle;
			}
			set
			{
				if ((this._urle != value))
				{
					this.OnurleChanging(value);
					this.SendPropertyChanging();
					this._urle = value;
					this.SendPropertyChanged("urle");
					this.OnurleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtle", DbType="DateTime2")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> dtle
		{
			get
			{
				return this._dtle;
			}
			set
			{
				if ((this._dtle != value))
				{
					this.OndtleChanging(value);
					this.SendPropertyChanging();
					this._dtle = value;
					this.SendPropertyChanged("dtle");
					this.OndtleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Route", DbType="VarChar(168)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Route
		{
			get
			{
				return this._Route;
			}
			set
			{
				if ((this._Route != value))
				{
					this.OnRouteChanging(value);
					this.SendPropertyChanging();
					this._Route = value;
					this.SendPropertyChanged("Route");
					this.OnRouteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.Guid> userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_Specification_3", Storage="__dictNomen", ThisKey="_Product_ID", OtherKey="ID", IsForeignKey=true)]
		public _dictNomen _dictNomen
		{
			get
			{
				return this.@__dictNomen.Entity;
			}
			set
			{
				_dictNomen previousValue = this.@__dictNomen.Entity;
				if (((previousValue != value) 
							|| (this.@__dictNomen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__dictNomen.Entity = null;
						previousValue.Specification_3s = null;
					}
					this.@__dictNomen.Entity = value;
					if ((value != null))
					{
						value.Specification_3s = this;
						this.@__Product_ID = value.ID;
					}
					else
					{
						this.@__Product_ID = default(System.Guid);
					}
					this.SendPropertyChanged("_dictNomen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_Specification_31", Storage="__dictNomen1", ThisKey="_Material_ID", OtherKey="ID", IsForeignKey=true)]
		public _dictNomen _dictNomen1
		{
			get
			{
				return this.@__dictNomen1.Entity;
			}
			set
			{
				_dictNomen previousValue = this.@__dictNomen1.Entity;
				if (((previousValue != value) 
							|| (this.@__dictNomen1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__dictNomen1.Entity = null;
						previousValue.Specification_3s1 = null;
					}
					this.@__dictNomen1.Entity = value;
					if ((value != null))
					{
						value.Specification_3s1 = this;
						this.@__Material_ID = value.ID;
					}
					else
					{
						this.@__Material_ID = default(System.Guid);
					}
					this.SendPropertyChanged("_dictNomen1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this.@__dictNomen = default(EntityRef<_dictNomen>);
			this.@__dictNomen1 = default(EntityRef<_dictNomen>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ColumnWidth")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ColumnWidth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _UserID;
		
		private System.Guid _ClassificationTreeID;
		
		private System.Guid _ColumnID;
		
		private decimal _Width;
		
		private int _Index;
		
		private bool _Hidden;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnClassificationTreeIDChanging(System.Guid value);
    partial void OnClassificationTreeIDChanged();
    partial void OnColumnIDChanging(System.Guid value);
    partial void OnColumnIDChanged();
    partial void OnWidthChanging(decimal value);
    partial void OnWidthChanged();
    partial void OnIndexChanging(int value);
    partial void OnIndexChanged();
    partial void OnHiddenChanging(bool value);
    partial void OnHiddenChanged();
    #endregion
		
		public ColumnWidth()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationTreeID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid ClassificationTreeID
		{
			get
			{
				return this._ClassificationTreeID;
			}
			set
			{
				if ((this._ClassificationTreeID != value))
				{
					this.OnClassificationTreeIDChanging(value);
					this.SendPropertyChanging();
					this._ClassificationTreeID = value;
					this.SendPropertyChanged("ClassificationTreeID");
					this.OnClassificationTreeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Guid ColumnID
		{
			get
			{
				return this._ColumnID;
			}
			set
			{
				if ((this._ColumnID != value))
				{
					this.OnColumnIDChanging(value);
					this.SendPropertyChanging();
					this._ColumnID = value;
					this.SendPropertyChanged("ColumnID");
					this.OnColumnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Decimal(18,0) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public decimal Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Index]", Storage="_Index", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int Index
		{
			get
			{
				return this._Index;
			}
			set
			{
				if ((this._Index != value))
				{
					this.OnIndexChanging(value);
					this.SendPropertyChanging();
					this._Index = value;
					this.SendPropertyChanged("Index");
					this.OnIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged("Hidden");
					this.OnHiddenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TechnDates")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TechnDate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid @__dictNomenID;
		
		private System.Guid _OrderArticleID;
		
		private System.Nullable<System.DateTime> _gen_date;
		
		private System.Nullable<System.DateTime> _him_date;
		
		private System.Nullable<System.DateTime> _svar_date;
		
		private System.Nullable<System.DateTime> _techn_date;
		
		private EntityRef<_dictNomen> @__dictNomens;
		
		private EntityRef<OrderArticle> _OrderArticles;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_dictNomenIDChanging(System.Guid value);
    partial void On_dictNomenIDChanged();
    partial void OnOrderArticleIDChanging(System.Guid value);
    partial void OnOrderArticleIDChanged();
    partial void Ongen_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ongen_dateChanged();
    partial void Onhim_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onhim_dateChanged();
    partial void Onsvar_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onsvar_dateChanged();
    partial void Ontechn_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ontechn_dateChanged();
    #endregion
		
		public TechnDate()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictNomenID]", Storage="__dictNomenID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid _dictNomenID
		{
			get
			{
				return this.@__dictNomenID;
			}
			set
			{
				if ((this.@__dictNomenID != value))
				{
					this.On_dictNomenIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictNomenID = value;
					this.SendPropertyChanged("_dictNomenID");
					this.On_dictNomenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderArticleID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid OrderArticleID
		{
			get
			{
				return this._OrderArticleID;
			}
			set
			{
				if ((this._OrderArticleID != value))
				{
					this.OnOrderArticleIDChanging(value);
					this.SendPropertyChanging();
					this._OrderArticleID = value;
					this.SendPropertyChanged("OrderArticleID");
					this.OnOrderArticleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gen_date", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> gen_date
		{
			get
			{
				return this._gen_date;
			}
			set
			{
				if ((this._gen_date != value))
				{
					this.Ongen_dateChanging(value);
					this.SendPropertyChanging();
					this._gen_date = value;
					this.SendPropertyChanged("gen_date");
					this.Ongen_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_him_date", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> him_date
		{
			get
			{
				return this._him_date;
			}
			set
			{
				if ((this._him_date != value))
				{
					this.Onhim_dateChanging(value);
					this.SendPropertyChanging();
					this._him_date = value;
					this.SendPropertyChanged("him_date");
					this.Onhim_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_svar_date", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> svar_date
		{
			get
			{
				return this._svar_date;
			}
			set
			{
				if ((this._svar_date != value))
				{
					this.Onsvar_dateChanging(value);
					this.SendPropertyChanging();
					this._svar_date = value;
					this.SendPropertyChanged("svar_date");
					this.Onsvar_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_techn_date", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> techn_date
		{
			get
			{
				return this._techn_date;
			}
			set
			{
				if ((this._techn_date != value))
				{
					this.Ontechn_dateChanging(value);
					this.SendPropertyChanging();
					this._techn_date = value;
					this.SendPropertyChanged("techn_date");
					this.Ontechn_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TechnDate__dictNomen", Storage="__dictNomens", ThisKey="_dictNomenID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public _dictNomen _dictNomens
		{
			get
			{
				if ((this.serializing 
							&& (this.@__dictNomens.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this.@__dictNomens.Entity;
			}
			set
			{
				_dictNomen previousValue = this.@__dictNomens.Entity;
				if (((previousValue != value) 
							|| (this.@__dictNomens.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__dictNomens.Entity = null;
						previousValue.TechnDate = null;
					}
					this.@__dictNomens.Entity = value;
					if ((value != null))
					{
						value.TechnDate = this;
					}
					this.SendPropertyChanged("_dictNomens");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TechnDate_OrderArticle", Storage="_OrderArticles", ThisKey="OrderArticleID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public OrderArticle OrderArticles
		{
			get
			{
				if ((this.serializing 
							&& (this._OrderArticles.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._OrderArticles.Entity;
			}
			set
			{
				OrderArticle previousValue = this._OrderArticles.Entity;
				if (((previousValue != value) 
							|| (this._OrderArticles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderArticles.Entity = null;
						previousValue.TechnDate = null;
					}
					this._OrderArticles.Entity = value;
					if ((value != null))
					{
						value.TechnDate = this;
					}
					this.SendPropertyChanged("OrderArticles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this.@__dictNomens = default(EntityRef<_dictNomen>);
			this._OrderArticles = default(EntityRef<OrderArticle>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TechnReadiness")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TechnReadiness : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid @__dictNomenID;
		
		private System.Guid _OrderArticleID;
		
		private System.Nullable<System.DateTime> _him_date;
		
		private System.Nullable<System.DateTime> _svar_date;
		
		private System.Nullable<System.DateTime> _techn_date;
		
		private EntityRef<OrderArticle> _OrderArticle;
		
		private EntityRef<_dictNomen> @__dictNomen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_dictNomenIDChanging(System.Guid value);
    partial void On_dictNomenIDChanged();
    partial void OnOrderArticleIDChanging(System.Guid value);
    partial void OnOrderArticleIDChanged();
    partial void Onhim_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onhim_dateChanged();
    partial void Onsvar_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onsvar_dateChanged();
    partial void Ontechn_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ontechn_dateChanged();
    #endregion
		
		public TechnReadiness()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dictNomenID]", Storage="__dictNomenID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid _dictNomenID
		{
			get
			{
				return this.@__dictNomenID;
			}
			set
			{
				if ((this.@__dictNomenID != value))
				{
					this.On_dictNomenIDChanging(value);
					this.SendPropertyChanging();
					this.@__dictNomenID = value;
					this.SendPropertyChanged("_dictNomenID");
					this.On_dictNomenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderArticleID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid OrderArticleID
		{
			get
			{
				return this._OrderArticleID;
			}
			set
			{
				if ((this._OrderArticleID != value))
				{
					if (this._OrderArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderArticleIDChanging(value);
					this.SendPropertyChanging();
					this._OrderArticleID = value;
					this.SendPropertyChanged("OrderArticleID");
					this.OnOrderArticleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_him_date", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> him_date
		{
			get
			{
				return this._him_date;
			}
			set
			{
				if ((this._him_date != value))
				{
					this.Onhim_dateChanging(value);
					this.SendPropertyChanging();
					this._him_date = value;
					this.SendPropertyChanged("him_date");
					this.Onhim_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_svar_date", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> svar_date
		{
			get
			{
				return this._svar_date;
			}
			set
			{
				if ((this._svar_date != value))
				{
					this.Onsvar_dateChanging(value);
					this.SendPropertyChanging();
					this._svar_date = value;
					this.SendPropertyChanged("svar_date");
					this.Onsvar_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_techn_date", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> techn_date
		{
			get
			{
				return this._techn_date;
			}
			set
			{
				if ((this._techn_date != value))
				{
					this.Ontechn_dateChanging(value);
					this.SendPropertyChanging();
					this._techn_date = value;
					this.SendPropertyChanged("techn_date");
					this.Ontechn_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderArticle_TechnReadiness", Storage="_OrderArticle", ThisKey="OrderArticleID", OtherKey="ID", IsForeignKey=true)]
		public OrderArticle OrderArticle
		{
			get
			{
				return this._OrderArticle.Entity;
			}
			set
			{
				OrderArticle previousValue = this._OrderArticle.Entity;
				if (((previousValue != value) 
							|| (this._OrderArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderArticle.Entity = null;
						previousValue.TechnReadinesses = null;
					}
					this._OrderArticle.Entity = value;
					if ((value != null))
					{
						value.TechnReadinesses = this;
						this._OrderArticleID = value.ID;
					}
					else
					{
						this._OrderArticleID = default(System.Guid);
					}
					this.SendPropertyChanged("OrderArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_dictNomen_TechnReadiness", Storage="__dictNomen", ThisKey="_dictNomenID", OtherKey="ID", IsForeignKey=true)]
		public _dictNomen _dictNomen
		{
			get
			{
				return this.@__dictNomen.Entity;
			}
			set
			{
				_dictNomen previousValue = this.@__dictNomen.Entity;
				if (((previousValue != value) 
							|| (this.@__dictNomen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__dictNomen.Entity = null;
						previousValue.TechnReadinesses = null;
					}
					this.@__dictNomen.Entity = value;
					if ((value != null))
					{
						value.TechnReadinesses = this;
						this.@__dictNomenID = value.ID;
					}
					else
					{
						this.@__dictNomenID = default(System.Guid);
					}
					this.SendPropertyChanged("_dictNomen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._OrderArticle = default(EntityRef<OrderArticle>);
			this.@__dictNomen = default(EntityRef<_dictNomen>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GetClassificationTreeChildsResult
	{
		
		private System.Nullable<System.Guid> _id;
		
		public GetClassificationTreeChildsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Nullable<System.Guid> id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GetCustomClassificationTreeChildsResult
	{
		
		private System.Nullable<System.Guid> _NodeID;
		
		private System.Nullable<System.Guid> _ClassificationTreeID;
		
		public GetCustomClassificationTreeChildsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Nullable<System.Guid> NodeID
		{
			get
			{
				return this._NodeID;
			}
			set
			{
				if ((this._NodeID != value))
				{
					this._NodeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationTreeID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.Guid> ClassificationTreeID
		{
			get
			{
				return this._ClassificationTreeID;
			}
			set
			{
				if ((this._ClassificationTreeID != value))
				{
					this._ClassificationTreeID = value;
				}
			}
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GetDictionaryTreeParentsResult
	{
		
		private System.Guid _ID;
		
		private System.Nullable<int> _Level;
		
		public GetDictionaryTreeParentsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this._Level = value;
				}
			}
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GetNomenSuperFieldResult
	{
		
		private string _superfield;
		
		public GetNomenSuperFieldResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_superfield", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string superfield
		{
			get
			{
				return this._superfield;
			}
			set
			{
				if ((this._superfield != value))
				{
					this._superfield = value;
				}
			}
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GetNomenSuperFieldUaResult
	{
		
		private string _superfield;
		
		public GetNomenSuperFieldUaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_superfield", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string superfield
		{
			get
			{
				return this._superfield;
			}
			set
			{
				if ((this._superfield != value))
				{
					this._superfield = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
